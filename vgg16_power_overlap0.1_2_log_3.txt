Mon Apr 11 14:04:48 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 418.87.00    Driver Version: 418.87.00    CUDA Version: 10.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla V100-PCIE...  On   | 00000000:38:00.0 Off |                    0 |
| N/A   26C    P0    23W / 250W |      0MiB / 32480MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  Tesla V100-PCIE...  On   | 00000000:50:00.0 Off |                    0 |
| N/A   28C    P0    23W / 250W |      0MiB / 32480MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
/gs/software/cuda/10.1
[1,0]<stdout>:`bottleneck` is a tool that can be used as an initial step for debugging
[1,0]<stdout>:bottlenecks in your program.
[1,0]<stdout>:
[1,0]<stdout>:It summarizes runs of your script with the Python profiler and PyTorch's
[1,0]<stdout>:autograd profiler. Because your script will be profiled, please ensure that it
[1,0]<stdout>:exits in a finite amount of time.
[1,0]<stdout>:
[1,0]<stdout>:For more complicated uses of the profilers, please see
[1,0]<stdout>:https://docs.python.org/3/library/profile.html and
[1,0]<stdout>:https://pytorch.org/docs/master/autograd.html#profiler for more information.
[1,0]<stdout>:Running environment analysis...
[1,1]<stdout>:`bottleneck` is a tool that can be used as an initial step for debugging
[1,1]<stdout>:bottlenecks in your program.
[1,1]<stdout>:
[1,1]<stdout>:It summarizes runs of your script with the Python profiler and PyTorch's
[1,1]<stdout>:autograd profiler. Because your script will be profiled, please ensure that it
[1,1]<stdout>:exits in a finite amount of time.
[1,1]<stdout>:
[1,1]<stdout>:For more complicated uses of the profilers, please see
[1,1]<stdout>:https://docs.python.org/3/library/profile.html and
[1,1]<stdout>:https://pytorch.org/docs/master/autograd.html#profiler for more information.
[1,1]<stdout>:Running environment analysis...
[1,1]<stdout>:Running your script with cProfile
[1,0]<stdout>:Running your script with cProfile
[1,0]<stdout>:==> loading configs from ['configs/imagenet/vgg16_bn.py', 'configs/methods/wm0.py', 'configs/methods/fp16.py', 'configs/methods/int32.py']
[1,0]<stdout>:[train.save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:[seed] = 42
[1,0]<stdout>:[data]
[1,0]<stdout>:  [num_threads_per_worker] = 4
[1,0]<stdout>:[train]
[1,0]<stdout>:  [dgc] = False
[1,0]<stdout>:  [compression]
[1,0]<stdout>:    [func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:    [compress_ratio] = 0.05
[1,0]<stdout>:    [sample_ratio] = 0.01
[1,0]<stdout>:    [strided_sample] = True
[1,0]<stdout>:    [compress_upper_bound] = 1.3
[1,0]<stdout>:    [compress_lower_bound] = 0.8
[1,0]<stdout>:    [max_adaptation_iters] = 10
[1,0]<stdout>:    [resample] = True
[1,0]<stdout>:    [memory]
[1,0]<stdout>:      [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:      [momentum] = 0.9
[1,0]<stdout>:    [warmup_epochs] = 0
[1,0]<stdout>:    [fp16_values] = True
[1,0]<stdout>:    [int32_indices] = True
[1,0]<stdout>:  [criterion]
[1,0]<stdout>:    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
[1,0]<stdout>:  [optimizer]
[1,0]<stdout>:    [func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:    [momentum] = 0.9
[1,0]<stdout>:    [lr] = 0.0125
[1,0]<stdout>:    [weight_decay] = 5e-05
[1,0]<stdout>:  [schedule_lr_per_epoch] = True
[1,0]<stdout>:  [warmup_lr_epochs] = 5
[1,0]<stdout>:  [metric] = acc/test_top1
[1,0]<stdout>:  [meters]
[1,0]<stdout>:    [acc/{}_top1]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 1
[1,0]<stdout>:    [acc/{}_top5]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 5
[1,0]<stdout>:  [optimize_bn_separately] = False
[1,0]<stdout>:  [num_epochs] = 1
[1,0]<stdout>:  [batch_size] = 64
[1,0]<stdout>:  [scheduler]
[1,0]<stdout>:    [func] = <class 'torch.optim.lr_scheduler.MultiStepLR'>
[1,0]<stdout>:    [milestones] = [25, 55, 75]
[1,0]<stdout>:    [gamma] = 0.1
[1,0]<stdout>:  [topk] = False
[1,0]<stdout>:  [fp16] = False
[1,0]<stdout>:  [powersgd] = True
[1,0]<stdout>:  [sign] = False
[1,0]<stdout>:  [efsign] = False
[1,0]<stdout>:  [natural] = False
[1,0]<stdout>:  [onebit] = False
[1,0]<stdout>:  [qsgd] = False
[1,0]<stdout>:  [randomk] = False
[1,0]<stdout>:  [signum] = False
[1,0]<stdout>:  [terngrad] = False
[1,0]<stdout>:  [num_batches_per_step] = 1
[1,0]<stdout>:  [save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:  [checkpoint_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/e{epoch}-r0.pth
[1,0]<stdout>:  [latest_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/latest-r0.pth
[1,0]<stdout>:  [best_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/best-r0.pth
[1,0]<stdout>:[dataset]
[1,0]<stdout>:  [func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:  [root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [image_size] = 224
[1,0]<stdout>:[model]
[1,0]<stdout>:  [func] = <function vgg16_bn at 0x7f661a1d7b80>
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [init_weights] = True
[1,0]<stdout>:[device] = cuda[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:==> creating model "[func] = <function vgg16_bn at 0x7f661a1d7b80>
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[init_weights] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> creating dataset "[func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:[root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[image_size] = 224"
[1,0]<stdout>:
[1,0]<stdout>:==> loading dataset "{'num_workers': 4, 'pin_memory': True, 'multiprocessing_context': 'forkserver'}""
[1,0]<stdout>:
[1,0]<stdout>:==> creating optimizer "[func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:[momentum] = 0.9
[1,0]<stdout>:[lr] = 0.025
[1,0]<stdout>:[weight_decay] = 5e-05"
[1,1]<stdout>:powersgd init...
[1,0]<stdout>:
[1,0]<stdout>:==> creating compression "[func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:[compress_ratio] = 0.05
[1,0]<stdout>:[sample_ratio] = 0.01
[1,0]<stdout>:[strided_sample] = True
[1,0]<stdout>:[compress_upper_bound] = 1.3
[1,0]<stdout>:[compress_lower_bound] = 0.8
[1,0]<stdout>:[max_adaptation_iters] = 10
[1,0]<stdout>:[resample] = True
[1,0]<stdout>:[memory]
[1,0]<stdout>:  [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:  [momentum] = 0.9
[1,0]<stdout>:[warmup_epochs] = 0
[1,0]<stdout>:[fp16_values] = True
[1,0]<stdout>:[int32_indices] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> initializing powersgd compression
[1,0]<stdout>:powersgd init...
[1,0]<stdout>:
[1,0]<stdout>:==> train from scratch
[1,0]<stdout>:
[1,0]<stdout>:==> broadcasting paramters and optimizer state
[1,0]<stdout>:before evaluate
[1,1]<stdout>:before evaluate
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stderr>:test:   1%|▏         | 1/79 [00:05<07:24,  5.69s/it][1,1]<stderr>:test:   4%|▍         | 3/79 [00:05<01:57,  1.54s/it][1,0]<stderr>:test:   1%|▏         | 1/79 [00:06<07:48,  6.00s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:08<01:43,  1.40s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:08<01:49,  1.48s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:09<00:58,  1.21it/s][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:10<01:01,  1.14it/s][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:10<01:08,  1.03it/s][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:10<00:45,  1.48it/s][1,0]<stderr>:test:  14%|█▍        | 11/79 [00:10<00:45,  1.50it/s][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:11<00:41,  1.63it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:13<00:53,  1.23it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:13<01:01,  1.08it/s][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:13<00:41,  1.55it/s][1,0]<stderr>:test:  19%|█▉        | 15/79 [00:13<00:43,  1.46it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:15<00:44,  1.38it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:16<00:52,  1.18it/s][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:16<00:37,  1.60it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:16<00:39,  1.50it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:18<00:48,  1.18it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:19<00:54,  1.06it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:21<00:39,  1.36it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:22<00:41,  1.29it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:24<00:36,  1.38it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:24<00:36,  1.36it/s][1,0]<stderr>:test:  41%|████      | 32/79 [00:25<00:24,  1.91it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:26<00:31,  1.45it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:27<00:27,  1.62it/s][1,0]<stderr>:test:  43%|████▎     | 34/79 [00:28<00:33,  1.34it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:30<00:32,  1.30it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:30<00:26,  1.48it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:31<00:36,  1.16it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:32<00:27,  1.37it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:33<00:22,  1.62it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:33<00:29,  1.31it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:35<00:25,  1.31it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [00:35<00:18,  1.70it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:36<00:24,  1.37it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:38<00:23,  1.29it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:39<00:22,  1.35it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:40<00:17,  1.48it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:40<00:12,  1.89it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:42<00:18,  1.37it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:43<00:16,  1.31it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:44<00:15,  1.46it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:45<00:12,  1.48it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:47<00:12,  1.43it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:48<00:09,  1.46it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:50<00:09,  1.49it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [00:51<00:06,  1.44it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [00:52<00:06,  1.54it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [00:54<00:04,  1.34it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [00:55<00:04,  1.41it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [00:57<00:01,  1.33it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [00:57<00:00,  1.37it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [00:58<00:01,  1.43it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [00:58<00:00,  1.35it/s][1,1]<stdout>:after evaluate
[1,0]<stdout>:after evaluate
[1,0]<stdout>:[acc/test_top1] = 0.060000
[1,0]<stdout>:[acc/test_top5] = 0.560000
[1,1]<stderr>:
[1,0]<stdout>:
[1,0]<stdout>:==> training epoch 0/1[1,0]<stdout>:
[1,0]<stderr>:
[1,0]<stderr>:train:   0% 0/255 [00:00<?, ?it/s][1,0]<stderr>:train:   0% 1/255 [00:17<1:15:04, 17.73s/it][1,0]<stderr>:train:   1% 2/255 [00:18<33:48,  8.02s/it]  [1,0]<stderr>:train:   1% 3/255 [00:20<20:45,  4.94s/it][1,0]<stderr>:train:   2% 4/255 [00:21<14:29,  3.47s/it][1,0]<stderr>:train:   2% 5/255 [00:22<11:05,  2.66s/it][1,0]<stderr>:train:   2% 6/255 [00:23<09:02,  2.18s/it][1,0]<stderr>:train:   3% 7/255 [00:25<07:46,  1.88s/it][1,0]<stderr>:train:   3% 8/255 [00:26<07:02,  1.71s/it][1,0]<stderr>:train:   4% 9/255 [00:27<06:20,  1.55s/it][1,0]<stderr>:train:   4% 10/255 [00:28<05:52,  1.44s/it][1,0]<stderr>:train:   4% 11/255 [00:30<05:41,  1.40s/it][1,0]<stderr>:train:   5% 12/255 [00:31<05:22,  1.33s/it][1,0]<stderr>:train:   5% 13/255 [00:32<05:15,  1.30s/it][1,0]<stderr>:train:   5% 14/255 [00:33<05:09,  1.28s/it][1,0]<stderr>:train:   6% 15/255 [00:35<05:00,  1.25s/it][1,0]<stderr>:train:   6% 16/255 [00:36<04:55,  1.24s/it][1,0]<stderr>:train:   7% 17/255 [00:37<04:49,  1.22s/it][1,0]<stderr>:train:   7% 18/255 [00:38<04:49,  1.22s/it][1,0]<stderr>:train:   7% 19/255 [00:39<04:48,  1.22s/it][1,0]<stderr>:train:   8% 20/255 [00:41<04:44,  1.21s/it][1,0]<stderr>:train:   8% 21/255 [00:42<04:41,  1.20s/it][1,0]<stderr>:train:   9% 22/255 [00:43<04:38,  1.20s/it][1,0]<stderr>:train:   9% 23/255 [00:44<04:37,  1.20s/it][1,0]<stderr>:train:   9% 24/255 [00:45<04:34,  1.19s/it][1,0]<stderr>:train:  10% 25/255 [00:46<04:33,  1.19s/it][1,0]<stderr>:train:  10% 26/255 [00:48<04:34,  1.20s/it][1,0]<stderr>:train:  11% 27/255 [00:49<04:36,  1.21s/it][1,0]<stderr>:train:  11% 28/255 [00:50<04:32,  1.20s/it][1,0]<stderr>:train:  11% 29/255 [00:51<04:33,  1.21s/it][1,1]<stderr>:[2022-04-11 14:07:49.414069: W /tmp/pip-install-lsm0gah7/horovod_ff06a706aabc4776a0df0762645b4d60/horovod/common/response_cache.cc:158] A response has been evicted from cache which may indicate reduced performance. Better performance may be obtained by disabling caching (HOROVOD_CACHE_CAPACITY=0) or increasing the cache capacity (HOROVOD_CACHE_CAPACITY>1024).
[1,0]<stderr>:[2022-04-11 14:07:49.414064: W /tmp/pip-install-lsm0gah7/horovod_ff06a706aabc4776a0df0762645b4d60/horovod/common/response_cache.cc:158] A response has been evicted from cache which may indicate reduced performance. Better performance may be obtained by disabling caching (HOROVOD_CACHE_CAPACITY=0) or increasing the cache capacity (HOROVOD_CACHE_CAPACITY>1024).
[1,0]<stderr>:train:  12% 30/255 [00:53<04:38,  1.24s/it][1,0]<stderr>:train:  12% 31/255 [00:54<04:33,  1.22s/it][1,0]<stderr>:train:  13% 32/255 [00:55<04:28,  1.20s/it][1,0]<stderr>:train:  13% 33/255 [00:56<04:24,  1.19s/it][1,0]<stderr>:train:  13% 34/255 [00:57<04:28,  1.22s/it][1,0]<stderr>:train:  14% 35/255 [00:59<04:26,  1.21s/it][1,0]<stderr>:train:  14% 36/255 [01:00<04:23,  1.20s/it][1,0]<stderr>:train:  15% 37/255 [01:01<04:22,  1.20s/it][1,0]<stderr>:train:  15% 38/255 [01:02<04:19,  1.20s/it][1,0]<stderr>:train:  15% 39/255 [01:03<04:20,  1.20s/it][1,0]<stderr>:train:  16% 40/255 [01:05<04:17,  1.20s/it][1,0]<stderr>:train:  16% 41/255 [01:06<04:16,  1.20s/it][1,0]<stderr>:train:  16% 42/255 [01:07<04:15,  1.20s/it][1,0]<stderr>:train:  17% 43/255 [01:08<04:15,  1.20s/it][1,0]<stderr>:train:  17% 44/255 [01:09<04:14,  1.21s/it][1,0]<stderr>:train:  18% 45/255 [01:11<04:20,  1.24s/it][1,0]<stderr>:train:  18% 46/255 [01:12<04:17,  1.23s/it][1,0]<stderr>:train:  18% 47/255 [01:13<04:13,  1.22s/it][1,0]<stderr>:train:  19% 48/255 [01:14<04:15,  1.24s/it][1,0]<stderr>:train:  19% 49/255 [01:16<04:14,  1.23s/it][1,0]<stderr>:train:  20% 50/255 [01:17<04:10,  1.22s/it][1,0]<stderr>:train:  20% 51/255 [01:18<04:08,  1.22s/it][1,0]<stderr>:train:  20% 52/255 [01:19<04:05,  1.21s/it][1,0]<stderr>:train:  21% 53/255 [01:20<04:04,  1.21s/it][1,0]<stderr>:train:  21% 54/255 [01:22<04:04,  1.22s/it][1,0]<stderr>:train:  22% 55/255 [01:23<04:08,  1.24s/it][1,0]<stderr>:train:  22% 56/255 [01:24<04:06,  1.24s/it][1,0]<stderr>:train:  22% 57/255 [01:25<04:04,  1.23s/it][1,0]<stderr>:train:  23% 58/255 [01:27<04:00,  1.22s/it][1,0]<stderr>:train:  23% 59/255 [01:28<03:59,  1.22s/it][1,0]<stderr>:train:  24% 60/255 [01:29<03:55,  1.21s/it][1,0]<stderr>:train:  24% 61/255 [01:30<03:54,  1.21s/it][1,0]<stderr>:train:  24% 62/255 [01:31<03:51,  1.20s/it][1,0]<stderr>:train:  25% 63/255 [01:33<03:50,  1.20s/it][1,0]<stderr>:train:  25% 64/255 [01:34<03:53,  1.22s/it][1,0]<stderr>:train:  25% 65/255 [01:35<03:55,  1.24s/it][1,0]<stderr>:train:  26% 66/255 [01:36<03:53,  1.24s/it][1,0]<stderr>:train:  26% 67/255 [01:38<03:48,  1.22s/it][1,0]<stderr>:train:  27% 68/255 [01:39<03:47,  1.22s/it][1,0]<stderr>:train:  27% 69/255 [01:40<03:45,  1.21s/it][1,0]<stderr>:train:  27% 70/255 [01:41<03:44,  1.21s/it][1,0]<stderr>:train:  28% 71/255 [01:43<03:48,  1.24s/it][1,0]<stderr>:train:  28% 72/255 [01:44<03:45,  1.23s/it][1,0]<stderr>:train:  29% 73/255 [01:45<03:42,  1.22s/it][1,0]<stderr>:train:  29% 74/255 [01:46<03:39,  1.21s/it][1,0]<stderr>:train:  29% 75/255 [01:47<03:39,  1.22s/it][1,0]<stderr>:train:  30% 76/255 [01:49<03:39,  1.22s/it][1,0]<stderr>:train:  30% 77/255 [01:50<03:37,  1.22s/it][1,0]<stderr>:train:  31% 78/255 [01:51<03:36,  1.22s/it][1,0]<stderr>:train:  31% 79/255 [01:52<03:35,  1.22s/it][1,0]<stderr>:train:  31% 80/255 [01:53<03:31,  1.21s/it][1,0]<stderr>:train:  32% 81/255 [01:55<03:33,  1.22s/it][1,0]<stderr>:train:  32% 82/255 [01:56<03:36,  1.25s/it][1,0]<stderr>:train:  33% 83/255 [01:57<03:32,  1.23s/it][1,0]<stderr>:train:  33% 84/255 [01:58<03:32,  1.24s/it][1,0]<stderr>:train:  33% 85/255 [02:00<03:32,  1.25s/it][1,0]<stderr>:train:  34% 86/255 [02:01<03:34,  1.27s/it][1,0]<stderr>:train:  34% 87/255 [02:02<03:30,  1.25s/it][1,0]<stderr>:train:  35% 88/255 [02:03<03:24,  1.22s/it][1,0]<stderr>:train:  35% 89/255 [02:05<03:23,  1.22s/it][1,0]<stderr>:train:  35% 90/255 [02:06<03:26,  1.25s/it][1,0]<stderr>:train:  36% 91/255 [02:07<03:23,  1.24s/it][1,0]<stderr>:train:  36% 92/255 [02:08<03:20,  1.23s/it][1,0]<stderr>:train:  36% 93/255 [02:10<03:17,  1.22s/it][1,0]<stderr>:train:  37% 94/255 [02:11<03:15,  1.22s/it][1,0]<stderr>:train:  37% 95/255 [02:12<03:13,  1.21s/it][1,0]<stderr>:train:  38% 96/255 [02:13<03:12,  1.21s/it][1,0]<stderr>:train:  38% 97/255 [02:14<03:13,  1.23s/it][1,0]<stderr>:train:  38% 98/255 [02:16<03:13,  1.23s/it][1,0]<stderr>:train:  39% 99/255 [02:17<03:11,  1.23s/it][1,0]<stderr>:train:  39% 100/255 [02:18<03:10,  1.23s/it][1,0]<stderr>:train:  40% 101/255 [02:19<03:07,  1.21s/it][1,0]<stderr>:train:  40% 102/255 [02:21<03:08,  1.23s/it][1,0]<stderr>:train:  40% 103/255 [02:22<03:05,  1.22s/it][1,0]<stderr>:train:  41% 104/255 [02:23<03:03,  1.22s/it][1,0]<stderr>:train:  41% 105/255 [02:24<03:02,  1.21s/it][1,0]<stderr>:train:  42% 106/255 [02:25<03:00,  1.21s/it][1,0]<stderr>:train:  42% 107/255 [02:27<02:57,  1.20s/it][1,0]<stderr>:train:  42% 108/255 [02:28<02:56,  1.20s/it][1,0]<stderr>:train:  43% 109/255 [02:29<02:54,  1.19s/it][1,0]<stderr>:train:  43% 110/255 [02:30<02:53,  1.20s/it][1,0]<stderr>:train:  44% 111/255 [02:31<02:53,  1.20s/it][1,0]<stderr>:train:  44% 112/255 [02:33<02:51,  1.20s/it][1,0]<stderr>:train:  44% 113/255 [02:34<02:50,  1.20s/it][1,0]<stderr>:train:  45% 114/255 [02:35<02:49,  1.20s/it][1,0]<stderr>:train:  45% 115/255 [02:36<02:47,  1.20s/it][1,0]<stderr>:train:  45% 116/255 [02:37<02:48,  1.21s/it][1,0]<stderr>:train:  46% 117/255 [02:39<02:48,  1.22s/it][1,0]<stderr>:train:  46% 118/255 [02:40<02:46,  1.22s/it][1,0]<stderr>:train:  47% 119/255 [02:41<02:45,  1.22s/it][1,0]<stderr>:train:  47% 120/255 [02:42<02:45,  1.22s/it][1,0]<stderr>:train:  47% 121/255 [02:44<02:44,  1.23s/it][1,0]<stderr>:train:  48% 122/255 [02:45<02:42,  1.22s/it][1,0]<stderr>:train:  48% 123/255 [02:46<02:39,  1.21s/it][1,0]<stderr>:train:  49% 124/255 [02:47<02:38,  1.21s/it][1,0]<stderr>:train:  49% 125/255 [02:48<02:37,  1.21s/it][1,0]<stderr>:train:  49% 126/255 [02:50<02:36,  1.21s/it][1,0]<stderr>:train:  50% 127/255 [02:51<02:34,  1.21s/it][1,0]<stderr>:train:  50% 128/255 [02:52<02:33,  1.21s/it][1,0]<stderr>:train:  51% 129/255 [02:53<02:31,  1.20s/it][1,0]<stderr>:train:  51% 130/255 [02:54<02:30,  1.20s/it][1,0]<stderr>:train:  51% 131/255 [02:56<02:28,  1.20s/it][1,0]<stderr>:train:  52% 132/255 [02:57<02:27,  1.20s/it][1,0]<stderr>:train:  52% 133/255 [02:58<02:26,  1.20s/it][1,0]<stderr>:train:  53% 134/255 [02:59<02:26,  1.21s/it][1,0]<stderr>:train:  53% 135/255 [03:00<02:24,  1.20s/it][1,0]<stderr>:train:  53% 136/255 [03:02<02:23,  1.20s/it][1,0]<stderr>:train:  54% 137/255 [03:03<02:25,  1.24s/it][1,0]<stderr>:train:  54% 138/255 [03:04<02:23,  1.23s/it][1,0]<stderr>:train:  55% 139/255 [03:05<02:21,  1.22s/it][1,0]<stderr>:train:  55% 140/255 [03:07<02:22,  1.24s/it][1,0]<stderr>:train:  55% 141/255 [03:08<02:21,  1.24s/it][1,0]<stderr>:train:  56% 142/255 [03:09<02:20,  1.25s/it][1,0]<stderr>:train:  56% 143/255 [03:10<02:18,  1.24s/it][1,0]<stderr>:train:  56% 144/255 [03:12<02:17,  1.24s/it][1,0]<stderr>:train:  57% 145/255 [03:13<02:18,  1.26s/it][1,0]<stderr>:train:  57% 146/255 [03:14<02:16,  1.25s/it][1,0]<stderr>:train:  58% 147/255 [03:15<02:13,  1.23s/it][1,0]<stderr>:train:  58% 148/255 [03:17<02:11,  1.23s/it][1,0]<stderr>:train:  58% 149/255 [03:18<02:11,  1.24s/it][1,0]<stderr>:train:  59% 150/255 [03:19<02:09,  1.23s/it][1,0]<stderr>:train:  59% 151/255 [03:20<02:07,  1.22s/it][1,0]<stderr>:train:  60% 152/255 [03:21<02:05,  1.21s/it][1,0]<stderr>:train:  60% 153/255 [03:23<02:05,  1.23s/it][1,0]<stderr>:train:  60% 154/255 [03:24<02:06,  1.25s/it][1,0]<stderr>:train:  61% 155/255 [03:25<02:03,  1.24s/it][1,0]<stderr>:train:  61% 156/255 [03:26<02:01,  1.23s/it][1,0]<stderr>:train:  62% 157/255 [03:28<01:59,  1.22s/it][1,0]<stderr>:train:  62% 158/255 [03:29<01:59,  1.23s/it][1,0]<stderr>:train:  62% 159/255 [03:30<01:58,  1.23s/it][1,0]<stderr>:train:  63% 160/255 [03:31<01:56,  1.23s/it][1,0]<stderr>:train:  63% 161/255 [03:33<01:57,  1.25s/it][1,0]<stderr>:train:  64% 162/255 [03:34<01:56,  1.25s/it][1,0]<stderr>:train:  64% 163/255 [03:35<01:54,  1.24s/it][1,0]<stderr>:train:  64% 164/255 [03:36<01:51,  1.23s/it][1,0]<stderr>:train:  65% 165/255 [03:37<01:49,  1.22s/it][1,0]<stderr>:train:  65% 166/255 [03:39<01:49,  1.23s/it][1,0]<stderr>:train:  65% 167/255 [03:40<01:48,  1.23s/it][1,0]<stderr>:train:  66% 168/255 [03:41<01:46,  1.23s/it][1,0]<stderr>:train:  66% 169/255 [03:42<01:45,  1.23s/it][1,0]<stderr>:train:  67% 170/255 [03:44<01:44,  1.23s/it][1,0]<stderr>:train:  67% 171/255 [03:45<01:42,  1.22s/it][1,0]<stderr>:train:  67% 172/255 [03:46<01:42,  1.24s/it][1,0]<stderr>:train:  68% 173/255 [03:47<01:41,  1.23s/it][1,0]<stderr>:train:  68% 174/255 [03:49<01:40,  1.24s/it][1,0]<stderr>:train:  69% 175/255 [03:50<01:38,  1.23s/it][1,0]<stderr>:train:  69% 176/255 [03:51<01:36,  1.22s/it][1,0]<stderr>:train:  69% 177/255 [03:52<01:34,  1.21s/it][1,0]<stderr>:train:  70% 178/255 [03:53<01:33,  1.22s/it][1,0]<stderr>:train:  70% 179/255 [03:55<01:33,  1.23s/it][1,0]<stderr>:train:  71% 180/255 [03:56<01:32,  1.23s/it][1,0]<stderr>:train:  71% 181/255 [03:57<01:30,  1.22s/it][1,0]<stderr>:train:  71% 182/255 [03:58<01:29,  1.23s/it][1,0]<stderr>:train:  72% 183/255 [04:00<01:28,  1.22s/it][1,0]<stderr>:train:  72% 184/255 [04:01<01:27,  1.23s/it][1,0]<stderr>:train:  73% 185/255 [04:02<01:25,  1.22s/it][1,0]<stderr>:train:  73% 186/255 [04:03<01:23,  1.21s/it][1,0]<stderr>:train:  73% 187/255 [04:05<01:25,  1.25s/it][1,0]<stderr>:train:  74% 188/255 [04:06<01:25,  1.28s/it][1,0]<stderr>:train:  74% 189/255 [04:07<01:22,  1.26s/it][1,0]<stderr>:train:  75% 190/255 [04:08<01:21,  1.25s/it][1,0]<stderr>:train:  75% 191/255 [04:10<01:19,  1.24s/it][1,0]<stderr>:train:  75% 192/255 [04:11<01:18,  1.24s/it][1,0]<stderr>:train:  76% 193/255 [04:12<01:17,  1.25s/it][1,0]<stderr>:train:  76% 194/255 [04:13<01:16,  1.25s/it][1,0]<stderr>:train:  76% 195/255 [04:15<01:14,  1.25s/it][1,0]<stderr>:train:  77% 196/255 [04:16<01:13,  1.24s/it][1,0]<stderr>:train:  77% 197/255 [04:17<01:10,  1.22s/it][1,0]<stderr>:train:  78% 198/255 [04:18<01:09,  1.22s/it][1,0]<stderr>:train:  78% 199/255 [04:19<01:09,  1.24s/it][1,0]<stderr>:train:  78% 200/255 [04:21<01:07,  1.23s/it][1,0]<stderr>:train:  79% 201/255 [04:22<01:07,  1.25s/it][1,0]<stderr>:train:  79% 202/255 [04:23<01:05,  1.24s/it][1,0]<stderr>:train:  80% 203/255 [04:25<01:06,  1.27s/it][1,0]<stderr>:train:  80% 204/255 [04:26<01:03,  1.25s/it][1,0]<stderr>:train:  80% 205/255 [04:27<01:02,  1.24s/it][1,0]<stderr>:train:  81% 206/255 [04:28<01:00,  1.23s/it][1,0]<stderr>:train:  81% 207/255 [04:29<00:59,  1.24s/it][1,0]<stderr>:train:  82% 208/255 [04:31<00:58,  1.24s/it][1,0]<stderr>:train:  82% 209/255 [04:32<00:56,  1.23s/it][1,0]<stderr>:train:  82% 210/255 [04:33<00:54,  1.22s/it][1,0]<stderr>:train:  83% 211/255 [04:34<00:53,  1.22s/it][1,0]<stderr>:train:  83% 212/255 [04:36<00:52,  1.22s/it][1,0]<stderr>:train:  84% 213/255 [04:37<00:50,  1.21s/it][1,0]<stderr>:train:  84% 214/255 [04:38<00:49,  1.20s/it][1,0]<stderr>:train:  84% 215/255 [04:39<00:50,  1.25s/it][1,0]<stderr>:train:  85% 216/255 [04:40<00:48,  1.25s/it][1,0]<stderr>:train:  85% 217/255 [04:42<00:47,  1.24s/it][1,0]<stderr>:train:  85% 218/255 [04:43<00:46,  1.25s/it][1,0]<stderr>:train:  86% 219/255 [04:44<00:46,  1.30s/it][1,0]<stderr>:train:  86% 220/255 [04:46<00:44,  1.27s/it][1,0]<stderr>:train:  87% 221/255 [04:47<00:42,  1.24s/it][1,0]<stderr>:train:  87% 222/255 [04:48<00:41,  1.24s/it][1,0]<stderr>:train:  87% 223/255 [04:49<00:39,  1.23s/it][1,0]<stderr>:train:  88% 224/255 [04:50<00:37,  1.22s/it][1,0]<stderr>:train:  88% 225/255 [04:52<00:36,  1.23s/it][1,0]<stderr>:train:  89% 226/255 [04:53<00:35,  1.24s/it][1,0]<stderr>:train:  89% 227/255 [04:54<00:34,  1.24s/it][1,0]<stderr>:train:  89% 228/255 [04:55<00:33,  1.24s/it][1,0]<stderr>:train:  90% 229/255 [04:57<00:31,  1.22s/it][1,0]<stderr>:train:  90% 230/255 [04:58<00:30,  1.21s/it][1,0]<stderr>:train:  91% 231/255 [04:59<00:29,  1.21s/it][1,0]<stderr>:train:  91% 232/255 [05:00<00:27,  1.21s/it][1,0]<stderr>:train:  91% 233/255 [05:01<00:26,  1.22s/it][1,0]<stderr>:train:  92% 234/255 [05:03<00:25,  1.21s/it][1,0]<stderr>:train:  92% 235/255 [05:04<00:24,  1.21s/it][1,0]<stderr>:train:  93% 236/255 [05:05<00:23,  1.22s/it][1,0]<stderr>:train:  93% 237/255 [05:06<00:21,  1.21s/it][1,0]<stderr>:train:  93% 238/255 [05:07<00:20,  1.21s/it][1,0]<stderr>:train:  94% 239/255 [05:09<00:19,  1.22s/it][1,0]<stderr>:train:  94% 240/255 [05:10<00:18,  1.23s/it][1,0]<stderr>:train:  95% 241/255 [05:11<00:17,  1.22s/it][1,0]<stderr>:train:  95% 242/255 [05:12<00:15,  1.21s/it][1,0]<stderr>:train:  95% 243/255 [05:14<00:14,  1.22s/it][1,0]<stderr>:train:  96% 244/255 [05:15<00:13,  1.20s/it][1,0]<stderr>:train:  96% 245/255 [05:16<00:11,  1.20s/it][1,0]<stderr>:train:  96% 246/255 [05:17<00:10,  1.20s/it][1,0]<stderr>:train:  97% 247/255 [05:18<00:09,  1.21s/it][1,0]<stderr>:train:  97% 248/255 [05:20<00:08,  1.21s/it][1,0]<stderr>:train:  98% 249/255 [05:21<00:07,  1.20s/it][1,0]<stderr>:train:  98% 250/255 [05:22<00:05,  1.19s/it][1,0]<stderr>:train:  98% 251/255 [05:23<00:04,  1.18s/it][1,0]<stderr>:train:  99% 252/255 [05:24<00:03,  1.18s/it][1,0]<stderr>:train:  99% 253/255 [05:25<00:02,  1.18s/it][1,0]<stderr>:train: 100% 254/255 [05:27<00:01,  1.17s/it][1,0]<stderr>:train: 100% 255/255 [05:27<00:00,  1.03it/s][1,0]<stderr>:train: 100% 255/255 [05:27<00:00,  1.28s/it][1,1]<stdout>:         827178 function calls (813351 primitive calls) in 328.605 seconds
[1,1]<stdout>:
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:      255  307.198    1.205  307.198    1.205 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:        4   13.509    3.377   13.509    3.377 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:      817    3.800    0.005    3.800    0.005 {method 'acquire' of '_thread.lock' objects}
[1,1]<stdout>:    10965    0.691    0.000    0.691    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:     3315    0.407    0.000    0.407    0.000 {built-in method conv2d}
[1,1]<stdout>:    29580    0.404    0.000    0.404    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    15045    0.295    0.000    0.295    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.234    0.000    0.234    0.000 {built-in method batch_norm}
[1,1]<stdout>:    14790    0.170    0.000    0.170    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.139    0.000    0.472    0.000 batchnorm.py:99(forward)
[1,1]<stdout>:      255    0.113    0.000    0.455    0.002 optimizer.py:232(synchronize)
[1,1]<stdout>:    88740    0.110    0.000    0.128    0.000 tensor.py:725(grad)
[1,1]<stdout>:14280/510    0.108    0.000    1.429    0.003 module.py:710(_call_impl)
[1,1]<stdout>:     4080    0.107    0.000    0.107    0.000 {built-in method mm}
[1,1]<stdout>:      255    0.086    0.000    0.834    0.003 sgd.py:75(step)
[1,1]<stdout>:     3825    0.080    0.000    0.080    0.000 {built-in method relu_}
[1,1]<stdout>:        1    0.069    0.069  328.605  328.605 train.py:338(train)
[1,1]<stdout>:     1275    0.063    0.000    0.063    0.000 {built-in method max_pool2d}
[1,1]<stdout>:      510    0.062    0.000    0.062    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        8    0.062    0.008    0.063    0.008 {method 'dump' of '_pickle.Pickler' objects}
[1,1]<stdout>:      765    0.059    0.000    0.059    0.000 {built-in method addmm}
[1,1]<stdout>:    14790    0.044    0.000    0.044    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.042    0.000    0.282    0.001 optimizer.py:166(zero_grad)
[1,1]<stdout>:     4845    0.032    0.000    0.032    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.029    0.000    1.356    0.003 container.py:115(forward)
[1,1]<stdout>:       14    0.029    0.002    0.029    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:     3370    0.027    0.000    0.033    0.000 module.py:774(__setattr__)
[1,1]<stdout>:    29070    0.026    0.000    0.026    0.000 module.py:758(__getattr__)
[1,1]<stdout>:     4080    0.026    0.000    0.026    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.022    0.000    0.279    0.000 functional.py:1998(batch_norm)
[1,1]<stdout>:      511    0.022    0.000    0.022    0.000 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.021    0.000    0.021    0.000 {built-in method dropout}
[1,1]<stdout>:    44370    0.019    0.000    0.031    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:    90530    0.019    0.000    0.019    0.000 {built-in method builtins.hasattr}
[1,1]<stdout>:    14790    0.018    0.000    0.176    0.000 compression.py:363(decompress)
[1,1]<stdout>:    10965    0.018    0.000    0.712    0.000 mpi_ops.py:928(synchronize)
[1,1]<stdout>:    14790    0.017    0.000    0.017    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    85070    0.016    0.000    0.016    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:    10710    0.015    0.000    0.015    0.000 __init__.py:2277(is_scripting)
[1,1]<stdout>:    14280    0.015    0.000    0.015    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:      256    0.014    0.000    0.025    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:     3315    0.012    0.000    0.421    0.000 conv.py:410(_conv_forward)
[1,1]<stdout>:    44399    0.011    0.000    0.011    0.000 {built-in method builtins.id}
[1,1]<stdout>:    14790    0.011    0.000    0.048    0.000 optimizer.py:298(<listcomp>)
[1,1]<stdout>:     3315    0.011    0.000    0.012    0.000 functional.py:1980(_verify_batch_size)
[1,1]<stdout>:     3315    0.011    0.000    0.436    0.000 conv.py:418(forward)
[1,1]<stdout>:      255    0.011    0.000    0.011    0.000 {built-in method torch._C._nn.nll_loss}
[1,1]<stdout>:      269    0.010    0.000    0.010    0.000 {method 'clear' of 'dict' objects}
[1,1]<stdout>:    57630    0.010    0.000    0.010    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:51533/51530    0.010    0.000    0.010    0.000 {built-in method builtins.len}
[1,1]<stdout>:      255    0.009    0.000    0.009    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.009    0.000    0.712    0.003 {built-in method apply}
[1,1]<stdout>:     3825    0.008    0.000    0.102    0.000 functional.py:1106(relu)
[1,1]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method ones_like}
[1,1]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method tensor}
[1,1]<stdout>:     4080    0.007    0.000    0.007    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,1]<stdout>:     3825    0.007    0.000    0.109    0.000 activation.py:101(forward)
[1,1]<stdout>:      765    0.006    0.000    0.079    0.000 functional.py:1655(linear)
[1,1]<stdout>:     1275    0.006    0.000    0.076    0.000 pooling.py:156(forward)
[1,1]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        8    0.005    0.001    0.068    0.009 reduction.py:58(dump)
[1,1]<stdout>:      255    0.005    0.000    1.301    0.005 optimizer.py:337(step)
[1,1]<stdout>:      255    0.004    0.000  307.217    1.205 tensor.py:155(backward)
[1,1]<stdout>:      255    0.004    0.000    1.390    0.005 vgg.py:42(forward)
[1,1]<stdout>:      510    0.004    0.000    0.027    0.000 functional.py:950(dropout)
[1,1]<stdout>:      256    0.004    0.000    3.880    0.015 dataloader.py:945(_next_data)
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      256    0.004    0.000    0.004    0.000 basics.py:183(size)
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {built-in method flatten}
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:    16573    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
[1,1]<stdout>:      255    0.003    0.000    0.007    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:     1275    0.003    0.000    0.070    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:     1275    0.003    0.000    0.066    0.000 functional.py:564(_max_pool2d)
[1,1]<stdout>:      255    0.003    0.000  307.212    1.205 __init__.py:57(backward)
[1,1]<stdout>:      255    0.003    0.000    3.804    0.015 queue.py:153(get)
[1,1]<stdout>:     3315    0.003    0.000    0.005    0.000 batchnorm.py:275(_check_input_dim)
[1,1]<stdout>:    10975    0.003    0.000    0.003    0.000 {method 'pop' of 'dict' objects}
[1,1]<stdout>:      521    0.003    0.000    0.006    0.000 threading.py:341(notify)
[1,1]<stdout>:      255    0.003    0.000    1.304    0.005 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:      263    0.003    0.000    0.039    0.000 dataloader.py:991(_try_put_index)
[1,1]<stdout>:      255    0.003    0.000    0.715    0.003 mpi_ops.py:209(allreduce)
[1,1]<stdout>:      765    0.003    0.000    0.083    0.000 linear.py:90(forward)
[1,1]<stdout>:      255    0.003    0.000    3.811    0.015 dataloader.py:912(_get_data)
[1,1]<stdout>:        1    0.003    0.003    0.003    0.003 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,1]<stdout>:      255    0.003    0.000    0.011    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:    10114    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:      255    0.003    0.000    0.015    0.000 functional.py:2158(nll_loss)
[1,1]<stdout>:     4335    0.003    0.000    0.003    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      260    0.003    0.000    0.012    0.000 queues.py:80(put)
[1,1]<stdout>:      255    0.002    0.000    0.841    0.003 grad_mode.py:12(decorate_context)
[1,1]<stdout>:      255    0.002    0.000    0.018    0.000 mpi_ops.py:105(_allreduce_async)
[1,1]<stdout>:      269    0.002    0.000    0.002    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:      255    0.002    0.000    0.284    0.001 optimizer.py:353(zero_grad)
[1,1]<stdout>:      255    0.002    0.000    0.026    0.000 mpi_ops.py:152(allreduce_async)
[1,1]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,1]<stdout>:      255    0.002    0.000    0.027    0.000 functional.py:2370(cross_entropy)
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:      255    0.002    0.000    0.029    0.000 loss.py:946(forward)
[1,1]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,1]<stdout>:      256    0.002    0.000   17.479    0.068 std.py:1159(__iter__)
[1,1]<stdout>:      255    0.002    0.000    0.015    0.000 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:      255    0.002    0.000    0.703    0.003 mpi_ops.py:191(forward)
[1,1]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:       13    0.001    0.000    0.001    0.000 {built-in method posix.pipe}
[1,1]<stdout>:      255    0.001    0.000    3.805    0.015 dataloader.py:766(_try_get_data)
[1,1]<stdout>:      765    0.001    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:      255    0.001    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,1]<stdout>:      510    0.001    0.000    0.028    0.000 dropout.py:57(forward)
[1,1]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,1]<stdout>:      255    0.001    0.000    0.016    0.000 pooling.py:1110(forward)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,1]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:      256    0.001    0.000    3.881    0.015 dataloader.py:362(__next__)
[1,1]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,1]<stdout>:      255    0.001    0.000    0.032    0.000 dataloader.py:1010(_process_data)
[1,1]<stdout>:        6    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,1]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,1]<stdout>:      527    0.001    0.000    0.002    0.000 threading.py:246(__enter__)
[1,1]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 _VF.py:13(__getattr__)
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:       80    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:      255    0.001    0.000    0.007    0.000 mpi_ops.py:92(_check_function)
[1,1]<stdout>:      875    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:      255    0.001    0.000    0.010    0.000 functional.py:1567(log_softmax)
[1,1]<stdout>:      266    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:      601    0.001    0.000    0.026    0.000 {built-in method builtins.next}
[1,1]<stdout>:      256    0.001    0.000    0.002    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:      531    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:        1    0.001    0.001    0.005    0.005 distributed.py:68(__iter__)
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 {built-in method torch._C.is_grad_enabled}
[1,1]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:      263    0.000    0.000    0.025    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:      512    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 util.py:221(impl)
[1,1]<stdout>:        4    0.000    0.000   13.580    3.395 popen_forkserver.py:41(_launch)
[1,1]<stdout>:      291    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,1]<stdout>:      259    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,1]<stdout>:        1    0.000    0.000   13.595   13.595 dataloader.py:690(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.030    0.002 connection.py:917(wait)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,1]<stdout>:       34    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:158(_start_thread)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,1]<stdout>:      527    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,1]<stdout>:      275    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:      269    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,1]<stdout>:       15    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,1]<stdout>:        1    0.000    0.000  328.605  328.605 {built-in method builtins.exec}
[1,1]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,1]<stdout>:      258    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,1]<stdout>:        1    0.000    0.000  328.605  328.605 <string>:1(<module>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,1]<stdout>:        2    0.000    0.000    0.032    0.016 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,1]<stdout>:       10    0.000    0.000    3.798    0.380 threading.py:270(wait)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,1]<stdout>:       36    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 context.py:100(Queue)
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:36(__init__)
[1,1]<stdout>:      275    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,1]<stdout>:       14    0.000    0.000    0.029    0.002 selectors.py:402(select)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,1]<stdout>:        4    0.000    0.000    0.002    0.001 forkserver.py:76(connect_to_new_process)
[1,1]<stdout>:       25    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:       44    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,1]<stdout>:        4    0.000    0.000   13.581    3.395 process.py:110(start)
[1,1]<stdout>:        4    0.000    0.000    0.029    0.007 popen_fork.py:40(wait)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,1]<stdout>:       16    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,1]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,1]<stdout>:       11    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 context.py:65(Lock)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,1]<stdout>:        6    0.000    0.000    0.003    0.001 threading.py:834(start)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:        4    0.000    0.000   13.580    3.395 popen_fork.py:15(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,1]<stdout>:      298    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,1]<stdout>:        4    0.000    0.000    0.029    0.007 process.py:142(join)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 resource_tracker.py:134(_check_alive)
[1,1]<stdout>:      100    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:       50    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,1]<stdout>:        6    0.000    0.000    0.002    0.000 threading.py:540(wait)
[1,1]<stdout>:        4    0.000    0.000   13.580    3.395 context.py:288(_Popen)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:       36    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x5632ab2739a0}
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,1]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:145(register)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f1d9e5b8c10}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,1]<stdout>:       70    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,1]<stdout>:        4    0.000    0.000   13.580    3.395 popen_forkserver.py:33(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,1]<stdout>:       23    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,1]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:104(acquire)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,1]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.001    0.001 threading.py:979(join)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,1]<stdout>:        1    0.000    0.000   13.595   13.595 dataloader.py:287(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:108(release)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,1]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:this epoch's train spend:328.61855912208557s
[1,0]<stdout>:         873485 function calls (859658 primitive calls) in 327.650 seconds
[1,0]<stdout>:
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:      255  307.088    1.204  307.088    1.204 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,0]<stdout>:        4   12.529    3.132   12.529    3.132 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:     1072    3.638    0.003    3.638    0.003 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:    10965    0.777    0.000    0.777    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:     3315    0.383    0.000    0.383    0.000 {built-in method conv2d}
[1,0]<stdout>:    29580    0.375    0.000    0.375    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    15045    0.273    0.000    0.273    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.230    0.000    0.230    0.000 {built-in method batch_norm}
[1,0]<stdout>:    14790    0.165    0.000    0.165    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.134    0.000    0.460    0.000 batchnorm.py:99(forward)
[1,0]<stdout>:      255    0.110    0.000    0.445    0.002 optimizer.py:232(synchronize)
[1,0]<stdout>:14280/510    0.106    0.000    1.402    0.003 module.py:710(_call_impl)
[1,0]<stdout>:     4080    0.106    0.000    0.106    0.000 {built-in method mm}
[1,0]<stdout>:    88740    0.101    0.000    0.116    0.000 tensor.py:725(grad)
[1,0]<stdout>:      510    0.101    0.000    0.101    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      267    0.090    0.000    0.090    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      255    0.084    0.000    0.777    0.003 sgd.py:75(step)
[1,0]<stdout>:        8    0.080    0.010    0.080    0.010 {method 'dump' of '_pickle.Pickler' objects}
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stdout>:     1275    0.077    0.000    0.077    0.000 {built-in method max_pool2d}
[1,0]<stdout>:     3825    0.077    0.000    0.077    0.000 {built-in method relu_}
[1,0]<stdout>:        1    0.074    0.074  327.650  327.650 train.py:338(train)
[1,0]<stdout>:      765    0.059    0.000    0.059    0.000 {built-in method addmm}
[1,0]<stdout>:    14790    0.044    0.000    0.044    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.041    0.000    0.271    0.001 optimizer.py:166(zero_grad)
[1,0]<stdout>:       14    0.033    0.002    0.033    0.002 {method 'poll' of 'select.poll' objects}
[1,0]<stdout>:     4845    0.032    0.000    0.032    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      510    0.029    0.000    1.328    0.003 container.py:115(forward)
[1,0]<stdout>:     3370    0.027    0.000    0.032    0.000 module.py:774(__setattr__)
[1,0]<stdout>:    29070    0.026    0.000    0.026    0.000 module.py:758(__getattr__)
[1,0]<stdout>:     4080    0.025    0.000    0.025    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      510    0.021    0.000    0.021    0.000 {built-in method dropout}
[1,0]<stdout>:     3315    0.021    0.000    0.274    0.000 functional.py:1998(batch_norm)
[1,0]<stdout>:      511    0.020    0.000    0.020    0.000 {method 'item' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    10965    0.018    0.000    0.798    0.000 mpi_ops.py:928(synchronize)
[1,0]<stdout>:    44370    0.018    0.000    0.028    0.000 tensor.py:458(__hash__)
[1,0]<stdout>:    14790    0.018    0.000    0.173    0.000 compression.py:363(decompress)
[1,0]<stdout>:    14790    0.017    0.000    0.017    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.017    0.000    0.401    0.000 conv.py:410(_conv_forward)
[1,0]<stdout>:    14280    0.017    0.000    0.017    0.000 {built-in method torch._C._get_tracing_state}
[1,0]<stdout>:      256    0.017    0.000    0.027    0.000 sampler.py:206(__iter__)
[1,0]<stdout>:    91045    0.016    0.000    0.016    0.000 {built-in method builtins.hasattr}
[1,0]<stdout>:      255    0.016    0.000    0.056    0.000 summary.py:137(scalar)
[1,0]<stdout>:    86603    0.016    0.000    0.016    0.000 {built-in method builtins.isinstance}
[1,0]<stdout>:      257    0.014    0.000    0.025    0.000 std.py:355(format_meter)
[1,0]<stdout>:    14790    0.012    0.000    0.050    0.000 optimizer.py:298(<listcomp>)
[1,0]<stdout>:     3315    0.011    0.000    0.012    0.000 functional.py:1980(_verify_batch_size)
[1,0]<stdout>:      765    0.011    0.000    0.090    0.000 linear.py:90(forward)
[1,0]<stdout>:      255    0.011    0.000    0.011    0.000 {built-in method torch._C._nn.nll_loss}
[1,0]<stdout>:     3315    0.010    0.000    0.416    0.000 conv.py:418(forward)
[1,0]<stdout>:      269    0.010    0.000    0.010    0.000 {method 'clear' of 'dict' objects}
[1,0]<stdout>:    44399    0.010    0.000    0.010    0.000 {built-in method builtins.id}
[1,0]<stdout>:      255    0.010    0.000    0.027    0.000 x2num.py:11(check_nan)
[1,0]<stdout>:    57630    0.010    0.000    0.010    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,0]<stdout>:      255    0.009    0.000    0.797    0.003 {built-in method apply}
[1,0]<stdout>:      255    0.009    0.000    0.009    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.009    0.000    0.009    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,0]<stdout>:51530/51527    0.008    0.000    0.008    0.000 {built-in method builtins.len}
[1,0]<stdout>:     3825    0.008    0.000    0.094    0.000 activation.py:101(forward)
[1,0]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method ones_like}
[1,0]<stdout>:     3825    0.008    0.000    0.086    0.000 functional.py:1106(relu)
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {method 'reduce' of 'numpy.ufunc' objects}
[1,0]<stdout>:    11449    0.007    0.000    0.010    0.000 utils.py:330(<genexpr>)
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method tensor}
[1,0]<stdout>:     4080    0.006    0.000    0.006    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      511    0.006    0.000    0.006    0.000 basics.py:183(size)
[1,0]<stdout>:      765    0.006    0.000    0.078    0.000 functional.py:1655(linear)
[1,0]<stdout>:      515    0.006    0.000    0.024    0.000 queues.py:80(put)
[1,0]<stdout>:      255    0.006    0.000    0.160    0.001 std.py:1197(update)
[1,0]<stdout>:      255    0.006    0.000    1.235    0.005 optimizer.py:337(step)
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.006    0.000    1.362    0.005 vgg.py:42(forward)
[1,0]<stdout>:     1275    0.006    0.000    0.090    0.000 pooling.py:156(forward)
[1,0]<stdout>:      256    0.006    0.000   16.522    0.065 std.py:1159(__iter__)
[1,0]<stdout>:      776    0.005    0.000    0.012    0.000 threading.py:341(notify)
[1,0]<stdout>:     1579    0.005    0.000    0.005    0.000 {method 'format' of 'str' objects}
[1,0]<stdout>:        8    0.005    0.001    0.086    0.011 reduction.py:58(dump)
[1,0]<stdout>:      524    0.005    0.000    0.005    0.000 {method 'release' of '_thread.lock' objects}
[1,0]<stdout>:     1530    0.005    0.000    0.005    0.000 std.py:233(__call__)
[1,0]<stdout>:      255    0.005    0.000  307.108    1.204 tensor.py:155(backward)
[1,0]<stdout>:      510    0.005    0.000    0.027    0.000 functional.py:950(dropout)
[1,0]<stdout>:      255    0.004    0.000    0.022    0.000 writer.py:131(add_summary)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {built-in method numpy.array}
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      256    0.004    0.000    3.718    0.015 dataloader.py:945(_next_data)
[1,0]<stdout>:      255    0.004    0.000  307.104    1.204 __init__.py:57(backward)
[1,0]<stdout>:      255    0.004    0.000    0.037    0.000 x2num.py:18(make_np)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {built-in method flatten}
[1,0]<stdout>:      255    0.004    0.000    0.084    0.000 writer.py:401(add_scalar)
[1,0]<stdout>:      256    0.004    0.000    0.004    0.000 {built-in method now}
[1,0]<stdout>:      257    0.003    0.000    0.004    0.000 std.py:1445(format_dict)
[1,0]<stdout>:     1275    0.003    0.000    0.084    0.000 _jit_internal.py:237(fn)
[1,0]<stdout>:      255    0.003    0.000    1.239    0.005 lr_scheduler.py:62(wrapper)
[1,0]<stdout>:     1275    0.003    0.000    0.081    0.000 functional.py:564(_max_pool2d)
[1,0]<stdout>:    11192    0.003    0.000    0.003    0.000 {built-in method unicodedata.east_asian_width}
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 batchnorm.py:275(_check_input_dim)
[1,0]<stdout>:    16573    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
[1,0]<stdout>:      255    0.003    0.000    0.008    0.000 train.py:409(adjust_learning_rate)
[1,0]<stdout>:    10970    0.003    0.000    0.003    0.000 {method 'pop' of 'dict' objects}
[1,0]<stdout>:      255    0.003    0.000    0.801    0.003 mpi_ops.py:209(allreduce)
[1,0]<stdout>:      255    0.003    0.000    0.017    0.000 writer.py:115(add_event)
[1,0]<stdout>:        1    0.003    0.003    0.003    0.003 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      256    0.003    0.000    0.151    0.001 std.py:1324(refresh)
[1,0]<stdout>:      255    0.003    0.000    0.785    0.003 grad_mode.py:12(decorate_context)
[1,0]<stdout>:      255    0.003    0.000    0.011    0.000 __init__.py:25(_make_grads)
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,0]<stdout>:      255    0.003    0.000    3.640    0.014 queue.py:153(get)
[1,0]<stdout>:      255    0.003    0.000    0.788    0.003 mpi_ops.py:191(forward)
[1,0]<stdout>:      263    0.003    0.000    0.040    0.000 dataloader.py:991(_try_put_index)
[1,0]<stdout>:      255    0.003    0.000    3.647    0.014 dataloader.py:912(_get_data)
[1,0]<stdout>:      255    0.003    0.000    0.015    0.000 functional.py:2158(nll_loss)
[1,0]<stdout>:      257    0.003    0.000    0.031    0.000 std.py:1149(__str__)
[1,0]<stdout>:      255    0.003    0.000    0.013    0.000 fromnumeric.py:2123(sum)
[1,0]<stdout>:      257    0.002    0.000    0.013    0.000 {built-in method builtins.sum}
[1,0]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,0]<stdout>:      257    0.002    0.000    0.145    0.001 std.py:1463(display)
[1,0]<stdout>:      257    0.002    0.000    0.111    0.000 std.py:348(print_status)
[1,0]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,0]<stdout>:      255    0.002    0.000    0.010    0.000 fromnumeric.py:69(_wrapreduction)
[1,0]<stdout>:      255    0.002    0.000    0.018    0.000 mpi_ops.py:105(_allreduce_async)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,0]<stdout>:      255    0.002    0.000    0.014    0.000 functional.py:909(adaptive_avg_pool2d)
[1,0]<stdout>:      255    0.002    0.000    0.027    0.000 functional.py:2370(cross_entropy)
[1,0]<stdout>:      512    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
[1,0]<stdout>:      257    0.002    0.000    0.093    0.000 std.py:342(fp_write)
[1,0]<stdout>:      255    0.002    0.000    0.273    0.001 optimizer.py:353(zero_grad)
[1,0]<stdout>:      255    0.002    0.000    0.015    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
[1,0]<stdout>:      255    0.002    0.000    0.030    0.000 loss.py:946(forward)
[1,0]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,0]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,0]<stdout>:      255    0.002    0.000    0.025    0.000 mpi_ops.py:152(allreduce_async)
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:      260    0.002    0.000    0.002    0.000 std.py:104(acquire)
[1,0]<stdout>:      513    0.002    0.000    0.004    0.000 std.py:288(format_interval)
[1,0]<stdout>:      255    0.002    0.000    0.014    0.000 event_file_writer.py:132(add_event)
[1,0]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,0]<stdout>:      255    0.002    0.000    0.017    0.000 <__array_function__ internals>:2(sum)
[1,0]<stdout>:       20    0.002    0.000    0.004    0.000 synchronize.py:50(__init__)
[1,0]<stdout>:      783    0.002    0.000    0.002    0.000 threading.py:246(__enter__)
[1,0]<stdout>:      255    0.001    0.000    0.002    0.000 numeric.py:1858(isscalar)
[1,0]<stdout>:      765    0.001    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,0]<stdout>:      779    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      255    0.001    0.000    3.641    0.014 dataloader.py:766(_try_get_data)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,0]<stdout>:      255    0.001    0.000    0.015    0.000 pooling.py:1110(forward)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:318(_check_caffe2_blob)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 summary.py:28(_clean_tag)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,0]<stdout>:      510    0.001    0.000    0.028    0.000 dropout.py:57(forward)
[1,0]<stdout>:      260    0.001    0.000    0.001    0.000 std.py:108(release)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,0]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,0]<stdout>:      256    0.001    0.000    3.719    0.015 dataloader.py:362(__next__)
[1,0]<stdout>:      257    0.001    0.000    0.014    0.000 utils.py:329(_text_width)
[1,0]<stdout>:        7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.032    0.000 dataloader.py:1010(_process_data)
[1,0]<stdout>:      257    0.001    0.000    0.015    0.000 utils.py:333(disp_len)
[1,0]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:333(_get_file_writer)
[1,0]<stdout>:      786    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,0]<stdout>:      510    0.001    0.000    0.001    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,0]<stdout>:      881    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,0]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,0]<stdout>:      255    0.001    0.000    0.007    0.000 mpi_ops.py:92(_check_function)
[1,0]<stdout>:      255    0.001    0.000    0.010    0.000 functional.py:1567(log_softmax)
[1,0]<stdout>:      516    0.001    0.000    0.091    0.000 utils.py:143(inner)
[1,0]<stdout>:      603    0.001    0.000    0.028    0.000 {built-in method builtins.next}
[1,0]<stdout>:        1    0.001    0.001    0.005    0.005 distributed.py:68(__iter__)
[1,0]<stdout>:      510    0.001    0.000    0.001    0.000 {built-in method torch._C.is_grad_enabled}
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 fromnumeric.py:70(<dictcomp>)
[1,0]<stdout>:     1277    0.000    0.000    0.000    0.000 {built-in method time.time}
[1,0]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,0]<stdout>:        4    0.000    0.000   12.617    3.154 popen_forkserver.py:41(_launch)
[1,0]<stdout>:      257    0.000    0.000    0.000    0.000 {built-in method builtins.max}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
[1,0]<stdout>:     1026    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
[1,0]<stdout>:        1    0.000    0.000   12.635   12.635 dataloader.py:690(__init__)
[1,0]<stdout>:        1    0.000    0.000  327.650  327.650 {built-in method builtins.exec}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 util.py:221(impl)
[1,0]<stdout>:      512    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,0]<stdout>:      256    0.000    0.000    0.001    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,0]<stdout>:      263    0.000    0.000    0.027    0.000 dataloader.py:356(_next_index)
[1,0]<stdout>:      530    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,0]<stdout>:       36    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,0]<stdout>:      765    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:      297    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:      258    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,0]<stdout>:      783    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,0]<stdout>:      513    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,0]<stdout>:        6    0.000    0.000    0.004    0.001 queues.py:158(_start_thread)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,0]<stdout>:        5    0.000    0.000    0.005    0.001 queues.py:36(__init__)
[1,0]<stdout>:     55/1    0.000    0.000    0.001    0.001 module.py:1253(train)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:2118(_sum_dispatcher)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,0]<stdout>:       14    0.000    0.000    0.033    0.002 connection.py:917(wait)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,0]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.005    0.001 context.py:100(Queue)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,0]<stdout>:        1    0.000    0.000  327.650  327.650 <string>:1(<module>)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      274    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,0]<stdout>:        4    0.000    0.000   12.618    3.155 process.py:110(start)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:        4    0.000    0.000   12.617    3.154 popen_fork.py:15(__init__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,0]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:        2    0.000    0.000    0.035    0.018 dataloader.py:1040(_shutdown_workers)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,0]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,0]<stdout>:       10    0.000    0.000    3.636    0.364 threading.py:270(wait)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,0]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,0]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,0]<stdout>:      282    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 std.py:846(__init__)
[1,0]<stdout>:        7    0.000    0.000    0.004    0.001 threading.py:834(start)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,0]<stdout>:       14    0.000    0.000    0.033    0.002 selectors.py:402(select)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:145(register)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,0]<stdout>:        4    0.000    0.000   12.617    3.154 context.py:288(_Popen)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:        7    0.000    0.000    0.003    0.000 threading.py:540(wait)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:        4    0.000    0.000    0.033    0.008 popen_fork.py:40(wait)
[1,0]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,0]<stdout>:      106    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,0]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55cc5c3749a0}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,0]<stdout>:       72    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:282(_screen_shape_linux)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:       53    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,0]<stdout>:        4    0.000    0.000    0.033    0.008 process.py:142(join)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 context.py:80(Semaphore)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,0]<stdout>:        4    0.000    0.000   12.617    3.154 popen_forkserver.py:33(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:583(_decr_instances)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f661a814c10}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,0]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,0]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,0]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 context.py:90(Event)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:329(status_printer)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 context.py:75(Condition)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 synchronize.py:212(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:296(<listcomp>)
[1,0]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:748(encode)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 synchronize.py:323(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,0]<stdout>:        1    0.000    0.000   12.635   12.635 dataloader.py:287(__iter__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 threading.py:979(join)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:171(__eq__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1285(fp_write)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:215(_supports_unicode)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:201(_is_utf)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 std.py:228(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:88(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        6    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:231(_screen_shape_wrapper)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1300(<lambda>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:this epoch's train spend:327.66722083091736s
[1,0]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:25<33:07, 25.48s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:26<33:47, 26.00s/it][1,0]<stderr>:test:   5%|▌         | 4/79 [00:26<06:31,  5.21s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:28<05:19,  4.31s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:28<05:04,  4.12s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:28<02:22,  2.00s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:30<02:35,  2.22s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:30<02:11,  1.87s/it][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:31<01:14,  1.11s/it][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:32<01:37,  1.47s/it][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:32<01:16,  1.15s/it][1,1]<stderr>:test:  20%|██        | 16/79 [00:32<01:04,  1.03s/it][1,0]<stderr>:test:  20%|██        | 16/79 [00:33<00:48,  1.29it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:34<01:13,  1.19s/it][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:34<00:53,  1.12it/s][1,1]<stderr>:test:  25%|██▌       | 20/79 [00:35<00:46,  1.28it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:35<01:01,  1.01it/s][1,0]<stderr>:test:  25%|██▌       | 20/79 [00:35<00:39,  1.49it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:37<01:00,  1.05s/it][1,1]<stderr>:test:  30%|███       | 24/79 [00:37<00:35,  1.54it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:38<00:52,  1.11it/s][1,0]<stderr>:test:  30%|███       | 24/79 [00:38<00:31,  1.72it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:39<00:45,  1.18it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:39<00:33,  1.57it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:40<00:28,  1.82it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:40<00:43,  1.23it/s][1,0]<stderr>:test:  35%|███▌      | 28/79 [00:40<00:27,  1.84it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:42<00:44,  1.13it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [00:42<00:28,  1.69it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:42<00:38,  1.30it/s][1,1]<stderr>:test:  41%|████      | 32/79 [00:42<00:26,  1.78it/s][1,0]<stderr>:test:  41%|████      | 32/79 [00:43<00:25,  1.81it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:44<00:35,  1.28it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:44<00:23,  1.89it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:45<00:34,  1.33it/s][1,1]<stderr>:test:  46%|████▌     | 36/79 [00:45<00:23,  1.84it/s][1,0]<stderr>:test:  46%|████▌     | 36/79 [00:46<00:24,  1.76it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:47<00:37,  1.11it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:48<00:32,  1.28it/s][1,1]<stderr>:test:  51%|█████     | 40/79 [00:48<00:23,  1.69it/s][1,0]<stderr>:test:  51%|█████     | 40/79 [00:49<00:23,  1.65it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:50<00:33,  1.13it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:52<00:37,  1.02it/s][1,0]<stderr>:test:  56%|█████▌    | 44/79 [00:52<00:24,  1.44it/s][1,1]<stderr>:test:  56%|█████▌    | 44/79 [00:52<00:30,  1.15it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:53<00:28,  1.20it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:54<00:29,  1.16it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [00:55<00:23,  1.30it/s][1,0]<stderr>:test:  61%|██████    | 48/79 [00:55<00:20,  1.54it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:56<00:22,  1.36it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [00:56<00:18,  1.55it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:57<00:26,  1.14it/s][1,1]<stderr>:test:  66%|██████▌   | 52/79 [00:58<00:18,  1.43it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:58<00:17,  1.47it/s][1,0]<stderr>:test:  66%|██████▌   | 52/79 [00:58<00:17,  1.53it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [00:59<00:15,  1.65it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:59<00:13,  1.85it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [01:00<00:21,  1.23it/s][1,0]<stderr>:test:  71%|███████   | 56/79 [01:01<00:14,  1.63it/s][1,1]<stderr>:test:  71%|███████   | 56/79 [01:01<00:21,  1.08it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [01:01<00:15,  1.41it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [01:01<00:10,  1.99it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [01:02<00:17,  1.28it/s][1,0]<stderr>:test:  76%|███████▌  | 60/79 [01:04<00:11,  1.66it/s][1,1]<stderr>:test:  76%|███████▌  | 60/79 [01:04<00:17,  1.10it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [01:04<00:15,  1.18it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [01:06<00:15,  1.20it/s][1,0]<stderr>:test:  81%|████████  | 64/79 [01:06<00:08,  1.73it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [01:07<00:12,  1.23it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [01:07<00:09,  1.43it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [01:08<00:10,  1.34it/s][1,0]<stderr>:test:  86%|████████▌ | 68/79 [01:08<00:05,  1.90it/s][1,1]<stderr>:test:  86%|████████▌ | 68/79 [01:09<00:07,  1.38it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:09<00:06,  1.58it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [01:10<00:04,  1.82it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [01:11<00:08,  1.18it/s][1,0]<stderr>:test:  91%|█████████ | 72/79 [01:11<00:03,  1.81it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [01:12<00:05,  1.32it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:12<00:04,  1.42it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [01:13<00:02,  1.92it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [01:14<00:05,  1.17it/s][1,0]<stderr>:test:  96%|█████████▌| 76/79 [01:14<00:01,  1.86it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [01:15<00:02,  1.06it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:15<00:00,  1.04it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:17<00:01,  1.04it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:17<00:00,  1.02it/s][1,0]<stdout>:
[1,0]<stdout>:[acc/test_top1] = 0.050000
[1,0]<stdout>:[acc/test_top5] = 1.150000
[1,0]<stdout>:[acc/test_top1_best] = 0.050000
[1,1]<stdout>:spend all time:328.61855912208557s
[1,0]<stdout>:[save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints
[1,0]<stdout>:spend all time:327.66722083091736s
[1,1]<stdout>:Running your script with the autograd profiler...
[1,0]<stdout>:Running your script with the autograd profiler...
[1,0]<stdout>:==> loading configs from ['configs/imagenet/vgg16_bn.py', 'configs/methods/wm0.py', 'configs/methods/fp16.py', 'configs/methods/int32.py']
[1,0]<stdout>:[train.save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:[seed] = 42
[1,0]<stdout>:[data]
[1,0]<stdout>:  [num_threads_per_worker] = 4
[1,0]<stdout>:[train]
[1,0]<stdout>:  [dgc] = False
[1,0]<stdout>:  [compression]
[1,0]<stdout>:    [func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:    [compress_ratio] = 0.05
[1,0]<stdout>:    [sample_ratio] = 0.01
[1,0]<stdout>:    [strided_sample] = True
[1,0]<stdout>:    [compress_upper_bound] = 1.3
[1,0]<stdout>:    [compress_lower_bound] = 0.8
[1,0]<stdout>:    [max_adaptation_iters] = 10
[1,0]<stdout>:    [resample] = True
[1,0]<stdout>:    [memory]
[1,0]<stdout>:      [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:      [momentum] = 0.9
[1,0]<stdout>:    [warmup_epochs] = 0
[1,0]<stdout>:    [fp16_values] = True
[1,0]<stdout>:    [int32_indices] = True
[1,0]<stdout>:  [criterion]
[1,0]<stdout>:    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
[1,0]<stdout>:  [optimizer]
[1,0]<stdout>:    [func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:    [momentum] = 0.9
[1,0]<stdout>:    [lr] = 0.025
[1,0]<stdout>:    [weight_decay] = 5e-05
[1,0]<stdout>:  [schedule_lr_per_epoch] = True
[1,0]<stdout>:  [warmup_lr_epochs] = 5
[1,0]<stdout>:  [metric] = acc/test_top1
[1,0]<stdout>:  [meters]
[1,0]<stdout>:    [acc/{}_top1]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 1
[1,0]<stdout>:    [acc/{}_top5]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 5
[1,0]<stdout>:  [optimize_bn_separately] = False
[1,0]<stdout>:  [num_epochs] = 1
[1,0]<stdout>:  [batch_size] = 64
[1,0]<stdout>:  [scheduler]
[1,0]<stdout>:    [func] = <class 'torch.optim.lr_scheduler.MultiStepLR'>
[1,0]<stdout>:    [milestones] = [25, 55, 75]
[1,0]<stdout>:    [gamma] = 0.1
[1,0]<stdout>:  [topk] = False
[1,0]<stdout>:  [fp16] = False
[1,0]<stdout>:  [powersgd] = True
[1,0]<stdout>:  [sign] = False
[1,0]<stdout>:  [efsign] = False
[1,0]<stdout>:  [natural] = False
[1,0]<stdout>:  [onebit] = False
[1,0]<stdout>:  [qsgd] = False
[1,0]<stdout>:  [randomk] = False
[1,0]<stdout>:  [signum] = False
[1,0]<stdout>:  [terngrad] = False
[1,0]<stdout>:  [num_batches_per_step] = 1
[1,0]<stdout>:  [save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:  [checkpoint_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/e{epoch}-r0.pth
[1,0]<stdout>:  [latest_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/latest-r0.pth
[1,0]<stdout>:  [best_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/best-r0.pth
[1,0]<stdout>:  [base_lr] = 0.0125
[1,0]<stdout>:[dataset]
[1,0]<stdout>:  [func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:  [root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [image_size] = 224
[1,0]<stdout>:[model]
[1,0]<stdout>:  [func] = <function vgg16_bn at 0x7f661a1d7b80>
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [init_weights] = True
[1,0]<stdout>:[device] = cuda
[1,0]<stdout>:
[1,0]<stdout>:==> creating model "[func] = <function vgg16_bn at 0x7f661a1d7b80>
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[init_weights] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> creating dataset "[func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:[root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[image_size] = 224"
[1,0]<stdout>:
[1,0]<stdout>:==> loading dataset "{'num_workers': 4, 'pin_memory': True, 'multiprocessing_context': 'forkserver'}""
[1,0]<stdout>:
[1,0]<stdout>:==> creating optimizer "[func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:[momentum] = 0.9
[1,0]<stdout>:[lr] = 0.05
[1,0]<stdout>:[weight_decay] = 5e-05"
[1,1]<stdout>:powersgd init...
[1,0]<stdout>:
[1,0]<stdout>:==> creating compression "[func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:[compress_ratio] = 0.05
[1,0]<stdout>:[sample_ratio] = 0.01
[1,0]<stdout>:[strided_sample] = True
[1,0]<stdout>:[compress_upper_bound] = 1.3
[1,0]<stdout>:[compress_lower_bound] = 0.8
[1,0]<stdout>:[max_adaptation_iters] = 10
[1,0]<stdout>:[resample] = True
[1,0]<stdout>:[memory]
[1,0]<stdout>:  [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:  [momentum] = 0.9
[1,0]<stdout>:[warmup_epochs] = 0
[1,0]<stdout>:[fp16_values] = True
[1,0]<stdout>:[int32_indices] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> initializing powersgd compression
[1,0]<stdout>:powersgd init...
[1,0]<stdout>:
[1,0]<stdout>:==> train from scratch
[1,0]<stdout>:
[1,0]<stdout>:==> broadcasting paramters and optimizer state
[1,1]<stdout>:before evaluate
[1,1]<stderr>:
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stdout>:before evaluate
[1,0]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:18<23:33, 18.13s/it][1,0]<stderr>:test:   3%|▎         | 2/79 [00:18<09:41,  7.55s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:18<23:50, 18.33s/it][1,0]<stderr>:test:   4%|▍         | 3/79 [00:18<05:26,  4.30s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:20<02:51,  2.32s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:21<04:05,  3.32s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:21<02:18,  1.90s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:22<01:20,  1.15s/it][1,0]<stderr>:test:  13%|█▎        | 10/79 [00:23<01:06,  1.03it/s][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:23<02:05,  1.79s/it][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:25<00:55,  1.20it/s][1,0]<stderr>:test:  18%|█▊        | 14/79 [00:25<00:48,  1.35it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:25<01:23,  1.26s/it][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:27<00:40,  1.53it/s][1,0]<stderr>:test:  23%|██▎       | 18/79 [00:27<00:36,  1.66it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:27<01:00,  1.02it/s][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:28<00:48,  1.25it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:29<00:38,  1.51it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:30<00:49,  1.18it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:30<00:36,  1.54it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:31<00:31,  1.71it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:31<00:37,  1.43it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:32<00:28,  1.82it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:33<00:27,  1.80it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:33<00:31,  1.59it/s][1,0]<stderr>:test:  38%|███▊      | 30/79 [00:34<00:26,  1.86it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [00:34<00:24,  1.97it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:35<00:24,  1.89it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:35<00:27,  1.65it/s][1,0]<stderr>:test:  43%|████▎     | 34/79 [00:36<00:24,  1.84it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:36<00:21,  2.07it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:37<00:25,  1.68it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:38<00:23,  1.78it/s][1,0]<stderr>:test:  48%|████▊     | 38/79 [00:38<00:21,  1.88it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:38<00:20,  1.92it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:39<00:19,  1.93it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:39<00:20,  1.89it/s][1,0]<stderr>:test:  53%|█████▎    | 42/79 [00:40<00:20,  1.81it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:40<00:19,  1.89it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:41<00:16,  2.07it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:41<00:17,  1.95it/s][1,0]<stderr>:test:  58%|█████▊    | 46/79 [00:42<00:17,  1.92it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [00:43<00:18,  1.74it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:43<00:14,  2.09it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:44<00:17,  1.71it/s][1,0]<stderr>:test:  63%|██████▎   | 50/79 [00:45<00:16,  1.73it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [00:45<00:15,  1.79it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:45<00:12,  2.08it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:47<00:17,  1.53it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:47<00:16,  1.50it/s][1,0]<stderr>:test:  68%|██████▊   | 54/79 [00:48<00:17,  1.44it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:48<00:13,  1.61it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:49<00:13,  1.68it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [00:50<00:11,  1.69it/s][1,0]<stderr>:test:  73%|███████▎  | 58/79 [00:50<00:13,  1.59it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:51<00:10,  1.66it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:51<00:10,  1.79it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [00:52<00:10,  1.52it/s][1,0]<stderr>:test:  78%|███████▊  | 62/79 [00:52<00:10,  1.55it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:53<00:08,  1.64it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:54<00:08,  1.73it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [00:55<00:07,  1.65it/s][1,0]<stderr>:test:  84%|████████▎ | 66/79 [00:55<00:07,  1.63it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [00:55<00:05,  1.82it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [00:56<00:05,  1.70it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [00:57<00:04,  1.69it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [00:57<00:03,  1.83it/s][1,0]<stderr>:test:  89%|████████▊ | 70/79 [00:57<00:05,  1.55it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [00:58<00:03,  1.59it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [00:59<00:03,  1.62it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [01:00<00:02,  1.48it/s][1,0]<stderr>:test:  94%|█████████▎| 74/79 [01:00<00:03,  1.48it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:01<00:01,  1.65it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:01<00:00,  1.29it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:01<00:01,  1.95it/s][1,0]<stderr>:test:  99%|█████████▊| 78/79 [01:03<00:00,  1.40it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:03<00:00,  1.25it/s][1,1]<stdout>:after evaluate
[1,0]<stdout>:after evaluate
[1,0]<stdout>:[acc/test_top1] = 0.060000
[1,0]<stdout>:[acc/test_top5] = 0.560000
[1,1]<stderr>:
[1,0]<stdout>:
[1,0]<stdout>:==> training epoch 0/1
[1,0]<stderr>:
[1,0]<stderr>:train:   0% 0/255 [00:00<?, ?it/s][1,0]<stderr>:train:   0% 1/255 [00:17<1:14:51, 17.68s/it][1,0]<stderr>:train:   1% 2/255 [00:18<33:49,  8.02s/it]  [1,0]<stderr>:train:   1% 3/255 [00:20<20:39,  4.92s/it][1,0]<stderr>:train:   2% 4/255 [00:21<14:29,  3.46s/it][1,0]<stderr>:train:   2% 5/255 [00:22<11:06,  2.67s/it][1,0]<stderr>:train:   2% 6/255 [00:23<09:00,  2.17s/it][1,0]<stderr>:train:   3% 7/255 [00:25<07:39,  1.85s/it][1,0]<stderr>:train:   3% 8/255 [00:26<06:47,  1.65s/it][1,0]<stderr>:train:   4% 9/255 [00:27<06:11,  1.51s/it][1,0]<stderr>:train:   4% 10/255 [00:28<05:51,  1.44s/it][1,0]<stderr>:train:   4% 11/255 [00:30<05:43,  1.41s/it][1,0]<stderr>:train:   5% 12/255 [00:31<05:25,  1.34s/it][1,0]<stderr>:train:   5% 13/255 [00:32<05:13,  1.30s/it][1,0]<stderr>:train:   5% 14/255 [00:33<05:03,  1.26s/it][1,0]<stderr>:train:   6% 15/255 [00:34<04:58,  1.24s/it][1,0]<stderr>:train:   6% 16/255 [00:36<04:55,  1.24s/it][1,0]<stderr>:train:   7% 17/255 [00:37<04:59,  1.26s/it][1,0]<stderr>:train:   7% 18/255 [00:38<04:55,  1.25s/it][1,0]<stderr>:train:   7% 19/255 [00:39<04:50,  1.23s/it][1,0]<stderr>:train:   8% 20/255 [00:40<04:45,  1.22s/it][1,0]<stderr>:train:   8% 21/255 [00:42<04:42,  1.21s/it][1,0]<stderr>:train:   9% 22/255 [00:43<04:39,  1.20s/it][1,0]<stderr>:train:   9% 23/255 [00:44<04:40,  1.21s/it][1,0]<stderr>:train:   9% 24/255 [00:45<04:40,  1.21s/it][1,0]<stderr>:train:  10% 25/255 [00:47<04:38,  1.21s/it][1,0]<stderr>:train:  10% 26/255 [00:48<04:37,  1.21s/it][1,0]<stderr>:train:  11% 27/255 [00:49<04:33,  1.20s/it][1,0]<stderr>:train:  11% 28/255 [00:50<04:31,  1.20s/it][1,0]<stderr>:train:  11% 29/255 [00:51<04:31,  1.20s/it][1,0]<stderr>:train:  12% 30/255 [00:52<04:29,  1.20s/it][1,0]<stderr>:train:  12% 31/255 [00:54<04:27,  1.20s/it][1,0]<stderr>:train:  13% 32/255 [00:55<04:26,  1.19s/it][1,0]<stderr>:train:  13% 33/255 [00:56<04:24,  1.19s/it][1,0]<stderr>:train:  13% 34/255 [00:57<04:23,  1.19s/it][1,0]<stderr>:train:  14% 35/255 [00:58<04:22,  1.19s/it][1,0]<stderr>:train:  14% 36/255 [01:00<04:23,  1.20s/it][1,0]<stderr>:train:  15% 37/255 [01:01<04:19,  1.19s/it][1,0]<stderr>:train:  15% 38/255 [01:02<04:19,  1.20s/it][1,0]<stderr>:train:  15% 39/255 [01:03<04:21,  1.21s/it][1,0]<stderr>:train:  16% 40/255 [01:05<04:22,  1.22s/it][1,0]<stderr>:train:  16% 41/255 [01:06<04:19,  1.21s/it][1,0]<stderr>:train:  16% 42/255 [01:07<04:21,  1.23s/it][1,0]<stderr>:train:  17% 43/255 [01:08<04:20,  1.23s/it][1,0]<stderr>:train:  17% 44/255 [01:09<04:19,  1.23s/it][1,0]<stderr>:train:  18% 45/255 [01:11<04:15,  1.22s/it][1,0]<stderr>:train:  18% 46/255 [01:12<04:13,  1.21s/it][1,0]<stderr>:train:  18% 47/255 [01:13<04:11,  1.21s/it][1,0]<stderr>:train:  19% 48/255 [01:14<04:08,  1.20s/it][1,0]<stderr>:train:  19% 49/255 [01:15<04:09,  1.21s/it][1,0]<stderr>:train:  20% 50/255 [01:17<04:10,  1.22s/it][1,0]<stderr>:train:  20% 51/255 [01:18<04:07,  1.21s/it][1,0]<stderr>:train:  20% 52/255 [01:19<04:07,  1.22s/it][1,0]<stderr>:train:  21% 53/255 [01:20<04:05,  1.22s/it][1,0]<stderr>:train:  21% 54/255 [01:22<04:07,  1.23s/it][1,0]<stderr>:train:  22% 55/255 [01:23<04:04,  1.22s/it][1,0]<stderr>:train:  22% 56/255 [01:24<04:03,  1.22s/it][1,0]<stderr>:train:  22% 57/255 [01:25<04:00,  1.21s/it][1,0]<stderr>:train:  23% 58/255 [01:26<03:58,  1.21s/it][1,0]<stderr>:train:  23% 59/255 [01:28<04:00,  1.23s/it][1,0]<stderr>:train:  24% 60/255 [01:29<04:01,  1.24s/it][1,0]<stderr>:train:  24% 61/255 [01:30<04:02,  1.25s/it][1,0]<stderr>:train:  24% 62/255 [01:31<03:58,  1.23s/it][1,0]<stderr>:train:  25% 63/255 [01:33<03:56,  1.23s/it][1,0]<stderr>:train:  25% 64/255 [01:34<03:54,  1.23s/it][1,0]<stderr>:train:  25% 65/255 [01:35<03:52,  1.22s/it][1,0]<stderr>:train:  26% 66/255 [01:36<03:50,  1.22s/it][1,0]<stderr>:train:  26% 67/255 [01:37<03:48,  1.22s/it][1,0]<stderr>:train:  27% 68/255 [01:39<03:47,  1.22s/it][1,0]<stderr>:train:  27% 69/255 [01:40<03:51,  1.24s/it][1,0]<stderr>:train:  27% 70/255 [01:41<03:52,  1.26s/it][1,0]<stderr>:train:  28% 71/255 [01:43<03:48,  1.24s/it][1,0]<stderr>:train:  28% 72/255 [01:44<03:44,  1.22s/it][1,0]<stderr>:train:  29% 73/255 [01:45<03:41,  1.22s/it][1,0]<stderr>:train:  29% 74/255 [01:46<03:40,  1.22s/it][1,0]<stderr>:train:  29% 75/255 [01:47<03:40,  1.23s/it][1,0]<stderr>:train:  30% 76/255 [01:49<03:37,  1.22s/it][1,0]<stderr>:train:  30% 77/255 [01:50<03:39,  1.23s/it][1,0]<stderr>:train:  31% 78/255 [01:51<03:40,  1.25s/it][1,0]<stderr>:train:  31% 79/255 [01:52<03:37,  1.24s/it][1,0]<stderr>:train:  31% 80/255 [01:53<03:32,  1.21s/it][1,0]<stderr>:train:  32% 81/255 [01:55<03:33,  1.23s/it][1,0]<stderr>:train:  32% 82/255 [01:56<03:39,  1.27s/it][1,0]<stderr>:train:  33% 83/255 [01:57<03:35,  1.25s/it][1,0]<stderr>:train:  33% 84/255 [01:59<03:32,  1.24s/it][1,0]<stderr>:train:  33% 85/255 [02:00<03:36,  1.27s/it][1,0]<stderr>:train:  34% 86/255 [02:01<03:31,  1.25s/it][1,0]<stderr>:train:  34% 87/255 [02:02<03:30,  1.25s/it][1,0]<stderr>:train:  35% 88/255 [02:04<03:29,  1.25s/it][1,0]<stderr>:train:  35% 89/255 [02:05<03:27,  1.25s/it][1,0]<stderr>:train:  35% 90/255 [02:06<03:23,  1.23s/it][1,0]<stderr>:train:  36% 91/255 [02:07<03:21,  1.23s/it][1,0]<stderr>:train:  36% 92/255 [02:08<03:19,  1.22s/it][1,0]<stderr>:train:  36% 93/255 [02:10<03:16,  1.21s/it][1,0]<stderr>:train:  37% 94/255 [02:11<03:15,  1.22s/it][1,0]<stderr>:train:  37% 95/255 [02:12<03:14,  1.22s/it][1,0]<stderr>:train:  38% 96/255 [02:13<03:12,  1.21s/it][1,0]<stderr>:train:  38% 97/255 [02:15<03:12,  1.22s/it][1,0]<stderr>:train:  38% 98/255 [02:16<03:11,  1.22s/it][1,0]<stderr>:train:  39% 99/255 [02:17<03:10,  1.22s/it][1,0]<stderr>:train:  39% 100/255 [02:18<03:08,  1.21s/it][1,0]<stderr>:train:  40% 101/255 [02:19<03:05,  1.20s/it][1,0]<stderr>:train:  40% 102/255 [02:21<03:06,  1.22s/it][1,0]<stderr>:train:  40% 103/255 [02:22<03:07,  1.23s/it][1,0]<stderr>:train:  41% 104/255 [02:23<03:04,  1.22s/it][1,0]<stderr>:train:  41% 105/255 [02:24<03:03,  1.22s/it][1,0]<stderr>:train:  42% 106/255 [02:25<03:01,  1.22s/it][1,0]<stderr>:train:  42% 107/255 [02:27<02:59,  1.21s/it][1,0]<stderr>:train:  42% 108/255 [02:28<02:58,  1.22s/it][1,0]<stderr>:train:  43% 109/255 [02:29<02:57,  1.22s/it][1,0]<stderr>:train:  43% 110/255 [02:30<02:56,  1.21s/it][1,0]<stderr>:train:  44% 111/255 [02:32<02:53,  1.21s/it][1,0]<stderr>:train:  44% 112/255 [02:33<02:53,  1.22s/it][1,0]<stderr>:train:  44% 113/255 [02:34<02:54,  1.23s/it][1,0]<stderr>:train:  45% 114/255 [02:35<02:51,  1.22s/it][1,0]<stderr>:train:  45% 115/255 [02:36<02:49,  1.21s/it][1,0]<stderr>:train:  45% 116/255 [02:38<02:47,  1.21s/it][1,0]<stderr>:train:  46% 117/255 [02:39<02:45,  1.20s/it][1,0]<stderr>:train:  46% 118/255 [02:40<02:45,  1.21s/it][1,0]<stderr>:train:  47% 119/255 [02:41<02:44,  1.21s/it][1,0]<stderr>:train:  47% 120/255 [02:42<02:42,  1.20s/it][1,0]<stderr>:train:  47% 121/255 [02:44<02:40,  1.20s/it][1,0]<stderr>:train:  48% 122/255 [02:45<02:41,  1.21s/it][1,0]<stderr>:train:  48% 123/255 [02:46<02:40,  1.21s/it][1,0]<stderr>:train:  49% 124/255 [02:47<02:39,  1.22s/it][1,0]<stderr>:train:  49% 125/255 [02:48<02:37,  1.21s/it][1,0]<stderr>:train:  49% 126/255 [02:50<02:35,  1.20s/it][1,0]<stderr>:train:  50% 127/255 [02:51<02:33,  1.20s/it][1,0]<stderr>:train:  50% 128/255 [02:52<02:31,  1.20s/it][1,0]<stderr>:train:  51% 129/255 [02:53<02:30,  1.19s/it][1,0]<stderr>:train:  51% 130/255 [02:54<02:28,  1.19s/it][1,0]<stderr>:train:  51% 131/255 [02:56<02:28,  1.20s/it][1,0]<stderr>:train:  52% 132/255 [02:57<02:28,  1.21s/it][1,0]<stderr>:train:  52% 133/255 [02:58<02:27,  1.21s/it][1,0]<stderr>:train:  53% 134/255 [02:59<02:25,  1.20s/it][1,0]<stderr>:train:  53% 135/255 [03:00<02:24,  1.20s/it][1,0]<stderr>:train:  53% 136/255 [03:02<02:23,  1.21s/it][1,0]<stderr>:train:  54% 137/255 [03:03<02:21,  1.20s/it][1,0]<stderr>:train:  54% 138/255 [03:04<02:19,  1.19s/it][1,0]<stderr>:train:  55% 139/255 [03:05<02:18,  1.19s/it][1,0]<stderr>:train:  55% 140/255 [03:06<02:17,  1.19s/it][1,0]<stderr>:train:  55% 141/255 [03:08<02:18,  1.22s/it][1,0]<stderr>:train:  56% 142/255 [03:09<02:17,  1.22s/it][1,0]<stderr>:train:  56% 143/255 [03:10<02:17,  1.23s/it][1,0]<stderr>:train:  56% 144/255 [03:11<02:14,  1.21s/it][1,0]<stderr>:train:  57% 145/255 [03:13<02:15,  1.23s/it][1,0]<stderr>:train:  57% 146/255 [03:14<02:12,  1.22s/it][1,0]<stderr>:train:  58% 147/255 [03:15<02:11,  1.21s/it][1,0]<stderr>:train:  58% 148/255 [03:16<02:10,  1.22s/it][1,0]<stderr>:train:  58% 149/255 [03:17<02:08,  1.21s/it][1,0]<stderr>:train:  59% 150/255 [03:19<02:06,  1.21s/it][1,0]<stderr>:train:  59% 151/255 [03:20<02:05,  1.21s/it][1,0]<stderr>:train:  60% 152/255 [03:21<02:04,  1.21s/it][1,0]<stderr>:train:  60% 153/255 [03:22<02:02,  1.20s/it][1,0]<stderr>:train:  60% 154/255 [03:23<02:00,  1.20s/it][1,0]<stderr>:train:  61% 155/255 [03:25<01:59,  1.20s/it][1,0]<stderr>:train:  61% 156/255 [03:26<02:00,  1.22s/it][1,0]<stderr>:train:  62% 157/255 [03:27<01:59,  1.22s/it][1,0]<stderr>:train:  62% 158/255 [03:28<01:57,  1.21s/it][1,0]<stderr>:train:  62% 159/255 [03:30<01:56,  1.21s/it][1,0]<stderr>:train:  63% 160/255 [03:31<01:54,  1.21s/it][1,0]<stderr>:train:  63% 161/255 [03:32<01:53,  1.20s/it][1,0]<stderr>:train:  64% 162/255 [03:33<01:53,  1.22s/it][1,0]<stderr>:train:  64% 163/255 [03:34<01:51,  1.21s/it][1,0]<stderr>:train:  64% 164/255 [03:36<01:50,  1.22s/it][1,0]<stderr>:train:  65% 165/255 [03:37<01:49,  1.22s/it][1,0]<stderr>:train:  65% 166/255 [03:38<01:47,  1.21s/it][1,0]<stderr>:train:  65% 167/255 [03:39<01:46,  1.21s/it][1,0]<stderr>:train:  66% 168/255 [03:40<01:45,  1.22s/it][1,0]<stderr>:train:  66% 169/255 [03:42<01:44,  1.22s/it][1,0]<stderr>:train:  67% 170/255 [03:43<01:42,  1.21s/it][1,0]<stderr>:train:  67% 171/255 [03:44<01:41,  1.21s/it][1,0]<stderr>:train:  67% 172/255 [03:45<01:39,  1.19s/it][1,0]<stderr>:train:  68% 173/255 [03:46<01:38,  1.20s/it][1,0]<stderr>:train:  68% 174/255 [03:48<01:37,  1.20s/it][1,0]<stderr>:train:  69% 175/255 [03:49<01:36,  1.21s/it][1,0]<stderr>:train:  69% 176/255 [03:50<01:35,  1.21s/it][1,0]<stderr>:train:  69% 177/255 [03:51<01:34,  1.21s/it][1,0]<stderr>:train:  70% 178/255 [03:52<01:33,  1.21s/it][1,0]<stderr>:train:  70% 179/255 [03:54<01:32,  1.21s/it][1,0]<stderr>:train:  71% 180/255 [03:55<01:30,  1.21s/it][1,0]<stderr>:train:  71% 181/255 [03:56<01:29,  1.21s/it][1,0]<stderr>:train:  71% 182/255 [03:57<01:29,  1.22s/it][1,0]<stderr>:train:  72% 183/255 [03:59<01:27,  1.22s/it][1,0]<stderr>:train:  72% 184/255 [04:00<01:27,  1.23s/it][1,0]<stderr>:train:  73% 185/255 [04:01<01:26,  1.23s/it][1,0]<stderr>:train:  73% 186/255 [04:02<01:24,  1.23s/it][1,0]<stderr>:train:  73% 187/255 [04:04<01:23,  1.23s/it][1,0]<stderr>:train:  74% 188/255 [04:05<01:22,  1.23s/it][1,0]<stderr>:train:  74% 189/255 [04:06<01:21,  1.23s/it][1,0]<stderr>:train:  75% 190/255 [04:07<01:20,  1.24s/it][1,0]<stderr>:train:  75% 191/255 [04:08<01:18,  1.23s/it][1,0]<stderr>:train:  75% 192/255 [04:10<01:17,  1.23s/it][1,0]<stderr>:train:  76% 193/255 [04:11<01:15,  1.23s/it][1,0]<stderr>:train:  76% 194/255 [04:12<01:14,  1.22s/it][1,0]<stderr>:train:  76% 195/255 [04:13<01:13,  1.22s/it][1,0]<stderr>:train:  77% 196/255 [04:15<01:11,  1.22s/it][1,0]<stderr>:train:  77% 197/255 [04:16<01:10,  1.22s/it][1,0]<stderr>:train:  78% 198/255 [04:17<01:10,  1.24s/it][1,0]<stderr>:train:  78% 199/255 [04:18<01:08,  1.23s/it][1,0]<stderr>:train:  78% 200/255 [04:19<01:07,  1.23s/it][1,0]<stderr>:train:  79% 201/255 [04:21<01:07,  1.24s/it][1,0]<stderr>:train:  79% 202/255 [04:22<01:05,  1.23s/it][1,0]<stderr>:train:  80% 203/255 [04:23<01:03,  1.22s/it][1,0]<stderr>:train:  80% 204/255 [04:24<01:02,  1.23s/it][1,0]<stderr>:train:  80% 205/255 [04:26<01:02,  1.25s/it][1,0]<stderr>:train:  81% 206/255 [04:27<01:00,  1.24s/it][1,0]<stderr>:train:  81% 207/255 [04:28<00:58,  1.23s/it][1,0]<stderr>:train:  82% 208/255 [04:29<00:57,  1.22s/it][1,0]<stderr>:train:  82% 209/255 [04:31<00:56,  1.22s/it][1,0]<stderr>:train:  82% 210/255 [04:32<00:55,  1.22s/it][1,0]<stderr>:train:  83% 211/255 [04:33<00:53,  1.21s/it][1,0]<stderr>:train:  83% 212/255 [04:34<00:51,  1.20s/it][1,0]<stderr>:train:  84% 213/255 [04:35<00:51,  1.21s/it][1,0]<stderr>:train:  84% 214/255 [04:37<00:49,  1.21s/it][1,0]<stderr>:train:  84% 215/255 [04:38<00:48,  1.20s/it][1,0]<stderr>:train:  85% 216/255 [04:39<00:46,  1.20s/it][1,0]<stderr>:train:  85% 217/255 [04:40<00:45,  1.20s/it][1,0]<stderr>:train:  85% 218/255 [04:41<00:44,  1.20s/it][1,0]<stderr>:train:  86% 219/255 [04:43<00:43,  1.20s/it][1,0]<stderr>:train:  86% 220/255 [04:44<00:42,  1.20s/it][1,0]<stderr>:train:  87% 221/255 [04:45<00:40,  1.20s/it][1,0]<stderr>:train:  87% 222/255 [04:46<00:39,  1.20s/it][1,0]<stderr>:train:  87% 223/255 [04:47<00:39,  1.22s/it][1,0]<stderr>:train:  88% 224/255 [04:49<00:37,  1.22s/it][1,0]<stderr>:train:  88% 225/255 [04:50<00:36,  1.21s/it][1,0]<stderr>:train:  89% 226/255 [04:51<00:35,  1.21s/it][1,0]<stderr>:train:  89% 227/255 [04:52<00:33,  1.21s/it][1,0]<stderr>:train:  89% 228/255 [04:53<00:32,  1.21s/it][1,0]<stderr>:train:  90% 229/255 [04:55<00:31,  1.21s/it][1,0]<stderr>:train:  90% 230/255 [04:56<00:30,  1.22s/it][1,0]<stderr>:train:  91% 231/255 [04:57<00:29,  1.23s/it][1,0]<stderr>:train:  91% 232/255 [04:58<00:27,  1.21s/it][1,0]<stderr>:train:  91% 233/255 [05:00<00:26,  1.21s/it][1,0]<stderr>:train:  92% 234/255 [05:01<00:25,  1.21s/it][1,0]<stderr>:train:  92% 235/255 [05:02<00:24,  1.22s/it][1,0]<stderr>:train:  93% 236/255 [05:03<00:23,  1.21s/it][1,0]<stderr>:train:  93% 237/255 [05:04<00:21,  1.22s/it][1,0]<stderr>:train:  93% 238/255 [05:06<00:20,  1.21s/it][1,0]<stderr>:train:  94% 239/255 [05:07<00:19,  1.21s/it][1,0]<stderr>:train:  94% 240/255 [05:08<00:18,  1.22s/it][1,0]<stderr>:train:  95% 241/255 [05:09<00:16,  1.21s/it][1,0]<stderr>:train:  95% 242/255 [05:10<00:15,  1.21s/it][1,0]<stderr>:train:  95% 243/255 [05:12<00:14,  1.21s/it][1,0]<stderr>:train:  96% 244/255 [05:13<00:13,  1.22s/it][1,0]<stderr>:train:  96% 245/255 [05:14<00:12,  1.22s/it][1,0]<stderr>:train:  96% 246/255 [05:15<00:10,  1.21s/it][1,0]<stderr>:train:  97% 247/255 [05:17<00:09,  1.21s/it][1,0]<stderr>:train:  97% 248/255 [05:18<00:08,  1.22s/it][1,0]<stderr>:train:  98% 249/255 [05:19<00:07,  1.20s/it][1,0]<stderr>:train:  98% 250/255 [05:20<00:05,  1.19s/it][1,0]<stderr>:train:  98% 251/255 [05:21<00:04,  1.18s/it][1,0]<stderr>:train:  99% 252/255 [05:22<00:03,  1.18s/it][1,0]<stderr>:train:  99% 253/255 [05:24<00:02,  1.17s/it][1,0]<stderr>:train: 100% 254/255 [05:25<00:01,  1.17s/it][1,0]<stderr>:train: 100% 255/255 [05:25<00:00,  1.03it/s][1,0]<stderr>:train: 100% 255/255 [05:25<00:00,  1.28s/it][1,0]<stdout>:         873469 function calls (859642 primitive calls) in 325.819 seconds
[1,0]<stdout>:
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:      255  304.711    1.195  304.711    1.195 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,0]<stdout>:        4   11.888    2.972   11.888    2.972 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:     1072    3.903    0.004    3.903    0.004 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:    10965    0.872    0.000    0.872    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:     3315    0.542    0.000    0.542    0.000 {built-in method conv2d}
[1,0]<stdout>:    29580    0.453    0.000    0.453    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.365    0.000    0.365    0.000 {built-in method batch_norm}
[1,0]<stdout>:    15045    0.339    0.000    0.339    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    14790    0.207    0.000    0.207    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.150    0.000    0.613    0.000 batchnorm.py:99(forward)
[1,0]<stdout>:    14790    0.149    0.000    0.149    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     4080    0.145    0.000    0.145    0.000 {built-in method mm}
[1,0]<stdout>:      255    0.126    0.000    0.640    0.003 optimizer.py:232(synchronize)
[1,0]<stdout>:     3825    0.111    0.000    0.111    0.000 {built-in method relu_}
[1,0]<stdout>:      510    0.110    0.000    0.110    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:         827214 function calls (813387 primitive calls) in 325.822 seconds
[1,1]<stdout>:
[1,0]<stdout>:14280/510    0.109    0.000    1.781    0.003 module.py:710(_call_impl)
[1,0]<stdout>:    88740    0.101    0.000    0.115    0.000 tensor.py:725(grad)
[1,0]<stdout>:    14790    0.099    0.000    0.099    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:      255    0.085    0.000    0.917    0.004 sgd.py:75(step)
[1,0]<stdout>:        1    0.081    0.081  325.818  325.818 train.py:338(train)
[1,1]<stdout>:      255  304.511    1.194  304.511    1.194 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:        4   11.885    2.971   11.885    2.971 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:      813    4.350    0.005    4.350    0.005 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:     1275    0.077    0.000    0.077    0.000 {built-in method max_pool2d}
[1,0]<stdout>:      765    0.072    0.000    0.072    0.000 {built-in method addmm}
[1,0]<stdout>:        8    0.072    0.009    0.072    0.009 {method 'dump' of '_pickle.Pickler' objects}
[1,0]<stdout>:      267    0.066    0.000    0.066    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:     4845    0.057    0.000    0.057    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    10965    0.785    0.000    0.785    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:     3315    0.549    0.000    0.549    0.000 {built-in method conv2d}
[1,0]<stdout>:      255    0.041    0.000    0.395    0.002 optimizer.py:166(zero_grad)
[1,0]<stdout>:     4080    0.036    0.000    0.036    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29580    0.489    0.000    0.489    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.383    0.000    0.383    0.000 {built-in method batch_norm}
[1,1]<stdout>:    15045    0.361    0.000    0.361    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    0.258    0.000    0.258    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      510    0.032    0.000    0.032    0.000 {built-in method dropout}
[1,0]<stdout>:      510    0.028    0.000    1.691    0.003 container.py:115(forward)
[1,0]<stdout>:     3370    0.028    0.000    0.033    0.000 module.py:774(__setattr__)
[1,0]<stdout>:      511    0.028    0.000    0.028    0.000 {method 'item' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29070    0.027    0.000    0.027    0.000 module.py:758(__getattr__)
[1,0]<stdout>:       14    0.023    0.002    0.023    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:    14790    0.153    0.000    0.153    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.152    0.000    0.632    0.000 batchnorm.py:99(forward)
[1,1]<stdout>:     4080    0.149    0.000    0.149    0.000 {built-in method mm}
[1,1]<stdout>:      255    0.124    0.000    0.656    0.003 optimizer.py:232(synchronize)
[1,0]<stdout>:     3315    0.021    0.000    0.409    0.000 functional.py:1998(batch_norm)
[1,0]<stdout>:    10965    0.018    0.000    0.893    0.000 mpi_ops.py:928(synchronize)
[1,0]<stdout>:    44370    0.018    0.000    0.028    0.000 tensor.py:458(__hash__)
[1,0]<stdout>:    14790    0.017    0.000    0.245    0.000 compression.py:363(decompress)
[1,1]<stdout>:     3825    0.124    0.000    0.124    0.000 {built-in method relu_}
[1,1]<stdout>:    88740    0.109    0.000    0.126    0.000 tensor.py:725(grad)
[1,1]<stdout>:14280/510    0.107    0.000    1.824    0.004 module.py:710(_call_impl)
[1,1]<stdout>:      255    0.089    0.000    0.987    0.004 sgd.py:75(step)
[1,0]<stdout>:      255    0.017    0.000    0.057    0.000 summary.py:137(scalar)
[1,0]<stdout>:    91045    0.016    0.000    0.016    0.000 {built-in method builtins.hasattr}
[1,0]<stdout>:    86603    0.016    0.000    0.016    0.000 {built-in method builtins.isinstance}
[1,0]<stdout>:     3315    0.015    0.000    0.559    0.000 conv.py:410(_conv_forward)
[1,0]<stdout>:    14280    0.015    0.000    0.015    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:     1275    0.079    0.000    0.079    0.000 {built-in method max_pool2d}
[1,1]<stdout>:        1    0.074    0.074  325.822  325.822 train.py:338(train)
[1,0]<stdout>:      255    0.014    0.000    0.014    0.000 {built-in method torch._C._nn.nll_loss}
[1,0]<stdout>:      255    0.014    0.000    0.014    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:      765    0.073    0.000    0.073    0.000 {built-in method addmm}
[1,1]<stdout>:        8    0.070    0.009    0.071    0.009 {method 'dump' of '_pickle.Pickler' objects}
[1,1]<stdout>:     4845    0.060    0.000    0.060    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.051    0.000    0.051    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      257    0.013    0.000    0.024    0.000 std.py:355(format_meter)
[1,0]<stdout>:      256    0.013    0.000    0.020    0.000 sampler.py:206(__iter__)
[1,0]<stdout>:      255    0.013    0.000    0.013    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    14790    0.012    0.000    0.049    0.000 optimizer.py:298(<listcomp>)
[1,0]<stdout>:      269    0.012    0.000    0.012    0.000 {method 'clear' of 'dict' objects}
[1,1]<stdout>:    14790    0.049    0.000    0.049    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.041    0.000    0.399    0.002 optimizer.py:166(zero_grad)
[1,1]<stdout>:     4080    0.039    0.000    0.039    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.030    0.000    0.030    0.000 {built-in method dropout}
[1,0]<stdout>:     3315    0.011    0.000    0.012    0.000 functional.py:1980(_verify_batch_size)
[1,0]<stdout>:     3315    0.010    0.000    0.574    0.000 conv.py:418(forward)
[1,0]<stdout>:    44399    0.010    0.000    0.010    0.000 {built-in method builtins.id}
[1,0]<stdout>:      255    0.010    0.000    0.027    0.000 x2num.py:11(check_nan)
[1,0]<stdout>:      255    0.010    0.000    0.894    0.004 {built-in method apply}
[1,1]<stdout>:      510    0.029    0.000    1.727    0.003 container.py:115(forward)
[1,0]<stdout>:      255    0.009    0.000    0.009    0.000 {built-in method ones_like}
[1,1]<stdout>:     3370    0.028    0.000    0.033    0.000 module.py:774(__setattr__)
[1,1]<stdout>:      511    0.027    0.000    0.027    0.000 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29070    0.027    0.000    0.027    0.000 module.py:758(__getattr__)
[1,1]<stdout>:       14    0.026    0.002    0.026    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:     3315    0.021    0.000    0.426    0.000 functional.py:1998(batch_norm)
[1,0]<stdout>:    57630    0.009    0.000    0.009    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,0]<stdout>:51530/51527    0.008    0.000    0.008    0.000 {built-in method builtins.len}
[1,0]<stdout>:     3825    0.008    0.000    0.120    0.000 functional.py:1106(relu)
[1,0]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method tensor}
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {method 'reduce' of 'numpy.ufunc' objects}
[1,1]<stdout>:    44370    0.019    0.000    0.031    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:    10965    0.019    0.000    0.806    0.000 mpi_ops.py:928(synchronize)
[1,0]<stdout>:    11449    0.007    0.000    0.010    0.000 utils.py:330(<genexpr>)
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,0]<stdout>:      511    0.007    0.000    0.007    0.000 basics.py:183(size)
[1,1]<stdout>:    90530    0.018    0.000    0.018    0.000 {built-in method builtins.hasattr}
[1,1]<stdout>:    14790    0.018    0.000    0.254    0.000 compression.py:363(decompress)
[1,1]<stdout>:    85070    0.016    0.000    0.016    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:      256    0.016    0.000    0.027    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:      255    0.015    0.000    0.015    0.000 {built-in method flatten}
[1,0]<stdout>:     4080    0.007    0.000    0.007    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3825    0.007    0.000    0.126    0.000 activation.py:101(forward)
[1,0]<stdout>:      515    0.006    0.000    0.024    0.000 queues.py:80(put)
[1,0]<stdout>:      255    0.006    0.000    0.138    0.001 std.py:1197(update)
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {built-in method flatten}
[1,0]<stdout>:      255    0.006    0.000    1.572    0.006 optimizer.py:337(step)
[1,1]<stdout>:    14280    0.014    0.000    0.014    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:      255    0.014    0.000    0.014    0.000 {built-in method torch._C._nn.nll_loss}
[1,1]<stdout>:      255    0.014    0.000    0.014    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:      255    0.013    0.000    0.013    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      256    0.006    0.000   16.098    0.063 std.py:1159(__iter__)
[1,0]<stdout>:      765    0.006    0.000    0.095    0.000 functional.py:1655(linear)
[1,0]<stdout>:      255    0.006    0.000    1.734    0.007 vgg.py:42(forward)
[1,1]<stdout>:     3315    0.012    0.000    0.563    0.000 conv.py:410(_conv_forward)
[1,1]<stdout>:    44399    0.012    0.000    0.012    0.000 {built-in method builtins.id}
[1,1]<stdout>:    14790    0.012    0.000    0.050    0.000 optimizer.py:298(<listcomp>)
[1,0]<stdout>:     1275    0.006    0.000    0.090    0.000 pooling.py:156(forward)
[1,0]<stdout>:      776    0.005    0.000    0.011    0.000 threading.py:341(notify)
[1,0]<stdout>:      255    0.005    0.000  304.734    1.195 tensor.py:155(backward)
[1,1]<stdout>:      269    0.011    0.000    0.011    0.000 {method 'clear' of 'dict' objects}
[1,0]<stdout>:        8    0.005    0.001    0.077    0.010 reduction.py:58(dump)
[1,1]<stdout>:     3315    0.011    0.000    0.578    0.000 conv.py:418(forward)
[1,1]<stdout>:     3315    0.011    0.000    0.012    0.000 functional.py:1980(_verify_batch_size)
[1,1]<stdout>:    57630    0.010    0.000    0.010    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:      255    0.010    0.000    0.807    0.003 {built-in method apply}
[1,1]<stdout>:      255    0.010    0.000    0.010    0.000 {built-in method ones_like}
[1,0]<stdout>:     1579    0.005    0.000    0.005    0.000 {method 'format' of 'str' objects}
[1,0]<stdout>:      510    0.005    0.000    0.038    0.000 functional.py:950(dropout)
[1,0]<stdout>:     1530    0.005    0.000    0.005    0.000 std.py:233(__call__)
[1,0]<stdout>:      524    0.005    0.000    0.005    0.000 {method 'release' of '_thread.lock' objects}
[1,0]<stdout>:      255    0.004    0.000    0.024    0.000 writer.py:131(add_summary)
[1,0]<stdout>:      255    0.004    0.000  304.729    1.195 __init__.py:57(backward)
[1,1]<stdout>:51532/51529    0.009    0.000    0.009    0.000 {built-in method builtins.len}
[1,0]<stdout>:      256    0.004    0.000    3.971    0.016 dataloader.py:945(_next_data)
[1,1]<stdout>:     3825    0.008    0.000    0.133    0.000 functional.py:1106(relu)
[1,1]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method tensor}
[1,1]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {built-in method numpy.array}
[1,0]<stdout>:      255    0.004    0.000    0.037    0.000 x2num.py:18(make_np)
[1,0]<stdout>:      257    0.004    0.000    0.005    0.000 std.py:1445(format_dict)
[1,0]<stdout>:      255    0.004    0.000    0.087    0.000 writer.py:401(add_scalar)
[1,1]<stdout>:     4080    0.007    0.000    0.007    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3825    0.006    0.000    0.139    0.000 activation.py:101(forward)
[1,1]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     1275    0.006    0.000    0.092    0.000 pooling.py:156(forward)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      256    0.004    0.000    0.004    0.000 {built-in method now}
[1,0]<stdout>:      255    0.003    0.000    1.575    0.006 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:      765    0.006    0.000    0.096    0.000 functional.py:1655(linear)
[1,1]<stdout>:        8    0.005    0.001    0.076    0.010 reduction.py:58(dump)
[1,1]<stdout>:      255    0.005    0.000    1.777    0.007 vgg.py:42(forward)
[1,0]<stdout>:      255    0.003    0.000    0.019    0.000 writer.py:115(add_event)
[1,0]<stdout>:     1275    0.003    0.000    0.084    0.000 _jit_internal.py:237(fn)
[1,0]<stdout>:      256    0.003    0.000    0.128    0.000 std.py:1324(refresh)
[1,0]<stdout>:      765    0.003    0.000    0.099    0.000 linear.py:90(forward)
[1,1]<stdout>:      255    0.005    0.000    1.656    0.006 optimizer.py:337(step)
[1,1]<stdout>:      255    0.005    0.000  304.532    1.194 tensor.py:155(backward)
[1,1]<stdout>:      256    0.005    0.000    4.432    0.017 dataloader.py:945(_next_data)
[1,1]<stdout>:      510    0.004    0.000    0.036    0.000 functional.py:950(dropout)
[1,1]<stdout>:      256    0.004    0.000    0.004    0.000 basics.py:183(size)
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 batchnorm.py:275(_check_input_dim)
[1,0]<stdout>:     1275    0.003    0.000    0.081    0.000 functional.py:564(_max_pool2d)
[1,0]<stdout>:      255    0.003    0.000    0.898    0.004 mpi_ops.py:209(allreduce)
[1,0]<stdout>:      255    0.003    0.000    0.926    0.004 grad_mode.py:12(decorate_context)
[1,0]<stdout>:      255    0.003    0.000    0.009    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:      255    0.004    0.000    0.008    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:      521    0.004    0.000    0.007    0.000 threading.py:341(notify)
[1,1]<stdout>:    16573    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}
[1,0]<stdout>:    16573    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
[1,0]<stdout>:    10970    0.003    0.000    0.003    0.000 {method 'pop' of 'dict' objects}
[1,0]<stdout>:      255    0.003    0.000    0.885    0.003 mpi_ops.py:191(forward)
[1,0]<stdout>:    11192    0.003    0.000    0.003    0.000 {built-in method unicodedata.east_asian_width}
[1,1]<stdout>:      255    0.004    0.000    0.810    0.003 mpi_ops.py:209(allreduce)
[1,1]<stdout>:      255    0.004    0.000    4.355    0.017 queue.py:153(get)
[1,1]<stdout>:      255    0.003    0.000    4.364    0.017 dataloader.py:912(_get_data)
[1,1]<stdout>:      255    0.003    0.000  304.527    1.194 __init__.py:57(backward)
[1,0]<stdout>:      255    0.003    0.000    0.013    0.000 __init__.py:25(_make_grads)
[1,0]<stdout>:      255    0.003    0.000    3.913    0.015 dataloader.py:912(_get_data)
[1,0]<stdout>:     3315    0.003    0.000    0.004    0.000 __init__.py:31(__get__)
[1,0]<stdout>:      255    0.003    0.000    3.905    0.015 queue.py:153(get)
[1,1]<stdout>:     1275    0.003    0.000    0.086    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:    10971    0.003    0.000    0.003    0.000 {method 'pop' of 'dict' objects}
[1,1]<stdout>:     1275    0.003    0.000    0.082    0.000 functional.py:564(_max_pool2d)
[1,1]<stdout>:     3315    0.003    0.000    0.005    0.000 batchnorm.py:275(_check_input_dim)
[1,1]<stdout>:      263    0.003    0.000    0.042    0.000 dataloader.py:991(_try_put_index)
[1,0]<stdout>:      255    0.003    0.000    0.018    0.000 functional.py:2158(nll_loss)
[1,0]<stdout>:      257    0.003    0.000    0.121    0.000 std.py:1463(display)
[1,0]<stdout>:      257    0.003    0.000    0.031    0.000 std.py:1149(__str__)
[1,0]<stdout>:      255    0.003    0.000    0.013    0.000 fromnumeric.py:2123(sum)
[1,0]<stdout>:      263    0.003    0.000    0.032    0.000 dataloader.py:991(_try_put_index)
[1,1]<stdout>:      255    0.003    0.000    1.659    0.007 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:      255    0.003    0.000    0.996    0.004 grad_mode.py:12(decorate_context)
[1,1]<stdout>:      260    0.003    0.000    0.013    0.000 queues.py:80(put)
[1,0]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,0]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:        1    0.003    0.003    0.003    0.003 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:      255    0.003    0.000    0.013    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:     3315    0.003    0.000    0.004    0.000 __init__.py:31(__get__)
[1,1]<stdout>:    10114    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:      765    0.003    0.000    0.100    0.000 linear.py:90(forward)
[1,0]<stdout>:      255    0.002    0.000    0.397    0.002 optimizer.py:353(zero_grad)
[1,0]<stdout>:      257    0.002    0.000    0.012    0.000 {built-in method builtins.sum}
[1,0]<stdout>:      255    0.002    0.000    0.010    0.000 fromnumeric.py:69(_wrapreduction)
[1,0]<stdout>:      255    0.002    0.000    0.018    0.000 mpi_ops.py:105(_allreduce_async)
[1,0]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.003    0.000    0.018    0.000 functional.py:2158(nll_loss)
[1,1]<stdout>:      255    0.002    0.000    0.797    0.003 mpi_ops.py:191(forward)
[1,1]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      269    0.002    0.000    0.002    0.000 {method 'release' of '_thread.lock' objects}
[1,0]<stdout>:      255    0.002    0.000    0.034    0.000 functional.py:2370(cross_entropy)
[1,0]<stdout>:      257    0.002    0.000    0.087    0.000 std.py:348(print_status)
[1,0]<stdout>:      255    0.002    0.000    0.019    0.000 functional.py:909(adaptive_avg_pool2d)
[1,0]<stdout>:      260    0.002    0.000    0.003    0.000 std.py:104(acquire)
[1,1]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:      255    0.002    0.000    0.401    0.002 optimizer.py:353(zero_grad)
[1,1]<stdout>:      255    0.002    0.000    0.018    0.000 mpi_ops.py:105(_allreduce_async)
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,0]<stdout>:        5    0.002    0.000    0.006    0.001 queues.py:36(__init__)
[1,0]<stdout>:      255    0.002    0.000    0.037    0.000 loss.py:946(forward)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,0]<stdout>:      257    0.002    0.000    0.069    0.000 std.py:342(fp_write)
[1,1]<stdout>:      255    0.002    0.000    0.027    0.000 mpi_ops.py:152(allreduce_async)
[1,1]<stdout>:      256    0.002    0.000   16.417    0.064 std.py:1159(__iter__)
[1,1]<stdout>:      255    0.002    0.000    0.037    0.000 loss.py:946(forward)
[1,1]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,1]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,0]<stdout>:      512    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
[1,0]<stdout>:      255    0.002    0.000    0.015    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
[1,0]<stdout>:      255    0.002    0.000    0.026    0.000 mpi_ops.py:152(allreduce_async)
[1,0]<stdout>:      255    0.002    0.000    0.017    0.000 <__array_function__ internals>:2(sum)
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:      255    0.002    0.000    0.016    0.000 event_file_writer.py:132(add_event)
[1,1]<stdout>:      255    0.002    0.000    0.004    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:      255    0.002    0.000    0.034    0.000 functional.py:2370(cross_entropy)
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,0]<stdout>:     2040    0.002    0.000    0.003    0.000 {built-in method builtins.any}
[1,0]<stdout>:      513    0.002    0.000    0.004    0.000 std.py:288(format_interval)
[1,1]<stdout>:      255    0.002    0.000    4.357    0.017 dataloader.py:766(_try_get_data)
[1,1]<stdout>:      255    0.002    0.000    0.019    0.000 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 numeric.py:1858(isscalar)
[1,0]<stdout>:      255    0.002    0.000    0.021    0.000 pooling.py:1110(forward)
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 writer.py:318(_check_caffe2_blob)
[1,1]<stdout>:      255    0.001    0.000    0.020    0.000 pooling.py:1110(forward)
[1,0]<stdout>:      255    0.001    0.000    3.907    0.015 dataloader.py:766(_try_get_data)
[1,0]<stdout>:      779    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:      255    0.001    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,1]<stdout>:       20    0.001    0.000    0.004    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:      765    0.001    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,1]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,0]<stdout>:      783    0.001    0.000    0.002    0.000 threading.py:246(__enter__)
[1,0]<stdout>:      765    0.001    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 summary.py:28(_clean_tag)
[1,1]<stdout>:      510    0.001    0.000    0.037    0.000 dropout.py:57(forward)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,0]<stdout>:      510    0.001    0.000    0.039    0.000 dropout.py:57(forward)
[1,0]<stdout>:      260    0.001    0.000    0.002    0.000 std.py:108(release)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,1]<stdout>:      255    0.001    0.000    0.035    0.000 dataloader.py:1010(_process_data)
[1,1]<stdout>:      256    0.001    0.000    4.433    0.017 dataloader.py:362(__next__)
[1,1]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,1]<stdout>:        6    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,1]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,0]<stdout>:      256    0.001    0.000    3.972    0.016 dataloader.py:362(__next__)
[1,0]<stdout>:        1    0.001    0.001    0.001    0.001 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      527    0.001    0.000    0.002    0.000 threading.py:246(__enter__)
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 _VF.py:13(__getattr__)
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,0]<stdout>:      257    0.001    0.000    0.015    0.000 utils.py:333(disp_len)
[1,0]<stdout>:        1    0.001    0.001    0.001    0.001 {built-in method randperm}
[1,0]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,0]<stdout>:      257    0.001    0.000    0.013    0.000 utils.py:329(_text_width)
[1,1]<stdout>:      601    0.001    0.000    0.029    0.000 {built-in method builtins.next}
[1,1]<stdout>:      875    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,0]<stdout>:      255    0.001    0.000    0.028    0.000 dataloader.py:1010(_process_data)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:333(_get_file_writer)
[1,0]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:        7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:        1    0.001    0.001    0.005    0.005 distributed.py:68(__iter__)
[1,1]<stdout>:      256    0.001    0.000    0.002    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:      266    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:      255    0.001    0.000    0.007    0.000 mpi_ops.py:92(_check_function)
[1,1]<stdout>:      255    0.001    0.000    0.014    0.000 functional.py:1567(log_softmax)
[1,1]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,1]<stdout>:        1    0.001    0.001   11.981   11.981 dataloader.py:690(__init__)
[1,0]<stdout>:      786    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,0]<stdout>:      510    0.001    0.000    0.001    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:      881    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,0]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,0]<stdout>:      255    0.001    0.000    0.007    0.000 mpi_ops.py:92(_check_function)
[1,0]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,0]<stdout>:      255    0.001    0.000    0.013    0.000 functional.py:1567(log_softmax)
[1,1]<stdout>:      530    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,1]<stdout>:        4    0.001    0.000   11.963    2.991 popen_forkserver.py:41(_launch)
[1,0]<stdout>:      516    0.001    0.000    0.067    0.000 utils.py:143(inner)
[1,0]<stdout>:      510    0.001    0.000    0.001    0.000 {built-in method torch._C.is_grad_enabled}
[1,0]<stdout>:      603    0.001    0.000    0.022    0.000 {built-in method builtins.next}
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 queue.py:216(_get)
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 {built-in method torch._C.is_grad_enabled}
[1,1]<stdout>:      274    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,0]<stdout>:      530    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
[1,0]<stdout>:      512    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 util.py:221(impl)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 util.py:221(impl)
[1,0]<stdout>:        4    0.000    0.000   11.967    2.992 popen_forkserver.py:41(_launch)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,1]<stdout>:      263    0.000    0.000    0.028    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,1]<stdout>:       34    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
[1,0]<stdout>:      257    0.000    0.000    0.000    0.000 {built-in method builtins.max}
[1,0]<stdout>:     1277    0.000    0.000    0.000    0.000 {built-in method time.time}
[1,0]<stdout>:     1026    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,1]<stdout>:      295    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,0]<stdout>:      256    0.000    0.000    0.001    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      263    0.000    0.000    0.021    0.000 dataloader.py:356(_next_index)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:158(_start_thread)
[1,1]<stdout>:      258    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,1]<stdout>:      269    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,0]<stdout>:        4    0.000    0.000    0.023    0.006 popen_fork.py:40(wait)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,0]<stdout>:        1    0.000    0.000  325.819  325.819 {built-in method builtins.exec}
[1,0]<stdout>:      258    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,0]<stdout>:        1    0.000    0.000   11.980   11.980 dataloader.py:690(__init__)
[1,0]<stdout>:       36    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      297    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,1]<stdout>:        4    0.000    0.000   11.965    2.991 process.py:110(start)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,0]<stdout>:      765    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:      783    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:      513    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,1]<stdout>:        6    0.000    0.000    0.001    0.000 threading.py:761(__init__)
[1,1]<stdout>:      527    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,1]<stdout>:      274    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:       15    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.002    0.002 distributed.py:68(__iter__)
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:        6    0.000    0.000    0.003    0.001 queues.py:158(_start_thread)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 queues.py:36(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.026    0.002 connection.py:917(wait)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,1]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:2118(_sum_dispatcher)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:285(choice)
[1,1]<stdout>:        1    0.000    0.000  325.822  325.822 {built-in method builtins.exec}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:        5    0.000    0.000    0.005    0.001 context.py:100(Queue)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:       14    0.000    0.000    0.023    0.002 connection.py:917(wait)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,1]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,1]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:        1    0.000    0.000  325.819  325.819 <string>:1(<module>)
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        5    0.000    0.000    0.006    0.001 context.py:100(Queue)
[1,0]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:        9    0.000    0.000    4.348    0.483 threading.py:270(wait)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,1]<stdout>:        4    0.000    0.000   11.964    2.991 popen_fork.py:15(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,0]<stdout>:      274    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,0]<stdout>:        2    0.000    0.000    0.026    0.013 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,1]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.000    0.000  325.822  325.822 <string>:1(<module>)
[1,0]<stdout>:        4    0.000    0.000   11.968    2.992 process.py:110(start)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,0]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,1]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,1]<stdout>:        2    0.000    0.000    0.029    0.014 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:       11    0.000    0.000    0.003    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:       10    0.000    0.000    3.901    0.390 threading.py:270(wait)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:        4    0.000    0.000   11.967    2.992 popen_fork.py:15(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:       14    0.000    0.000    0.026    0.002 selectors.py:402(select)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:       14    0.000    0.000    0.023    0.002 selectors.py:402(select)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,1]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,1]<stdout>:        6    0.000    0.000    0.002    0.000 threading.py:540(wait)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:        7    0.000    0.000    0.003    0.000 threading.py:834(start)
[1,0]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,0]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,1]<stdout>:        6    0.000    0.000    0.003    0.001 threading.py:834(start)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,0]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:       11    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,1]<stdout>:        4    0.000    0.000   11.964    2.991 context.py:288(_Popen)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,0]<stdout>:        4    0.000    0.000    0.024    0.006 process.py:142(join)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:145(register)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:       22    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,1]<stdout>:        4    0.000    0.000    0.026    0.007 process.py:142(join)
[1,1]<stdout>:        4    0.000    0.000    0.026    0.007 popen_fork.py:40(wait)
[1,1]<stdout>:      276    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,0]<stdout>:      266    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,0]<stdout>:        4    0.000    0.000   11.967    2.992 context.py:288(_Popen)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,1]<stdout>:       70    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:        7    0.000    0.000    0.002    0.000 threading.py:540(wait)
[1,0]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:      106    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
[1,1]<stdout>:      104    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,1]<stdout>:       50    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:       53    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:        4    0.000    0.000   11.967    2.992 popen_forkserver.py:33(__init__)
[1,0]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55cc5c3749a0}
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x5632ab2739a0}
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:145(register)
[1,1]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,0]<stdout>:       72    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f661a814c10}
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:583(_decr_instances)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,1]<stdout>:        4    0.000    0.000   11.964    2.991 popen_forkserver.py:33(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f1d9e5b8c10}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:282(_screen_shape_linux)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:329(status_printer)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:149(unregister)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,0]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,0]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,1]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:296(<listcomp>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:104(acquire)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:979(join)
[1,0]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,1]<stdout>:        1    0.000    0.000   11.981   11.981 dataloader.py:287(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.001    0.001 threading.py:979(join)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:        1    0.000    0.000   11.980   11.980 dataloader.py:287(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,1]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:748(encode)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,0]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,1]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:108(release)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1285(fp_write)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:171(__eq__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 std.py:228(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:215(_supports_unicode)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        6    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:201(_is_utf)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:88(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:231(_screen_shape_wrapper)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1300(<lambda>)
[1,0]<stdout>:
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,1]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:this epoch's train spend:325.82828974723816s
[1,1]<stdout>:this epoch's train spend:325.8307375907898s
[1,0]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:26<33:58, 26.14s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:26<34:07, 26.25s/it][1,0]<stderr>:test:   5%|▌         | 4/79 [00:26<06:14,  4.99s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:28<04:00,  3.29s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:28<05:24,  4.39s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:29<02:31,  2.14s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:30<02:21,  2.02s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:30<02:39,  2.28s/it][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:31<01:14,  1.11s/it][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:33<01:27,  1.32s/it][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:33<01:43,  1.57s/it][1,0]<stderr>:test:  20%|██        | 16/79 [00:34<00:56,  1.12it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:36<01:15,  1.22s/it][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:36<01:04,  1.04s/it][1,0]<stderr>:test:  25%|██▌       | 20/79 [00:36<00:39,  1.48it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:38<00:59,  1.03s/it][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:38<00:53,  1.08it/s][1,0]<stderr>:test:  30%|███       | 24/79 [00:39<00:34,  1.59it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:40<00:46,  1.17it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:41<00:44,  1.22it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:41<00:35,  1.45it/s][1,0]<stderr>:test:  35%|███▌      | 28/79 [00:41<00:27,  1.87it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:43<00:44,  1.13it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:44<00:42,  1.19it/s][1,0]<stderr>:test:  41%|████      | 32/79 [00:44<00:25,  1.81it/s][1,1]<stderr>:test:  41%|████      | 32/79 [00:44<00:32,  1.45it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:46<00:40,  1.13it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:46<00:40,  1.14it/s][1,0]<stderr>:test:  46%|████▌     | 36/79 [00:47<00:24,  1.77it/s][1,1]<stderr>:test:  46%|████▌     | 36/79 [00:48<00:31,  1.39it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:49<00:31,  1.32it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:49<00:27,  1.49it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:49<00:35,  1.20it/s][1,0]<stderr>:test:  51%|█████     | 40/79 [00:49<00:21,  1.82it/s][1,1]<stderr>:test:  51%|█████     | 40/79 [00:50<00:24,  1.60it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:51<00:27,  1.41it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:51<00:28,  1.33it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:52<00:24,  1.53it/s][1,0]<stderr>:test:  56%|█████▌    | 44/79 [00:52<00:17,  1.95it/s][1,1]<stderr>:test:  56%|█████▌    | 44/79 [00:53<00:24,  1.46it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:54<00:24,  1.39it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:54<00:28,  1.20it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [00:54<00:22,  1.46it/s][1,0]<stderr>:test:  61%|██████    | 48/79 [00:54<00:16,  1.93it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [00:56<00:20,  1.48it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:56<00:19,  1.55it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:57<00:25,  1.17it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [00:57<00:19,  1.46it/s][1,0]<stderr>:test:  66%|██████▌   | 52/79 [00:57<00:14,  1.93it/s][1,1]<stderr>:test:  66%|██████▌   | 52/79 [00:58<00:18,  1.46it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:59<00:17,  1.51it/s][1,0]<stderr>:test:  68%|██████▊   | 54/79 [01:00<00:17,  1.42it/s][1,0]<stderr>:test:  71%|███████   | 56/79 [01:00<00:13,  1.75it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [01:00<00:19,  1.26it/s][1,1]<stderr>:test:  71%|███████   | 56/79 [01:01<00:15,  1.49it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [01:02<00:19,  1.15it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [01:03<00:15,  1.32it/s][1,0]<stderr>:test:  76%|███████▌  | 60/79 [01:03<00:11,  1.62it/s][1,1]<stderr>:test:  76%|███████▌  | 60/79 [01:04<00:13,  1.46it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [01:04<00:10,  1.69it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [01:05<00:15,  1.14it/s][1,0]<stderr>:test:  81%|████████  | 64/79 [01:05<00:08,  1.86it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [01:06<00:12,  1.38it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [01:07<00:10,  1.46it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [01:08<00:11,  1.22it/s][1,0]<stderr>:test:  86%|████████▌ | 68/79 [01:08<00:05,  1.87it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [01:08<00:09,  1.40it/s][1,1]<stderr>:test:  86%|████████▌ | 68/79 [01:10<00:08,  1.33it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:10<00:06,  1.47it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [01:11<00:09,  1.11it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [01:12<00:08,  1.12it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [01:13<00:05,  1.33it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:14<00:04,  1.23it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [01:15<00:05,  1.10it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [01:15<00:04,  1.18it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [01:16<00:02,  1.49it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:17<00:01,  1.29it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:17<00:01,  1.26it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:17<00:00,  1.02it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [01:18<00:00,  1.33it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:18<00:00,  1.01it/s][1,0]<stdout>:
[1,0]<stdout>:[acc/test_top1] = 0.000000
[1,0]<stdout>:[acc/test_top5] = 0.760000
[1,0]<stdout>:[acc/test_top1_best] = 0.000000
[1,1]<stdout>:spend all time:325.8307375907898s
[1,0]<stdout>:[save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints
[1,0]<stdout>:spend all time:325.82828974723816s
[1,0]<stdout>:==> loading configs from ['configs/imagenet/vgg16_bn.py', 'configs/methods/wm0.py', 'configs/methods/fp16.py', 'configs/methods/int32.py']
[1,0]<stdout>:[train.save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:[seed] = 42
[1,0]<stdout>:[data]
[1,0]<stdout>:  [num_threads_per_worker] = 4
[1,0]<stdout>:[train]
[1,0]<stdout>:  [dgc] = False
[1,0]<stdout>:  [compression]
[1,0]<stdout>:    [func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:    [compress_ratio] = 0.05
[1,0]<stdout>:    [sample_ratio] = 0.01
[1,0]<stdout>:    [strided_sample] = True
[1,0]<stdout>:    [compress_upper_bound] = 1.3
[1,0]<stdout>:    [compress_lower_bound] = 0.8
[1,0]<stdout>:    [max_adaptation_iters] = 10
[1,0]<stdout>:    [resample] = True
[1,0]<stdout>:    [memory]
[1,0]<stdout>:      [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:      [momentum] = 0.9
[1,0]<stdout>:    [warmup_epochs] = 0
[1,0]<stdout>:    [fp16_values] = True
[1,0]<stdout>:    [int32_indices] = True
[1,0]<stdout>:  [criterion]
[1,0]<stdout>:    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
[1,0]<stdout>:  [optimizer]
[1,0]<stdout>:    [func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:    [momentum] = 0.9
[1,0]<stdout>:    [lr] = 0.05
[1,0]<stdout>:    [weight_decay] = 5e-05
[1,0]<stdout>:  [schedule_lr_per_epoch] = True
[1,0]<stdout>:  [warmup_lr_epochs] = 5
[1,0]<stdout>:  [metric] = acc/test_top1
[1,0]<stdout>:  [meters]
[1,0]<stdout>:    [acc/{}_top1]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 1
[1,0]<stdout>:    [acc/{}_top5]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 5
[1,0]<stdout>:  [optimize_bn_separately] = False
[1,0]<stdout>:  [num_epochs] = 1
[1,0]<stdout>:  [batch_size] = 64
[1,0]<stdout>:  [scheduler]
[1,0]<stdout>:    [func] = <class 'torch.optim.lr_scheduler.MultiStepLR'>
[1,0]<stdout>:    [milestones] = [25, 55, 75]
[1,0]<stdout>:    [gamma] = 0.1
[1,0]<stdout>:  [topk] = False
[1,0]<stdout>:  [fp16] = False
[1,0]<stdout>:  [powersgd] = True
[1,0]<stdout>:  [sign] = False
[1,0]<stdout>:  [efsign] = False
[1,0]<stdout>:  [natural] = False
[1,0]<stdout>:  [onebit] = False
[1,0]<stdout>:  [qsgd] = False
[1,0]<stdout>:  [randomk] = False
[1,0]<stdout>:  [signum] = False
[1,0]<stdout>:  [terngrad] = False
[1,0]<stdout>:  [num_batches_per_step] = 1
[1,0]<stdout>:  [save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:  [checkpoint_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/e{epoch}-r0.pth
[1,0]<stdout>:  [latest_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/latest-r0.pth
[1,0]<stdout>:  [best_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/best-r0.pth
[1,0]<stdout>:  [base_lr] = 0.025
[1,0]<stdout>:[dataset]
[1,0]<stdout>:  [func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:  [root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [image_size] = 224
[1,0]<stdout>:[model]
[1,0]<stdout>:  [func] = <function vgg16_bn at 0x7f661a1d7b80>
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [init_weights] = True
[1,0]<stdout>:[device] = cuda
[1,0]<stdout>:
[1,0]<stdout>:==> creating model "[func] = <function vgg16_bn at 0x7f661a1d7b80>
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[init_weights] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> creating dataset "[func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:[root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[image_size] = 224"
[1,0]<stdout>:
[1,0]<stdout>:==> loading dataset "{'num_workers': 4, 'pin_memory': True, 'multiprocessing_context': 'forkserver'}""
[1,0]<stdout>:
[1,0]<stdout>:==> creating optimizer "[func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:[momentum] = 0.9
[1,0]<stdout>:[lr] = 0.1
[1,0]<stdout>:[weight_decay] = 5e-05"
[1,0]<stdout>:
[1,0]<stdout>:==> creating compression "[func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:[compress_ratio] = 0.05
[1,0]<stdout>:[sample_ratio] = 0.01
[1,0]<stdout>:[strided_sample] = True
[1,0]<stdout>:[compress_upper_bound] = 1.3
[1,0]<stdout>:[compress_lower_bound] = 0.8
[1,0]<stdout>:[max_adaptation_iters] = 10
[1,0]<stdout>:[resample] = True
[1,0]<stdout>:[memory]
[1,0]<stdout>:  [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:  [momentum] = 0.9
[1,0]<stdout>:[warmup_epochs] = 0
[1,0]<stdout>:[fp16_values] = True
[1,0]<stdout>:[int32_indices] = True"[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:==> initializing powersgd compression
[1,0]<stdout>:powersgd init...
[1,1]<stdout>:powersgd init...
[1,0]<stdout>:
[1,0]<stdout>:==> train from scratch
[1,0]<stdout>:
[1,0]<stdout>:==> broadcasting paramters and optimizer state
[1,1]<stdout>:before evaluate
[1,0]<stdout>:before evaluate
[1,1]<stderr>:
[1,0]<stderr>:
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stderr>:test:   1%|▏         | 1/79 [00:18<24:08, 18.57s/it][1,0]<stderr>:test:   1%|▏         | 1/79 [00:18<24:10, 18.60s/it][1,1]<stderr>:test:   3%|▎         | 2/79 [00:18<10:03,  7.84s/it][1,0]<stderr>:test:   3%|▎         | 2/79 [00:18<10:04,  7.85s/it][1,1]<stderr>:test:   4%|▍         | 3/79 [00:19<05:35,  4.41s/it][1,0]<stderr>:test:   4%|▍         | 3/79 [00:19<05:35,  4.42s/it][1,1]<stderr>:test:   5%|▌         | 4/79 [00:19<03:29,  2.80s/it][1,0]<stderr>:test:   5%|▌         | 4/79 [00:19<03:30,  2.80s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:20<02:30,  2.03s/it][1,1]<stderr>:test:   8%|▊         | 6/79 [00:20<01:46,  1.45s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:20<02:42,  2.20s/it][1,1]<stderr>:test:   9%|▉         | 7/79 [00:20<01:18,  1.09s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:21<01:53,  1.56s/it][1,1]<stderr>:test:  10%|█         | 8/79 [00:21<01:00,  1.18it/s][1,0]<stderr>:test:   9%|▉         | 7/79 [00:21<01:23,  1.16s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:21<01:03,  1.12it/s][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:22<01:06,  1.05it/s][1,1]<stderr>:test:  13%|█▎        | 10/79 [00:22<00:52,  1.32it/s][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:22<01:09,  1.01it/s][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:23<00:42,  1.59it/s][1,0]<stderr>:test:  13%|█▎        | 10/79 [00:23<00:54,  1.27it/s][1,1]<stderr>:test:  15%|█▌        | 12/79 [00:23<00:36,  1.86it/s][1,0]<stderr>:test:  14%|█▍        | 11/79 [00:23<00:44,  1.54it/s][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:23<00:36,  1.82it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:24<00:45,  1.45it/s][1,1]<stderr>:test:  18%|█▊        | 14/79 [00:24<00:37,  1.72it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:25<00:47,  1.38it/s][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:25<00:32,  1.98it/s][1,0]<stderr>:test:  18%|█▊        | 14/79 [00:25<00:39,  1.66it/s][1,1]<stderr>:test:  20%|██        | 16/79 [00:25<00:28,  2.21it/s][1,0]<stderr>:test:  19%|█▉        | 15/79 [00:25<00:33,  1.93it/s][1,0]<stderr>:test:  20%|██        | 16/79 [00:25<00:29,  2.16it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:26<00:40,  1.51it/s][1,1]<stderr>:test:  23%|██▎       | 18/79 [00:26<00:34,  1.78it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:27<00:39,  1.57it/s][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:27<00:29,  2.03it/s][1,0]<stderr>:test:  23%|██▎       | 18/79 [00:27<00:34,  1.78it/s][1,1]<stderr>:test:  25%|██▌       | 20/79 [00:27<00:26,  2.25it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:27<00:29,  2.03it/s][1,0]<stderr>:test:  25%|██▌       | 20/79 [00:28<00:26,  2.26it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:28<00:32,  1.77it/s][1,1]<stderr>:test:  28%|██▊       | 22/79 [00:28<00:28,  2.02it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:29<00:24,  2.24it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:29<00:37,  1.54it/s][1,1]<stderr>:test:  30%|███       | 24/79 [00:29<00:22,  2.43it/s][1,0]<stderr>:test:  28%|██▊       | 22/79 [00:29<00:31,  1.80it/s][1,0]<stderr>:test:  29%|██▉       | 23/79 [00:29<00:27,  2.05it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:30<00:26,  2.07it/s][1,0]<stderr>:test:  30%|███       | 24/79 [00:30<00:24,  2.28it/s][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:30<00:23,  2.29it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:30<00:24,  2.09it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:31<00:22,  2.31it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:31<00:41,  1.32it/s][1,0]<stderr>:test:  33%|███▎      | 26/79 [00:32<00:33,  1.59it/s][1,0]<stderr>:test:  34%|███▍      | 27/79 [00:32<00:28,  1.85it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:32<00:32,  1.52it/s][1,0]<stderr>:test:  35%|███▌      | 28/79 [00:32<00:24,  2.10it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:32<00:27,  1.78it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [00:33<00:23,  2.01it/s][1,1]<stderr>:test:  41%|████      | 32/79 [00:33<00:21,  2.23it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:33<00:30,  1.62it/s][1,0]<stderr>:test:  38%|███▊      | 30/79 [00:33<00:26,  1.88it/s][1,0]<stderr>:test:  39%|███▉      | 31/79 [00:34<00:22,  2.12it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:34<00:26,  1.74it/s][1,0]<stderr>:test:  41%|████      | 32/79 [00:34<00:20,  2.33it/s][1,1]<stderr>:test:  43%|████▎     | 34/79 [00:34<00:22,  1.99it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:35<00:23,  1.89it/s][1,1]<stderr>:test:  46%|████▌     | 36/79 [00:35<00:20,  2.13it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:35<00:31,  1.47it/s][1,0]<stderr>:test:  43%|████▎     | 34/79 [00:36<00:25,  1.74it/s][1,0]<stderr>:test:  44%|████▍     | 35/79 [00:36<00:22,  1.99it/s][1,0]<stderr>:test:  46%|████▌     | 36/79 [00:36<00:19,  2.22it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:36<00:29,  1.40it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:37<00:24,  1.67it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:37<00:22,  1.74it/s][1,1]<stderr>:test:  51%|█████     | 40/79 [00:38<00:19,  2.00it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:38<00:29,  1.43it/s][1,0]<stderr>:test:  48%|████▊     | 38/79 [00:38<00:24,  1.70it/s][1,0]<stderr>:test:  49%|████▉     | 39/79 [00:38<00:20,  1.96it/s][1,0]<stderr>:test:  51%|█████     | 40/79 [00:39<00:17,  2.19it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:39<00:26,  1.45it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:39<00:21,  1.72it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:39<00:18,  1.98it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:40<00:22,  1.70it/s][1,1]<stderr>:test:  56%|█████▌    | 44/79 [00:40<00:15,  2.21it/s][1,0]<stderr>:test:  53%|█████▎    | 42/79 [00:40<00:19,  1.92it/s][1,0]<stderr>:test:  54%|█████▍    | 43/79 [00:40<00:16,  2.16it/s][1,0]<stderr>:test:  56%|█████▌    | 44/79 [00:41<00:14,  2.36it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:41<00:24,  1.36it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [00:41<00:20,  1.63it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [00:42<00:22,  1.42it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:43<00:30,  1.12it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [00:43<00:18,  1.69it/s][1,0]<stderr>:test:  58%|█████▊    | 46/79 [00:43<00:23,  1.38it/s][1,0]<stderr>:test:  59%|█████▉    | 47/79 [00:43<00:19,  1.65it/s][1,0]<stderr>:test:  61%|██████    | 48/79 [00:44<00:16,  1.91it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:44<00:21,  1.40it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [00:44<00:17,  1.67it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [00:44<00:15,  1.78it/s][1,1]<stderr>:test:  66%|██████▌   | 52/79 [00:45<00:13,  2.02it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:45<00:22,  1.35it/s][1,0]<stderr>:test:  63%|██████▎   | 50/79 [00:45<00:17,  1.62it/s][1,0]<stderr>:test:  65%|██████▍   | 51/79 [00:45<00:14,  1.89it/s][1,0]<stderr>:test:  66%|██████▌   | 52/79 [00:46<00:12,  2.13it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:46<00:18,  1.37it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [00:46<00:15,  1.64it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:47<00:13,  1.79it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:47<00:19,  1.36it/s][1,1]<stderr>:test:  71%|███████   | 56/79 [00:47<00:11,  2.04it/s][1,0]<stderr>:test:  68%|██████▊   | 54/79 [00:47<00:15,  1.61it/s][1,0]<stderr>:test:  70%|██████▉   | 55/79 [00:48<00:12,  1.88it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:48<00:12,  1.71it/s][1,0]<stderr>:test:  71%|███████   | 56/79 [00:48<00:10,  2.12it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [00:48<00:10,  1.96it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [00:49<00:11,  1.73it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:49<00:13,  1.64it/s][1,1]<stderr>:test:  76%|███████▌  | 60/79 [00:49<00:09,  1.98it/s][1,0]<stderr>:test:  73%|███████▎  | 58/79 [00:50<00:11,  1.75it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:50<00:08,  2.03it/s][1,0]<stderr>:test:  75%|███████▍  | 59/79 [00:50<00:09,  2.01it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [00:50<00:07,  2.25it/s][1,0]<stderr>:test:  76%|███████▌  | 60/79 [00:50<00:08,  2.23it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [00:52<00:12,  1.24it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:52<00:14,  1.24it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [00:52<00:09,  1.50it/s][1,0]<stderr>:test:  78%|███████▊  | 62/79 [00:52<00:11,  1.47it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:53<00:07,  1.77it/s][1,0]<stderr>:test:  80%|███████▉  | 63/79 [00:53<00:09,  1.74it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [00:53<00:06,  2.02it/s][1,0]<stderr>:test:  81%|████████  | 64/79 [00:53<00:07,  2.00it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:54<00:09,  1.47it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [00:54<00:08,  1.41it/s][1,1]<stderr>:test:  86%|████████▌ | 68/79 [00:54<00:06,  1.68it/s][1,0]<stderr>:test:  84%|████████▎ | 66/79 [00:54<00:07,  1.63it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [00:55<00:05,  1.85it/s][1,0]<stderr>:test:  85%|████████▍ | 67/79 [00:55<00:06,  1.89it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [00:55<00:04,  2.10it/s][1,0]<stderr>:test:  86%|████████▌ | 68/79 [00:55<00:05,  2.13it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [00:56<00:05,  1.54it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [00:56<00:07,  1.41it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [00:57<00:03,  1.79it/s][1,0]<stderr>:test:  89%|████████▊ | 70/79 [00:57<00:05,  1.60it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [00:57<00:02,  2.06it/s][1,0]<stderr>:test:  90%|████████▉ | 71/79 [00:57<00:04,  1.87it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [00:57<00:02,  2.27it/s][1,0]<stderr>:test:  91%|█████████ | 72/79 [00:57<00:03,  2.11it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [00:58<00:02,  1.94it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [00:58<00:03,  1.84it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [00:58<00:01,  2.17it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [00:59<00:00,  2.19it/s][1,0]<stderr>:test:  94%|█████████▎| 74/79 [00:59<00:02,  1.69it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [00:59<00:00,  2.39it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [00:59<00:00,  3.02it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [00:59<00:00,  1.33it/s][1,0]<stderr>:test:  95%|█████████▍| 75/79 [00:59<00:02,  1.95it/s][1,0]<stderr>:test:  96%|█████████▌| 76/79 [01:00<00:01,  2.19it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:00<00:00,  2.02it/s][1,0]<stderr>:test:  99%|█████████▊| 78/79 [01:01<00:00,  1.46it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:01<00:00,  1.94it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:01<00:00,  1.28it/s][1,1]<stdout>:after evaluate
[1,0]<stdout>:after evaluate
[1,0]<stdout>:[acc/test_top1] = 0.060000
[1,0]<stdout>:[acc/test_top5] = 0.560000
[1,1]<stderr>:
[1,0]<stdout>:
[1,0]<stdout>:==> training epoch 0/1
[1,0]<stderr>:
[1,0]<stderr>:train:   0% 0/255 [00:00<?, ?it/s][1,0]<stderr>:train:   0% 1/255 [00:16<1:11:51, 16.97s/it][1,0]<stderr>:train:   1% 2/255 [00:18<32:38,  7.74s/it]  [1,0]<stderr>:train:   1% 3/255 [00:19<19:58,  4.76s/it][1,0]<stderr>:train:   2% 4/255 [00:20<14:09,  3.38s/it][1,0]<stderr>:train:   2% 5/255 [00:21<10:53,  2.61s/it][1,0]<stderr>:train:   2% 6/255 [00:23<08:51,  2.13s/it][1,0]<stderr>:train:   3% 7/255 [00:24<07:37,  1.84s/it][1,0]<stderr>:train:   3% 8/255 [00:25<06:46,  1.65s/it][1,0]<stderr>:train:   4% 9/255 [00:26<06:10,  1.51s/it][1,0]<stderr>:train:   4% 10/255 [00:28<05:47,  1.42s/it][1,0]<stderr>:train:   4% 11/255 [00:29<05:30,  1.36s/it][1,0]<stderr>:train:   5% 12/255 [00:30<05:18,  1.31s/it][1,0]<stderr>:train:   5% 13/255 [00:31<05:11,  1.29s/it][1,0]<stderr>:train:   5% 14/255 [00:32<05:05,  1.27s/it][1,0]<stderr>:train:   6% 15/255 [00:34<05:00,  1.25s/it][1,0]<stderr>:train:   6% 16/255 [00:35<04:55,  1.24s/it][1,0]<stderr>:train:   7% 17/255 [00:36<04:53,  1.23s/it][1,0]<stderr>:train:   7% 18/255 [00:37<04:50,  1.22s/it][1,0]<stderr>:train:   7% 19/255 [00:38<04:47,  1.22s/it][1,0]<stderr>:train:   8% 20/255 [00:40<04:45,  1.21s/it][1,0]<stderr>:train:   8% 21/255 [00:41<04:43,  1.21s/it][1,0]<stderr>:train:   9% 22/255 [00:42<04:39,  1.20s/it][1,0]<stderr>:train:   9% 23/255 [00:43<04:39,  1.21s/it][1,0]<stderr>:train:   9% 24/255 [00:45<04:43,  1.23s/it][1,0]<stderr>:train:  10% 25/255 [00:46<04:42,  1.23s/it][1,0]<stderr>:train:  10% 26/255 [00:47<04:40,  1.23s/it][1,0]<stderr>:train:  11% 27/255 [00:48<04:36,  1.21s/it][1,0]<stderr>:train:  11% 28/255 [00:49<04:36,  1.22s/it][1,0]<stderr>:train:  11% 29/255 [00:51<04:34,  1.21s/it][1,0]<stderr>:train:  12% 30/255 [00:52<04:34,  1.22s/it][1,0]<stderr>:train:  12% 31/255 [00:53<04:31,  1.21s/it][1,0]<stderr>:train:  13% 32/255 [00:54<04:28,  1.20s/it][1,0]<stderr>:train:  13% 33/255 [00:55<04:28,  1.21s/it][1,0]<stderr>:train:  13% 34/255 [00:57<04:26,  1.21s/it][1,0]<stderr>:train:  14% 35/255 [00:58<04:26,  1.21s/it][1,0]<stderr>:train:  14% 36/255 [00:59<04:27,  1.22s/it][1,0]<stderr>:train:  15% 37/255 [01:00<04:28,  1.23s/it][1,0]<stderr>:train:  15% 38/255 [01:02<04:24,  1.22s/it][1,0]<stderr>:train:  15% 39/255 [01:03<04:22,  1.22s/it][1,0]<stderr>:train:  16% 40/255 [01:04<04:20,  1.21s/it][1,0]<stderr>:train:  16% 41/255 [01:05<04:21,  1.22s/it][1,0]<stderr>:train:  16% 42/255 [01:06<04:21,  1.23s/it][1,0]<stderr>:train:  17% 43/255 [01:08<04:19,  1.23s/it][1,0]<stderr>:train:  17% 44/255 [01:09<04:18,  1.23s/it][1,0]<stderr>:train:  18% 45/255 [01:10<04:19,  1.24s/it][1,0]<stderr>:train:  18% 46/255 [01:11<04:16,  1.23s/it][1,0]<stderr>:train:  18% 47/255 [01:13<04:13,  1.22s/it][1,0]<stderr>:train:  19% 48/255 [01:14<04:13,  1.22s/it][1,0]<stderr>:train:  19% 49/255 [01:15<04:11,  1.22s/it][1,0]<stderr>:train:  20% 50/255 [01:16<04:10,  1.22s/it][1,0]<stderr>:train:  20% 51/255 [01:17<04:08,  1.22s/it][1,0]<stderr>:train:  20% 52/255 [01:19<04:06,  1.22s/it][1,0]<stderr>:train:  21% 53/255 [01:20<04:05,  1.21s/it][1,0]<stderr>:train:  21% 54/255 [01:21<04:06,  1.23s/it][1,0]<stderr>:train:  22% 55/255 [01:22<04:04,  1.22s/it][1,0]<stderr>:train:  22% 56/255 [01:24<04:01,  1.21s/it][1,0]<stderr>:train:  22% 57/255 [01:25<04:02,  1.23s/it][1,0]<stderr>:train:  23% 58/255 [01:26<04:00,  1.22s/it][1,0]<stderr>:train:  23% 59/255 [01:27<03:59,  1.22s/it][1,0]<stderr>:train:  24% 60/255 [01:28<03:58,  1.22s/it][1,0]<stderr>:train:  24% 61/255 [01:30<03:57,  1.22s/it][1,0]<stderr>:train:  24% 62/255 [01:31<03:56,  1.22s/it][1,0]<stderr>:train:  25% 63/255 [01:32<03:56,  1.23s/it][1,0]<stderr>:train:  25% 64/255 [01:33<03:53,  1.23s/it][1,0]<stderr>:train:  25% 65/255 [01:35<03:53,  1.23s/it][1,0]<stderr>:train:  26% 66/255 [01:36<03:51,  1.22s/it][1,0]<stderr>:train:  26% 67/255 [01:37<03:50,  1.22s/it][1,0]<stderr>:train:  27% 68/255 [01:38<03:47,  1.22s/it][1,0]<stderr>:train:  27% 69/255 [01:39<03:47,  1.22s/it][1,0]<stderr>:train:  27% 70/255 [01:41<03:47,  1.23s/it][1,0]<stderr>:train:  28% 71/255 [01:42<03:45,  1.23s/it][1,0]<stderr>:train:  28% 72/255 [01:43<03:42,  1.22s/it][1,0]<stderr>:train:  29% 73/255 [01:44<03:42,  1.22s/it][1,0]<stderr>:train:  29% 74/255 [01:46<03:40,  1.22s/it][1,0]<stderr>:train:  29% 75/255 [01:47<03:38,  1.21s/it][1,0]<stderr>:train:  30% 76/255 [01:48<03:36,  1.21s/it][1,0]<stderr>:train:  30% 77/255 [01:49<03:34,  1.21s/it][1,0]<stderr>:train:  31% 78/255 [01:50<03:34,  1.21s/it][1,0]<stderr>:train:  31% 79/255 [01:52<03:32,  1.21s/it][1,0]<stderr>:train:  31% 80/255 [01:53<03:30,  1.20s/it][1,0]<stderr>:train:  32% 81/255 [01:54<03:30,  1.21s/it][1,0]<stderr>:train:  32% 82/255 [01:55<03:30,  1.22s/it][1,0]<stderr>:train:  33% 83/255 [01:57<03:30,  1.22s/it][1,0]<stderr>:train:  33% 84/255 [01:58<03:28,  1.22s/it][1,0]<stderr>:train:  33% 85/255 [01:59<03:28,  1.23s/it][1,0]<stderr>:train:  34% 86/255 [02:00<03:26,  1.22s/it][1,0]<stderr>:train:  34% 87/255 [02:01<03:25,  1.22s/it][1,0]<stderr>:train:  35% 88/255 [02:03<03:22,  1.22s/it][1,0]<stderr>:train:  35% 89/255 [02:04<03:22,  1.22s/it][1,0]<stderr>:train:  35% 90/255 [02:05<03:21,  1.22s/it][1,0]<stderr>:train:  36% 91/255 [02:06<03:20,  1.22s/it][1,0]<stderr>:train:  36% 92/255 [02:07<03:18,  1.22s/it][1,0]<stderr>:train:  36% 93/255 [02:09<03:17,  1.22s/it][1,0]<stderr>:train:  37% 94/255 [02:10<03:16,  1.22s/it][1,0]<stderr>:train:  37% 95/255 [02:11<03:13,  1.21s/it][1,0]<stderr>:train:  38% 96/255 [02:12<03:14,  1.22s/it][1,0]<stderr>:train:  38% 97/255 [02:14<03:14,  1.23s/it][1,0]<stderr>:train:  38% 98/255 [02:15<03:12,  1.23s/it][1,0]<stderr>:train:  39% 99/255 [02:16<03:12,  1.23s/it][1,0]<stderr>:train:  39% 100/255 [02:17<03:08,  1.22s/it][1,0]<stderr>:train:  40% 101/255 [02:18<03:07,  1.21s/it][1,0]<stderr>:train:  40% 102/255 [02:20<03:06,  1.22s/it][1,0]<stderr>:train:  40% 103/255 [02:21<03:05,  1.22s/it][1,0]<stderr>:train:  41% 104/255 [02:22<03:03,  1.22s/it][1,0]<stderr>:train:  41% 105/255 [02:23<03:02,  1.22s/it][1,0]<stderr>:train:  42% 106/255 [02:25<03:02,  1.23s/it][1,0]<stderr>:train:  42% 107/255 [02:26<03:02,  1.23s/it][1,0]<stderr>:train:  42% 108/255 [02:27<03:00,  1.23s/it][1,0]<stderr>:train:  43% 109/255 [02:28<03:00,  1.23s/it][1,0]<stderr>:train:  43% 110/255 [02:30<02:58,  1.23s/it][1,0]<stderr>:train:  44% 111/255 [02:31<02:55,  1.22s/it][1,0]<stderr>:train:  44% 112/255 [02:32<02:54,  1.22s/it][1,0]<stderr>:train:  44% 113/255 [02:33<02:53,  1.22s/it][1,0]<stderr>:train:  45% 114/255 [02:34<02:52,  1.22s/it][1,0]<stderr>:train:  45% 115/255 [02:36<02:51,  1.22s/it][1,0]<stderr>:train:  45% 116/255 [02:37<02:51,  1.23s/it][1,0]<stderr>:train:  46% 117/255 [02:38<02:49,  1.23s/it][1,0]<stderr>:train:  46% 118/255 [02:39<02:47,  1.22s/it][1,0]<stderr>:train:  47% 119/255 [02:41<02:46,  1.23s/it][1,0]<stderr>:train:  47% 120/255 [02:42<02:46,  1.23s/it][1,0]<stderr>:train:  47% 121/255 [02:43<02:42,  1.22s/it][1,0]<stderr>:train:  48% 122/255 [02:44<02:40,  1.21s/it][1,0]<stderr>:train:  48% 123/255 [02:45<02:40,  1.21s/it][1,0]<stderr>:train:  49% 124/255 [02:47<02:38,  1.21s/it][1,0]<stderr>:train:  49% 125/255 [02:48<02:36,  1.21s/it][1,0]<stderr>:train:  49% 126/255 [02:49<02:36,  1.21s/it][1,0]<stderr>:train:  50% 127/255 [02:50<02:35,  1.21s/it][1,0]<stderr>:train:  50% 128/255 [02:51<02:34,  1.21s/it][1,0]<stderr>:train:  51% 129/255 [02:53<02:33,  1.22s/it][1,0]<stderr>:train:  51% 130/255 [02:54<02:31,  1.22s/it][1,0]<stderr>:train:  51% 131/255 [02:55<02:30,  1.21s/it][1,0]<stderr>:train:  52% 132/255 [02:56<02:30,  1.22s/it][1,0]<stderr>:train:  52% 133/255 [02:58<02:29,  1.23s/it][1,0]<stderr>:train:  53% 134/255 [02:59<02:27,  1.22s/it][1,0]<stderr>:train:  53% 135/255 [03:00<02:25,  1.21s/it][1,0]<stderr>:train:  53% 136/255 [03:01<02:24,  1.22s/it][1,0]<stderr>:train:  54% 137/255 [03:02<02:23,  1.22s/it][1,0]<stderr>:train:  54% 138/255 [03:04<02:21,  1.21s/it][1,0]<stderr>:train:  55% 139/255 [03:05<02:21,  1.22s/it][1,0]<stderr>:train:  55% 140/255 [03:06<02:20,  1.22s/it][1,0]<stderr>:train:  55% 141/255 [03:07<02:18,  1.22s/it][1,0]<stderr>:train:  56% 142/255 [03:08<02:18,  1.22s/it][1,0]<stderr>:train:  56% 143/255 [03:10<02:16,  1.22s/it][1,0]<stderr>:train:  56% 144/255 [03:11<02:16,  1.23s/it][1,0]<stderr>:train:  57% 145/255 [03:12<02:15,  1.23s/it][1,0]<stderr>:train:  57% 146/255 [03:13<02:13,  1.23s/it][1,0]<stderr>:train:  58% 147/255 [03:15<02:11,  1.21s/it][1,0]<stderr>:train:  58% 148/255 [03:16<02:10,  1.22s/it][1,0]<stderr>:train:  58% 149/255 [03:17<02:09,  1.22s/it][1,0]<stderr>:train:  59% 150/255 [03:18<02:08,  1.22s/it][1,0]<stderr>:train:  59% 151/255 [03:20<02:07,  1.22s/it][1,0]<stderr>:train:  60% 152/255 [03:21<02:05,  1.22s/it][1,0]<stderr>:train:  60% 153/255 [03:22<02:04,  1.23s/it][1,0]<stderr>:train:  60% 154/255 [03:23<02:03,  1.22s/it][1,0]<stderr>:train:  61% 155/255 [03:24<02:01,  1.22s/it][1,0]<stderr>:train:  61% 156/255 [03:26<02:02,  1.24s/it][1,0]<stderr>:train:  62% 157/255 [03:27<02:00,  1.23s/it][1,0]<stderr>:train:  62% 158/255 [03:28<01:58,  1.22s/it][1,0]<stderr>:train:  62% 159/255 [03:29<01:56,  1.22s/it][1,0]<stderr>:train:  63% 160/255 [03:30<01:55,  1.22s/it][1,0]<stderr>:train:  63% 161/255 [03:32<01:53,  1.21s/it][1,0]<stderr>:train:  64% 162/255 [03:33<01:53,  1.22s/it][1,0]<stderr>:train:  64% 163/255 [03:34<01:52,  1.22s/it][1,0]<stderr>:train:  64% 164/255 [03:35<01:51,  1.22s/it][1,0]<stderr>:train:  65% 165/255 [03:37<01:50,  1.22s/it][1,0]<stderr>:train:  65% 166/255 [03:38<01:48,  1.22s/it][1,0]<stderr>:train:  65% 167/255 [03:39<01:47,  1.22s/it][1,0]<stderr>:train:  66% 168/255 [03:40<01:46,  1.23s/it][1,0]<stderr>:train:  66% 169/255 [03:42<01:45,  1.23s/it][1,0]<stderr>:train:  67% 170/255 [03:43<01:44,  1.22s/it][1,0]<stderr>:train:  67% 171/255 [03:44<01:42,  1.22s/it][1,0]<stderr>:train:  67% 172/255 [03:45<01:41,  1.23s/it][1,0]<stderr>:train:  68% 173/255 [03:46<01:41,  1.23s/it][1,0]<stderr>:train:  68% 174/255 [03:48<01:38,  1.22s/it][1,0]<stderr>:train:  69% 175/255 [03:49<01:37,  1.22s/it][1,0]<stderr>:train:  69% 176/255 [03:50<01:36,  1.22s/it][1,0]<stderr>:train:  69% 177/255 [03:51<01:35,  1.23s/it][1,0]<stderr>:train:  70% 178/255 [03:53<01:33,  1.22s/it][1,0]<stderr>:train:  70% 179/255 [03:54<01:33,  1.22s/it][1,0]<stderr>:train:  71% 180/255 [03:55<01:31,  1.22s/it][1,0]<stderr>:train:  71% 181/255 [03:56<01:30,  1.22s/it][1,0]<stderr>:train:  71% 182/255 [03:57<01:29,  1.22s/it][1,0]<stderr>:train:  72% 183/255 [03:59<01:27,  1.22s/it][1,0]<stderr>:train:  72% 184/255 [04:00<01:25,  1.21s/it][1,0]<stderr>:train:  73% 185/255 [04:01<01:24,  1.21s/it][1,0]<stderr>:train:  73% 186/255 [04:02<01:23,  1.21s/it][1,0]<stderr>:train:  73% 187/255 [04:03<01:22,  1.21s/it][1,0]<stderr>:train:  74% 188/255 [04:05<01:20,  1.21s/it][1,0]<stderr>:train:  74% 189/255 [04:06<01:19,  1.21s/it][1,0]<stderr>:train:  75% 190/255 [04:07<01:18,  1.21s/it][1,0]<stderr>:train:  75% 191/255 [04:08<01:17,  1.21s/it][1,0]<stderr>:train:  75% 192/255 [04:10<01:16,  1.22s/it][1,0]<stderr>:train:  76% 193/255 [04:11<01:15,  1.22s/it][1,0]<stderr>:train:  76% 194/255 [04:12<01:14,  1.22s/it][1,0]<stderr>:train:  76% 195/255 [04:13<01:13,  1.22s/it][1,0]<stderr>:train:  77% 196/255 [04:14<01:12,  1.22s/it][1,0]<stderr>:train:  77% 197/255 [04:16<01:10,  1.22s/it][1,0]<stderr>:train:  78% 198/255 [04:17<01:09,  1.23s/it][1,0]<stderr>:train:  78% 199/255 [04:18<01:08,  1.22s/it][1,0]<stderr>:train:  78% 200/255 [04:19<01:07,  1.22s/it][1,0]<stderr>:train:  79% 201/255 [04:21<01:05,  1.22s/it][1,0]<stderr>:train:  79% 202/255 [04:22<01:05,  1.24s/it][1,0]<stderr>:train:  80% 203/255 [04:23<01:03,  1.23s/it][1,0]<stderr>:train:  80% 204/255 [04:24<01:03,  1.24s/it][1,0]<stderr>:train:  80% 205/255 [04:25<01:01,  1.23s/it][1,0]<stderr>:train:  81% 206/255 [04:27<01:00,  1.23s/it][1,0]<stderr>:train:  81% 207/255 [04:28<00:59,  1.23s/it][1,0]<stderr>:train:  82% 208/255 [04:29<00:58,  1.24s/it][1,0]<stderr>:train:  82% 209/255 [04:30<00:56,  1.23s/it][1,0]<stderr>:train:  82% 210/255 [04:32<00:55,  1.23s/it][1,0]<stderr>:train:  83% 211/255 [04:33<00:53,  1.22s/it][1,0]<stderr>:train:  83% 212/255 [04:34<00:52,  1.22s/it][1,0]<stderr>:train:  84% 213/255 [04:35<00:51,  1.22s/it][1,0]<stderr>:train:  84% 214/255 [04:36<00:50,  1.23s/it][1,0]<stderr>:train:  84% 215/255 [04:38<00:49,  1.23s/it][1,0]<stderr>:train:  85% 216/255 [04:39<00:47,  1.22s/it][1,0]<stderr>:train:  85% 217/255 [04:40<00:46,  1.21s/it][1,0]<stderr>:train:  85% 218/255 [04:41<00:44,  1.21s/it][1,0]<stderr>:train:  86% 219/255 [04:43<00:43,  1.21s/it][1,0]<stderr>:train:  86% 220/255 [04:44<00:42,  1.21s/it][1,0]<stderr>:train:  87% 221/255 [04:45<00:41,  1.22s/it][1,0]<stderr>:train:  87% 222/255 [04:46<00:39,  1.21s/it][1,0]<stderr>:train:  87% 223/255 [04:47<00:38,  1.21s/it][1,0]<stderr>:train:  88% 224/255 [04:49<00:37,  1.21s/it][1,0]<stderr>:train:  88% 225/255 [04:50<00:36,  1.21s/it][1,0]<stderr>:train:  89% 226/255 [04:51<00:35,  1.22s/it][1,0]<stderr>:train:  89% 227/255 [04:52<00:34,  1.22s/it][1,0]<stderr>:train:  89% 228/255 [04:53<00:32,  1.21s/it][1,0]<stderr>:train:  90% 229/255 [04:55<00:31,  1.21s/it][1,0]<stderr>:train:  90% 230/255 [04:56<00:30,  1.21s/it][1,0]<stderr>:train:  91% 231/255 [04:57<00:29,  1.23s/it][1,0]<stderr>:train:  91% 232/255 [04:58<00:28,  1.22s/it][1,0]<stderr>:train:  91% 233/255 [05:00<00:26,  1.21s/it][1,0]<stderr>:train:  92% 234/255 [05:01<00:25,  1.22s/it][1,0]<stderr>:train:  92% 235/255 [05:02<00:24,  1.22s/it][1,0]<stderr>:train:  93% 236/255 [05:03<00:23,  1.22s/it][1,0]<stderr>:train:  93% 237/255 [05:04<00:22,  1.23s/it][1,0]<stderr>:train:  93% 238/255 [05:06<00:20,  1.23s/it][1,0]<stderr>:train:  94% 239/255 [05:07<00:19,  1.23s/it][1,0]<stderr>:train:  94% 240/255 [05:08<00:18,  1.22s/it][1,0]<stderr>:train:  95% 241/255 [05:09<00:16,  1.21s/it][1,0]<stderr>:train:  95% 242/255 [05:11<00:15,  1.22s/it][1,0]<stderr>:train:  95% 243/255 [05:12<00:14,  1.22s/it][1,0]<stderr>:train:  96% 244/255 [05:13<00:13,  1.22s/it][1,0]<stderr>:train:  96% 245/255 [05:14<00:12,  1.22s/it][1,0]<stderr>:train:  96% 246/255 [05:15<00:10,  1.22s/it][1,0]<stderr>:train:  97% 247/255 [05:17<00:09,  1.22s/it][1,0]<stderr>:train:  97% 248/255 [05:18<00:08,  1.22s/it][1,0]<stderr>:train:  98% 249/255 [05:19<00:07,  1.21s/it][1,0]<stderr>:train:  98% 250/255 [05:20<00:06,  1.20s/it][1,0]<stderr>:train:  98% 251/255 [05:21<00:04,  1.20s/it][1,0]<stderr>:train:  99% 252/255 [05:23<00:03,  1.20s/it][1,0]<stderr>:train:  99% 253/255 [05:24<00:02,  1.20s/it][1,0]<stderr>:train: 100% 254/255 [05:25<00:01,  1.20s/it][1,0]<stderr>:train: 100% 255/255 [05:26<00:00,  1.00s/it][1,0]<stderr>:train: 100% 255/255 [05:26<00:00,  1.28s/it][1,1]<stdout>:         827234 function calls (813407 primitive calls) in 326.114 seconds
[1,1]<stdout>:
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:      255  221.345    0.868  221.345    0.868 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:     3315   55.612    0.017   55.612    0.017 {built-in method batch_norm}
[1,1]<stdout>:     3315   13.579    0.004   13.579    0.004 {built-in method conv2d}
[1,1]<stdout>:        4   11.962    2.991   11.962    2.991 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:      510    8.194    0.016    8.194    0.016 {built-in method dropout}
[1,1]<stdout>:      817    3.505    0.004    3.505    0.004 {method 'acquire' of '_thread.lock' objects}
[1,1]<stdout>:      255    1.871    0.007    1.871    0.007 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3825    1.378    0.000    1.378    0.000 {built-in method relu_}
[1,1]<stdout>:    29580    1.077    0.000    1.077    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    10965    0.994    0.000    0.994    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:    15045    0.836    0.000    0.836    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    0.645    0.000    0.645    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    0.602    0.000    0.602    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     4080    0.534    0.000    0.534    0.000 {built-in method mm}
[1,1]<stdout>:      765    0.497    0.001    0.497    0.001 {built-in method addmm}
[1,1]<stdout>:     1275    0.395    0.000    0.395    0.000 {built-in method max_pool2d}
[1,1]<stdout>:    14790    0.373    0.000    0.373    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     4845    0.294    0.000    0.294    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.290    0.000   56.011    0.017 batchnorm.py:99(forward)
[1,1]<stdout>:      255    0.248    0.001    0.248    0.001 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:      255    0.136    0.001    1.842    0.007 optimizer.py:232(synchronize)
[1,1]<stdout>:     4080    0.134    0.000    0.134    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.130    0.130  326.114  326.114 train.py:338(train)
[1,1]<stdout>:14280/510    0.122    0.000   82.701    0.162 module.py:710(_call_impl)
[1,1]<stdout>:      255    0.113    0.000    0.113    0.000 {built-in method flatten}
[1,1]<stdout>:    88740    0.110    0.000    0.138    0.000 tensor.py:725(grad)
[1,1]<stdout>:      255    0.095    0.000    2.051    0.008 sgd.py:75(step)
[1,1]<stdout>:        8    0.093    0.012    0.093    0.012 {method 'dump' of '_pickle.Pickler' objects}
[1,1]<stdout>:      510    0.088    0.000    0.088    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      511    0.065    0.000    0.065    0.000 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.048    0.000    0.048    0.000 {built-in method torch._C._nn.nll_loss}
[1,1]<stdout>:      510    0.043    0.000   80.375    0.158 container.py:115(forward)
[1,1]<stdout>:      255    0.037    0.000    1.101    0.004 optimizer.py:166(zero_grad)
[1,1]<stdout>:     3370    0.032    0.000    0.036    0.000 module.py:774(__setattr__)
[1,1]<stdout>:    90530    0.030    0.000    0.030    0.000 {built-in method builtins.hasattr}
[1,1]<stdout>:       14    0.029    0.002    0.029    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:     3315    0.027    0.000   55.664    0.017 functional.py:1998(batch_norm)
[1,1]<stdout>:    29070    0.024    0.000    0.024    0.000 module.py:758(__getattr__)
[1,1]<stdout>:    14790    0.022    0.000    0.948    0.000 compression.py:363(decompress)
[1,1]<stdout>:    10965    0.021    0.000    1.019    0.000 mpi_ops.py:928(synchronize)
[1,1]<stdout>:      269    0.020    0.000    0.020    0.000 {method 'clear' of 'dict' objects}
[1,1]<stdout>:    14280    0.020    0.000    0.020    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:      256    0.019    0.000    0.031    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:     3315    0.018    0.000   13.598    0.004 conv.py:410(_conv_forward)
[1,1]<stdout>:    44370    0.018    0.000    0.030    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:    14790    0.018    0.000    0.063    0.000 optimizer.py:298(<listcomp>)
[1,1]<stdout>:    85070    0.017    0.000    0.017    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:      255    0.015    0.000    0.015    0.000 {built-in method tensor}
[1,1]<stdout>:      255    0.015    0.000    0.015    0.000 {built-in method ones_like}
[1,1]<stdout>:     3315    0.015    0.000   13.618    0.004 conv.py:418(forward)
[1,1]<stdout>:     3315    0.012    0.000    0.013    0.000 functional.py:1980(_verify_batch_size)
[1,1]<stdout>:      255    0.012    0.000    1.020    0.004 {built-in method apply}
[1,1]<stdout>:    44399    0.012    0.000    0.012    0.000 {built-in method builtins.id}
[1,1]<stdout>:     4080    0.012    0.000    0.012    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3825    0.011    0.000    1.390    0.000 functional.py:1106(relu)
[1,1]<stdout>:      255    0.010    0.000    0.010    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,1]<stdout>:    57630    0.009    0.000    0.009    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:     3825    0.009    0.000    1.399    0.000 activation.py:101(forward)
[1,1]<stdout>:      255    0.008    0.000    0.008    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:51539/51536    0.008    0.000    0.008    0.000 {built-in method builtins.len}
[1,1]<stdout>:     1275    0.008    0.000    0.411    0.000 pooling.py:156(forward)
[1,1]<stdout>:      765    0.007    0.000    0.546    0.001 functional.py:1655(linear)
[1,1]<stdout>:        1    0.006    0.006    0.006    0.006 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.006    0.000    3.907    0.015 optimizer.py:337(step)
[1,1]<stdout>:        8    0.006    0.001    0.099    0.012 reduction.py:58(dump)
[1,1]<stdout>:      255    0.006    0.000  221.373    0.868 tensor.py:155(backward)
[1,1]<stdout>:      255    0.005    0.000   80.757    0.317 vgg.py:42(forward)
[1,1]<stdout>:      510    0.005    0.000    8.200    0.016 functional.py:950(dropout)
[1,1]<stdout>:     1275    0.005    0.000    0.399    0.000 functional.py:564(_max_pool2d)
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      256    0.004    0.000    3.587    0.014 dataloader.py:945(_next_data)
[1,1]<stdout>:     3315    0.004    0.000    0.006    0.000 batchnorm.py:275(_check_input_dim)
[1,1]<stdout>:     1275    0.004    0.000    0.404    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:      255    0.004    0.000  221.368    0.868 __init__.py:57(backward)
[1,1]<stdout>:      256    0.003    0.000    0.003    0.000 basics.py:183(size)
[1,1]<stdout>:      255    0.003    0.000    0.007    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:      765    0.003    0.000    0.551    0.001 linear.py:90(forward)
[1,1]<stdout>:    10974    0.003    0.000    0.003    0.000 {method 'pop' of 'dict' objects}
[1,1]<stdout>:      521    0.003    0.000    0.006    0.000 threading.py:341(notify)
[1,1]<stdout>:      255    0.003    0.000    3.911    0.015 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:      255    0.003    0.000    3.508    0.014 queue.py:153(get)
[1,1]<stdout>:      263    0.003    0.000    0.045    0.000 dataloader.py:991(_try_put_index)
[1,1]<stdout>:      255    0.003    0.000    2.059    0.008 grad_mode.py:12(decorate_context)
[1,1]<stdout>:      255    0.003    0.000    0.018    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:     4335    0.003    0.000    0.003    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.003    0.000    0.057    0.000 functional.py:2158(nll_loss)
[1,1]<stdout>:      255    0.003    0.000    1.023    0.004 mpi_ops.py:209(allreduce)
[1,1]<stdout>:      255    0.003    0.000    3.515    0.014 dataloader.py:912(_get_data)
[1,1]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,1]<stdout>:    16573    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
[1,1]<stdout>:      260    0.002    0.000    0.011    0.000 queues.py:80(put)
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:      255    0.002    0.000    0.022    0.000 mpi_ops.py:105(_allreduce_async)
[1,1]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:      255    0.002    0.000    1.932    0.008 functional.py:2370(cross_entropy)
[1,1]<stdout>:      270    0.002    0.000    0.002    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:      255    0.002    0.000    1.103    0.004 optimizer.py:353(zero_grad)
[1,1]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:      255    0.002    0.000    0.032    0.000 mpi_ops.py:152(allreduce_async)
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,1]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,1]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,1]<stdout>:      527    0.002    0.000    0.002    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:      255    0.002    0.000    1.934    0.008 loss.py:946(forward)
[1,1]<stdout>:      256    0.002    0.000   15.675    0.061 std.py:1159(__iter__)
[1,1]<stdout>:      255    0.002    0.000    1.007    0.004 mpi_ops.py:191(forward)
[1,1]<stdout>:      255    0.002    0.000    0.253    0.001 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,1]<stdout>:      510    0.001    0.000    8.202    0.016 dropout.py:57(forward)
[1,1]<stdout>:      765    0.001    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:      255    0.001    0.000    3.509    0.014 dataloader.py:766(_try_get_data)
[1,1]<stdout>:      255    0.001    0.000    0.254    0.001 pooling.py:1110(forward)
[1,1]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:149(__init__)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,1]<stdout>:      256    0.001    0.000    3.588    0.014 dataloader.py:362(__next__)
[1,1]<stdout>:      527    0.001    0.000    0.003    0.000 threading.py:246(__enter__)
[1,1]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:        1    0.001    0.001    0.008    0.008 distributed.py:68(__iter__)
[1,1]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,1]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,0]<stdout>:         873485 function calls (859658 primitive calls) in 326.109 seconds
[1,0]<stdout>:
[1,1]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,1]<stdout>:      255    0.001    0.000    0.036    0.000 dataloader.py:1010(_process_data)
[1,1]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:      255    0.001    0.000    1.872    0.007 functional.py:1567(log_softmax)
[1,1]<stdout>:      601    0.001    0.000    0.033    0.000 {built-in method builtins.next}
[1,1]<stdout>:      255    0.001    0.000    0.007    0.000 mpi_ops.py:92(_check_function)
[1,1]<stdout>:      875    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:        4    0.001    0.000    0.001    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:      255  220.840    0.866  220.840    0.866 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:      266    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:     3315   55.447    0.017   55.447    0.017 {built-in method batch_norm}
[1,1]<stdout>:        1    0.001    0.001    0.001    0.001 {built-in method randperm}
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 {built-in method torch._C.is_grad_enabled}
[1,1]<stdout>:      531    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:      256    0.001    0.000    0.002    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,0]<stdout>:     3315   13.616    0.004   13.616    0.004 {built-in method conv2d}
[1,0]<stdout>:        4   11.962    2.991   11.962    2.991 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:      510    8.199    0.016    8.199    0.016 {built-in method dropout}
[1,0]<stdout>:     1076    3.687    0.003    3.687    0.003 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:      255    1.820    0.007    1.820    0.007 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3825    1.420    0.000    1.420    0.000 {built-in method relu_}
[1,1]<stdout>:       88    0.000    0.000    0.000    0.000 {built-in method posix.write}
[1,1]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 util.py:221(impl)
[1,0]<stdout>:    10965    1.119    0.000    1.119    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:    29580    1.026    0.000    1.026    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      259    0.000    0.000    0.001    0.000 queue.py:208(_qsize)
[1,1]<stdout>:      263    0.000    0.000    0.032    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:        4    0.000    0.000   12.064    3.016 popen_forkserver.py:41(_launch)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
[1,0]<stdout>:    15045    0.795    0.000    0.795    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    14790    0.681    0.000    0.681    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    14790    0.594    0.000    0.594    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,0]<stdout>:      765    0.536    0.001    0.536    0.001 {built-in method addmm}
[1,0]<stdout>:     4080    0.513    0.000    0.513    0.000 {built-in method mm}
[1,0]<stdout>:    14790    0.404    0.000    0.404    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     1275    0.388    0.000    0.388    0.000 {built-in method max_pool2d}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,1]<stdout>:        1    0.000    0.000   12.085   12.085 dataloader.py:690(__init__)
[1,0]<stdout>:     3315    0.299    0.000   55.866    0.017 batchnorm.py:99(forward)
[1,0]<stdout>:     4845    0.293    0.000    0.293    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       34    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      255    0.249    0.001    0.249    0.001 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:      269    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,1]<stdout>:      295    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,0]<stdout>:        1    0.156    0.156  326.108  326.108 train.py:338(train)
[1,0]<stdout>:14280/510    0.140    0.000   82.677    0.162 module.py:710(_call_impl)
[1,0]<stdout>:      255    0.137    0.001    1.810    0.007 optimizer.py:232(synchronize)
[1,0]<stdout>:     4080    0.128    0.000    0.128    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:      510    0.128    0.000    0.128    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    88740    0.111    0.000    0.124    0.000 tensor.py:725(grad)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:       14    0.000    0.000    0.030    0.002 connection.py:917(wait)
[1,1]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:      255    0.106    0.000    0.106    0.000 {built-in method flatten}
[1,0]<stdout>:      255    0.097    0.000    1.942    0.008 sgd.py:75(step)
[1,0]<stdout>:        8    0.090    0.011    0.091    0.011 {method 'dump' of '_pickle.Pickler' objects}
[1,0]<stdout>:      511    0.071    0.000    0.071    0.000 {method 'item' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      510    0.056    0.000   80.399    0.158 container.py:115(forward)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,0]<stdout>:      267    0.050    0.000    0.050    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      255    0.049    0.000    0.049    0.000 {built-in method torch._C._nn.nll_loss}
[1,0]<stdout>:      255    0.043    0.000    1.176    0.005 optimizer.py:166(zero_grad)
[1,1]<stdout>:        5    0.000    0.000    0.002    0.000 queues.py:158(_start_thread)
[1,0]<stdout>:     3370    0.038    0.000    0.042    0.000 module.py:774(__setattr__)
[1,0]<stdout>:     3315    0.029    0.000   55.502    0.017 functional.py:1998(batch_norm)
[1,0]<stdout>:    29070    0.027    0.000    0.027    0.000 module.py:758(__getattr__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,1]<stdout>:        1    0.000    0.000  326.114  326.114 {built-in method builtins.exec}
[1,1]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:     3315    0.024    0.000   13.641    0.004 conv.py:410(_conv_forward)
[1,1]<stdout>:      275    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,1]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,1]<stdout>:      527    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:       14    0.024    0.002    0.024    0.002 {method 'poll' of 'select.poll' objects}
[1,0]<stdout>:      269    0.024    0.000    0.024    0.000 {method 'clear' of 'dict' objects}
[1,0]<stdout>:    10965    0.023    0.000    1.145    0.000 mpi_ops.py:928(synchronize)
[1,0]<stdout>:    14280    0.021    0.000    0.021    0.000 {built-in method torch._C._get_tracing_state}
[1,0]<stdout>:    14790    0.021    0.000    0.069    0.000 optimizer.py:298(<listcomp>)
[1,0]<stdout>:    14790    0.021    0.000    0.916    0.000 compression.py:363(decompress)
[1,0]<stdout>:      256    0.020    0.000    0.042    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 queues.py:36(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 context.py:100(Queue)
[1,0]<stdout>:    44370    0.018    0.000    0.028    0.000 tensor.py:458(__hash__)
[1,0]<stdout>:      255    0.018    0.000    0.018    0.000 {built-in method ones_like}
[1,0]<stdout>:    86603    0.017    0.000    0.017    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,1]<stdout>:      275    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:      255    0.016    0.000    0.016    0.000 {built-in method tensor}
[1,0]<stdout>:      255    0.015    0.000    0.051    0.000 summary.py:137(scalar)
[1,0]<stdout>:     3315    0.015    0.000   13.662    0.004 conv.py:418(forward)
[1,1]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,1]<stdout>:        4    0.000    0.000   12.064    3.016 popen_fork.py:15(__init__)
[1,1]<stdout>:       15    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:    91045    0.015    0.000    0.015    0.000 {built-in method builtins.hasattr}
[1,0]<stdout>:51537/51534    0.013    0.000    0.014    0.000 {built-in method builtins.len}
[1,0]<stdout>:     3315    0.013    0.000    0.014    0.000 functional.py:1980(_verify_batch_size)
[1,0]<stdout>:      255    0.013    0.000    1.146    0.004 {built-in method apply}
[1,1]<stdout>:        4    0.000    0.000   12.065    3.016 process.py:110(start)
[1,1]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,1]<stdout>:        1    0.000    0.000  326.114  326.114 <string>:1(<module>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,0]<stdout>:        1    0.012    0.012    0.012    0.012 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3825    0.012    0.000    1.433    0.000 functional.py:1106(relu)
[1,0]<stdout>:     4080    0.012    0.000    0.012    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.011    0.000    0.011    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:       10    0.000    0.000    3.503    0.350 threading.py:270(wait)
[1,0]<stdout>:    44399    0.010    0.000    0.010    0.000 {built-in method builtins.id}
[1,0]<stdout>:      257    0.010    0.000    0.020    0.000 std.py:355(format_meter)
[1,0]<stdout>:     3825    0.009    0.000    1.443    0.000 activation.py:101(forward)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:      255    0.009    0.000    0.024    0.000 x2num.py:11(check_nan)
[1,0]<stdout>:      255    0.009    0.000   80.781    0.317 vgg.py:42(forward)
[1,0]<stdout>:    57630    0.009    0.000    0.009    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,1]<stdout>:        2    0.000    0.000    0.032    0.016 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,0]<stdout>:     1275    0.008    0.000    0.406    0.000 pooling.py:156(forward)
[1,0]<stdout>:      765    0.008    0.000    0.590    0.001 functional.py:1655(linear)
[1,0]<stdout>:      255    0.008    0.000    0.008    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {method 'reduce' of 'numpy.ufunc' objects}
[1,0]<stdout>:      255    0.006    0.000  220.873    0.866 tensor.py:155(backward)
[1,0]<stdout>:      515    0.006    0.000    0.029    0.000 queues.py:80(put)
[1,1]<stdout>:       14    0.000    0.000    0.029    0.002 selectors.py:402(select)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:        8    0.006    0.001    0.097    0.012 reduction.py:58(dump)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,0]<stdout>:      783    0.006    0.000    0.006    0.000 {method '__enter__' of '_thread.lock' objects}
[1,0]<stdout>:      255    0.006    0.000    3.767    0.015 optimizer.py:337(step)
[1,0]<stdout>:    11449    0.005    0.000    0.008    0.000 utils.py:330(<genexpr>)
[1,0]<stdout>:      776    0.005    0.000    0.011    0.000 threading.py:341(notify)
[1,0]<stdout>:      510    0.005    0.000    8.206    0.016 functional.py:950(dropout)
[1,1]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,0]<stdout>:      255    0.005    0.000    0.113    0.000 std.py:1197(update)
[1,0]<stdout>:     1275    0.005    0.000    0.398    0.000 _jit_internal.py:237(fn)
[1,0]<stdout>:      256    0.005    0.000   15.977    0.062 std.py:1159(__iter__)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,1]<stdout>:      273    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:      511    0.005    0.000    0.005    0.000 basics.py:183(size)
[1,0]<stdout>:     3315    0.005    0.000    0.007    0.000 batchnorm.py:275(_check_input_dim)
[1,0]<stdout>:      255    0.005    0.000  220.866    0.866 __init__.py:57(backward)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,0]<stdout>:     1579    0.005    0.000    0.005    0.000 {method 'format' of 'str' objects}
[1,0]<stdout>:     1530    0.004    0.000    0.004    0.000 std.py:233(__call__)
[1,0]<stdout>:        1    0.004    0.004    0.004    0.004 {built-in method randperm}
[1,0]<stdout>:      256    0.004    0.000    3.768    0.015 dataloader.py:945(_next_data)
[1,0]<stdout>:      255    0.004    0.000    0.059    0.000 functional.py:2158(nll_loss)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:     1275    0.004    0.000    0.392    0.000 functional.py:564(_max_pool2d)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.004    0.000    0.022    0.000 writer.py:131(add_summary)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,1]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,0]<stdout>:      765    0.004    0.000    0.595    0.001 linear.py:90(forward)
[1,0]<stdout>:      524    0.004    0.000    0.004    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:        6    0.000    0.000    0.005    0.001 threading.py:540(wait)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {built-in method numpy.array}
[1,0]<stdout>:      255    0.004    0.000    3.770    0.015 lr_scheduler.py:62(wrapper)
[1,0]<stdout>:      255    0.003    0.000    0.079    0.000 writer.py:401(add_scalar)
[1,0]<stdout>:      255    0.003    0.000    0.022    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,1]<stdout>:        4    0.000    0.000    0.030    0.007 popen_fork.py:40(wait)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x5632ab2739a0}
[1,1]<stdout>:       48    0.000    0.000    0.000    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:      255    0.003    0.000    0.032    0.000 x2num.py:18(make_np)
[1,0]<stdout>:      256    0.003    0.000    0.003    0.000 {built-in method now}
[1,0]<stdout>:      255    0.003    0.000    1.951    0.008 grad_mode.py:12(decorate_context)
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,1]<stdout>:        4    0.000    0.000   12.064    3.016 context.py:288(_Popen)
[1,1]<stdout>:      104    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:    10973    0.003    0.000    0.003    0.000 {method 'pop' of 'dict' objects}
[1,0]<stdout>:      257    0.003    0.000    0.004    0.000 std.py:1445(format_dict)
[1,0]<stdout>:      255    0.003    0.000    1.149    0.005 mpi_ops.py:209(allreduce)
[1,0]<stdout>:      263    0.003    0.000    0.059    0.000 dataloader.py:991(_try_put_index)
[1,0]<stdout>:      255    0.003    0.000    3.690    0.014 queue.py:153(get)
[1,1]<stdout>:        4    0.000    0.000    0.030    0.007 process.py:142(join)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:        6    0.000    0.000    0.005    0.001 threading.py:834(start)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:      255    0.003    0.000    0.007    0.000 train.py:409(adjust_learning_rate)
[1,0]<stdout>:      255    0.003    0.000    1.883    0.007 functional.py:2370(cross_entropy)
[1,0]<stdout>:      255    0.003    0.000    0.018    0.000 writer.py:115(add_event)
[1,0]<stdout>:     4335    0.003    0.000    0.003    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 reduction.py:145(sendfds)
[1,1]<stdout>:       11    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,0]<stdout>:      256    0.003    0.000    0.104    0.000 std.py:1324(refresh)
[1,0]<stdout>:    16573    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
[1,0]<stdout>:      255    0.003    0.000    3.697    0.014 dataloader.py:912(_get_data)
[1,0]<stdout>:    11192    0.003    0.000    0.003    0.000 {built-in method unicodedata.east_asian_width}
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,0]<stdout>:      257    0.003    0.000    0.068    0.000 std.py:348(print_status)
[1,0]<stdout>:      255    0.003    0.000    1.133    0.004 mpi_ops.py:191(forward)
[1,0]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:      255    0.002    0.000    0.255    0.001 functional.py:909(adaptive_avg_pool2d)
[1,0]<stdout>:      255    0.002    0.000    0.023    0.000 mpi_ops.py:105(_allreduce_async)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,0]<stdout>:      257    0.002    0.000    0.097    0.000 std.py:1463(display)
[1,0]<stdout>:      255    0.002    0.000    1.178    0.005 optimizer.py:353(zero_grad)
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,0]<stdout>:      255    0.002    0.000    0.012    0.000 fromnumeric.py:2123(sum)
[1,0]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:        4    0.000    0.000   12.064    3.016 popen_forkserver.py:33(__init__)
[1,0]<stdout>:      257    0.002    0.000    0.026    0.000 std.py:1149(__str__)
[1,0]<stdout>:      255    0.002    0.000    1.886    0.007 loss.py:946(forward)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,0]<stdout>:      255    0.002    0.000    0.010    0.000 fromnumeric.py:69(_wrapreduction)
[1,0]<stdout>:      260    0.002    0.000    0.002    0.000 std.py:104(acquire)
[1,0]<stdout>:      257    0.002    0.000    0.010    0.000 {built-in method builtins.sum}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,1]<stdout>:       50    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:      255    0.002    0.000    0.033    0.000 mpi_ops.py:152(allreduce_async)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:145(register)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:      257    0.002    0.000    0.053    0.000 std.py:342(fp_write)
[1,0]<stdout>:      512    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
[1,0]<stdout>:      510    0.002    0.000    8.207    0.016 dropout.py:57(forward)
[1,0]<stdout>:      765    0.002    0.000    0.005    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,1]<stdout>:       70    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,1]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,0]<stdout>:        1    0.002    0.002    0.018    0.018 distributed.py:68(__iter__)
[1,0]<stdout>:      513    0.002    0.000    0.004    0.000 std.py:288(format_interval)
[1,0]<stdout>:      783    0.002    0.000    0.007    0.000 threading.py:246(__enter__)
[1,0]<stdout>:      255    0.001    0.000    0.256    0.001 pooling.py:1110(forward)
[1,0]<stdout>:      260    0.001    0.000    0.002    0.000 std.py:108(release)
[1,0]<stdout>:      779    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      255    0.001    0.000    0.015    0.000 event_file_writer.py:132(add_event)
[1,0]<stdout>:      255    0.001    0.000    0.015    0.000 <__array_function__ internals>:2(sum)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,0]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:149(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 summary.py:28(_clean_tag)
[1,0]<stdout>:      255    0.001    0.000    3.691    0.014 dataloader.py:766(_try_get_data)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 numeric.py:1858(isscalar)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:318(_check_caffe2_blob)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,0]<stdout>:      255    0.001    0.000    0.013    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
[1,0]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:        7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,0]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:149(unregister)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f1d9e5b8c10}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:      256    0.001    0.000    3.769    0.015 dataloader.py:362(__next__)
[1,0]<stdout>:      257    0.001    0.000    0.011    0.000 utils.py:329(_text_width)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:      255    0.001    0.000    0.039    0.000 dataloader.py:1010(_process_data)
[1,0]<stdout>:      257    0.001    0.000    0.012    0.000 utils.py:333(disp_len)
[1,0]<stdout>:      787    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,1]<stdout>:       23    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:      516    0.001    0.000    0.051    0.000 utils.py:143(inner)
[1,0]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,0]<stdout>:      881    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,1]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:      255    0.001    0.000    0.007    0.000 mpi_ops.py:92(_check_function)
[1,0]<stdout>:      255    0.001    0.000    1.821    0.007 functional.py:1567(log_softmax)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:333(_get_file_writer)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,1]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,0]<stdout>:      603    0.001    0.000    0.044    0.000 {built-in method builtins.next}
[1,0]<stdout>:      263    0.001    0.000    0.043    0.000 dataloader.py:356(_next_index)
[1,0]<stdout>:      510    0.001    0.000    0.001    0.000 {built-in method torch._C.is_grad_enabled}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 util.py:221(impl)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,1]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:      531    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
[1,0]<stdout>:        1    0.000    0.000   12.089   12.089 dataloader.py:690(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:        4    0.000    0.000   12.061    3.015 popen_forkserver.py:41(_launch)
[1,0]<stdout>:      257    0.000    0.000    0.000    0.000 {built-in method builtins.max}
[1,0]<stdout>:      256    0.000    0.000    0.001    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,1]<stdout>:        1    0.000    0.000   12.085   12.085 dataloader.py:287(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,0]<stdout>:     1277    0.000    0.000    0.000    0.000 {built-in method time.time}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:     1026    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:104(acquire)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:        6    0.000    0.000    0.004    0.001 queues.py:158(_start_thread)
[1,0]<stdout>:        7    0.000    0.000    0.001    0.000 threading.py:761(__init__)
[1,0]<stdout>:      765    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:      297    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:        1    0.000    0.000  326.109  326.109 {built-in method builtins.exec}
[1,0]<stdout>:       36    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,0]<stdout>:      783    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,0]<stdout>:      512    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.025    0.002 connection.py:917(wait)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:285(choice)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:        1    0.000    0.000  326.108  326.108 <string>:1(<module>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,0]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:2118(_sum_dispatcher)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,0]<stdout>:      275    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,0]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:36(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.003    0.001 context.py:100(Queue)
[1,0]<stdout>:       11    0.000    0.000    3.686    0.335 threading.py:270(wait)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        4    0.000    0.000   12.061    3.015 popen_fork.py:15(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:108(release)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,0]<stdout>:        4    0.000    0.000   12.062    3.015 process.py:110(start)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,1]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,1]<stdout>:        1    0.000    0.000    0.001    0.001 threading.py:979(join)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,0]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        2    0.000    0.000    0.028    0.014 dataloader.py:1040(_shutdown_workers)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:        7    0.000    0.000    0.004    0.001 threading.py:834(start)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,0]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,0]<stdout>:       14    0.000    0.000    0.024    0.002 selectors.py:402(select)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:       11    0.000    0.000    0.002    0.000 context.py:65(Lock)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:        7    0.000    0.000    0.003    0.000 threading.py:540(wait)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:      106    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:        4    0.000    0.000    0.024    0.006 process.py:142(join)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:        4    0.000    0.000    0.024    0.006 popen_fork.py:40(wait)
[1,0]<stdout>:        4    0.000    0.000   12.061    3.015 context.py:288(_Popen)
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,0]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55cc5c3749a0}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,0]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 dataloader.py:1017(_shutdown_worker)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,1]<stdout>:
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:145(register)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
[1,0]<stdout>:       53    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,0]<stdout>:       72    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:282(_screen_shape_linux)
[1,0]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:583(_decr_instances)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f661a814c10}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,0]<stdout>:       11    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:        4    0.000    0.000   12.061    3.015 popen_forkserver.py:33(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:       11    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,1]<stdout>:this epoch's train spend:326.1304278373718s
[1,0]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:329(status_printer)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:296(<listcomp>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:        1    0.000    0.000   12.089   12.089 dataloader.py:287(__iter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:979(join)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1285(fp_write)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:748(encode)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:171(__eq__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:        6    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 std.py:228(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:215(_supports_unicode)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:201(_is_utf)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:88(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:231(_screen_shape_wrapper)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1300(<lambda>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:this epoch's train spend:326.1287467479706s
[1,0]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:25<33:11, 25.53s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:25<33:30, 25.78s/it][1,0]<stderr>:test:   3%|▎         | 2/79 [00:25<13:44, 10.71s/it][1,1]<stderr>:test:   3%|▎         | 2/79 [00:26<13:52, 10.81s/it][1,0]<stderr>:test:   4%|▍         | 3/79 [00:26<07:33,  5.97s/it][1,1]<stderr>:test:   4%|▍         | 3/79 [00:26<07:37,  6.02s/it][1,0]<stderr>:test:   5%|▌         | 4/79 [00:26<04:40,  3.74s/it][1,1]<stderr>:test:   5%|▌         | 4/79 [00:26<04:43,  3.78s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:27<03:20,  2.72s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:27<03:18,  2.68s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:27<02:19,  1.90s/it][1,1]<stderr>:test:   8%|▊         | 6/79 [00:27<02:17,  1.88s/it][1,0]<stderr>:test:   9%|▉         | 7/79 [00:28<01:40,  1.39s/it][1,1]<stderr>:test:   9%|▉         | 7/79 [00:28<01:38,  1.37s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:28<01:14,  1.05s/it][1,1]<stderr>:test:  10%|█         | 8/79 [00:28<01:13,  1.04s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:29<01:17,  1.10s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:29<01:20,  1.15s/it][1,1]<stderr>:test:  13%|█▎        | 10/79 [00:30<00:59,  1.16it/s][1,0]<stderr>:test:  13%|█▎        | 10/79 [00:30<01:01,  1.12it/s][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:30<00:47,  1.43it/s][1,0]<stderr>:test:  14%|█▍        | 11/79 [00:30<00:48,  1.39it/s][1,1]<stderr>:test:  15%|█▌        | 12/79 [00:30<00:39,  1.70it/s][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:30<00:40,  1.66it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:31<00:44,  1.47it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:31<00:47,  1.40it/s][1,0]<stderr>:test:  18%|█▊        | 14/79 [00:31<00:37,  1.75it/s][1,1]<stderr>:test:  18%|█▊        | 14/79 [00:32<00:38,  1.67it/s][1,0]<stderr>:test:  19%|█▉        | 15/79 [00:32<00:31,  2.00it/s][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:32<00:33,  1.93it/s][1,0]<stderr>:test:  20%|██        | 16/79 [00:32<00:28,  2.23it/s][1,1]<stderr>:test:  20%|██        | 16/79 [00:32<00:29,  2.17it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:33<00:41,  1.49it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:33<00:44,  1.38it/s][1,1]<stderr>:test:  23%|██▎       | 18/79 [00:34<00:34,  1.76it/s][1,0]<stderr>:test:  23%|██▎       | 18/79 [00:34<00:40,  1.50it/s][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:34<00:29,  2.02it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:34<00:33,  1.77it/s][1,1]<stderr>:test:  25%|██▌       | 20/79 [00:34<00:26,  2.24it/s][1,0]<stderr>:test:  25%|██▌       | 20/79 [00:35<00:29,  2.02it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:35<00:35,  1.62it/s][1,1]<stderr>:test:  28%|██▊       | 22/79 [00:36<00:30,  1.88it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:36<00:26,  2.12it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:36<00:45,  1.28it/s][1,1]<stderr>:test:  30%|███       | 24/79 [00:36<00:23,  2.33it/s][1,0]<stderr>:test:  28%|██▊       | 22/79 [00:36<00:36,  1.55it/s][1,0]<stderr>:test:  29%|██▉       | 23/79 [00:37<00:30,  1.81it/s][1,0]<stderr>:test:  30%|███       | 24/79 [00:37<00:26,  2.06it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:38<00:35,  1.54it/s][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:38<00:33,  1.60it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:38<00:27,  1.86it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:39<00:24,  2.11it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:39<00:47,  1.15it/s][1,0]<stderr>:test:  33%|███▎      | 26/79 [00:39<00:37,  1.41it/s][1,0]<stderr>:test:  34%|███▍      | 27/79 [00:40<00:30,  1.68it/s][1,0]<stderr>:test:  35%|███▌      | 28/79 [00:40<00:26,  1.94it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:40<00:39,  1.26it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:41<00:38,  1.26it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:41<00:41,  1.22it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [00:41<00:31,  1.53it/s][1,0]<stderr>:test:  38%|███▊      | 30/79 [00:42<00:33,  1.48it/s][1,1]<stderr>:test:  41%|████      | 32/79 [00:42<00:26,  1.80it/s][1,0]<stderr>:test:  39%|███▉      | 31/79 [00:42<00:27,  1.75it/s][1,0]<stderr>:test:  41%|████      | 32/79 [00:42<00:23,  2.01it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:43<00:30,  1.50it/s][1,1]<stderr>:test:  43%|████▎     | 34/79 [00:43<00:29,  1.52it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:44<00:24,  1.79it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:44<00:37,  1.24it/s][1,1]<stderr>:test:  46%|████▌     | 36/79 [00:44<00:21,  2.04it/s][1,0]<stderr>:test:  43%|████▎     | 34/79 [00:44<00:29,  1.50it/s][1,0]<stderr>:test:  44%|████▍     | 35/79 [00:45<00:24,  1.77it/s][1,0]<stderr>:test:  46%|████▌     | 36/79 [00:45<00:21,  2.02it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:45<00:31,  1.35it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:46<00:26,  1.57it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:46<00:21,  1.83it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:46<00:29,  1.43it/s][1,1]<stderr>:test:  51%|█████     | 40/79 [00:46<00:18,  2.07it/s][1,0]<stderr>:test:  48%|████▊     | 38/79 [00:46<00:24,  1.70it/s][1,0]<stderr>:test:  49%|████▉     | 39/79 [00:47<00:20,  1.95it/s][1,0]<stderr>:test:  51%|█████     | 40/79 [00:47<00:17,  2.19it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:48<00:27,  1.37it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:48<00:22,  1.64it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:48<00:18,  1.91it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:49<00:30,  1.26it/s][1,1]<stderr>:test:  56%|█████▌    | 44/79 [00:49<00:16,  2.14it/s][1,0]<stderr>:test:  53%|█████▎    | 42/79 [00:49<00:27,  1.36it/s][1,0]<stderr>:test:  54%|█████▍    | 43/79 [00:50<00:22,  1.63it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:50<00:23,  1.43it/s][1,0]<stderr>:test:  56%|█████▌    | 44/79 [00:50<00:18,  1.89it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [00:50<00:20,  1.59it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [00:51<00:17,  1.86it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:51<00:23,  1.47it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [00:51<00:14,  2.10it/s][1,0]<stderr>:test:  58%|█████▊    | 46/79 [00:51<00:20,  1.59it/s][1,0]<stderr>:test:  59%|█████▉    | 47/79 [00:52<00:17,  1.86it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:52<00:17,  1.70it/s][1,0]<stderr>:test:  61%|██████    | 48/79 [00:52<00:14,  2.11it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [00:52<00:17,  1.66it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [00:53<00:14,  1.92it/s][1,1]<stderr>:test:  66%|██████▌   | 52/79 [00:53<00:12,  2.16it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:54<00:27,  1.10it/s][1,0]<stderr>:test:  63%|██████▎   | 50/79 [00:55<00:24,  1.17it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:55<00:23,  1.11it/s][1,0]<stderr>:test:  65%|██████▍   | 51/79 [00:55<00:19,  1.43it/s][1,0]<stderr>:test:  66%|██████▌   | 52/79 [00:55<00:15,  1.70it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [00:56<00:19,  1.30it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:56<00:15,  1.57it/s][1,1]<stderr>:test:  71%|███████   | 56/79 [00:56<00:12,  1.83it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:57<00:19,  1.32it/s][1,0]<stderr>:test:  68%|██████▊   | 54/79 [00:57<00:15,  1.59it/s][1,0]<stderr>:test:  70%|██████▉   | 55/79 [00:57<00:12,  1.86it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:57<00:15,  1.39it/s][1,0]<stderr>:test:  71%|███████   | 56/79 [00:58<00:10,  2.10it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [00:58<00:13,  1.58it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [00:58<00:10,  1.85it/s][1,1]<stderr>:test:  76%|███████▌  | 60/79 [00:58<00:09,  2.09it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:59<00:16,  1.35it/s][1,0]<stderr>:test:  73%|███████▎  | 58/79 [00:59<00:13,  1.61it/s][1,0]<stderr>:test:  75%|███████▍  | 59/79 [01:00<00:10,  1.87it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [01:00<00:14,  1.28it/s][1,0]<stderr>:test:  76%|███████▌  | 60/79 [01:00<00:08,  2.12it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [01:00<00:10,  1.55it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [01:01<00:08,  1.82it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [01:01<00:07,  2.06it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [01:02<00:14,  1.22it/s][1,0]<stderr>:test:  78%|███████▊  | 62/79 [01:02<00:11,  1.48it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [01:02<00:10,  1.39it/s][1,0]<stderr>:test:  80%|███████▉  | 63/79 [01:02<00:09,  1.75it/s][1,0]<stderr>:test:  81%|████████  | 64/79 [01:03<00:07,  2.00it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [01:03<00:09,  1.41it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [01:03<00:07,  1.68it/s][1,1]<stderr>:test:  86%|████████▌ | 68/79 [01:04<00:05,  1.94it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [01:05<00:14,  1.01s/it][1,0]<stderr>:test:  84%|████████▎ | 66/79 [01:05<00:11,  1.09it/s][1,0]<stderr>:test:  85%|████████▍ | 67/79 [01:06<00:08,  1.35it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:06<00:10,  1.07s/it][1,0]<stderr>:test:  86%|████████▌ | 68/79 [01:06<00:06,  1.62it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [01:06<00:07,  1.18it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [01:07<00:05,  1.44it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [01:07<00:04,  1.71it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [01:07<00:08,  1.23it/s][1,0]<stderr>:test:  89%|████████▊ | 70/79 [01:08<00:07,  1.16it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:09<00:05,  1.05it/s][1,0]<stderr>:test:  90%|████████▉ | 71/79 [01:09<00:05,  1.43it/s][1,0]<stderr>:test:  91%|█████████ | 72/79 [01:09<00:04,  1.70it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [01:09<00:03,  1.30it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [01:09<00:02,  1.57it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [01:10<00:01,  1.83it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [01:10<00:04,  1.38it/s][1,0]<stderr>:test:  94%|█████████▎| 74/79 [01:11<00:03,  1.29it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:11<00:01,  1.20it/s][1,0]<stderr>:test:  95%|█████████▍| 75/79 [01:11<00:02,  1.55it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [01:12<00:00,  1.41it/s][1,0]<stderr>:test:  96%|█████████▌| 76/79 [01:12<00:01,  1.82it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:12<00:00,  1.87it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:12<00:00,  1.09it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:12<00:01,  1.69it/s][1,0]<stderr>:test:  99%|█████████▊| 78/79 [01:14<00:00,  1.13it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:14<00:00,  1.52it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:14<00:00,  1.06it/s][1,0]<stdout>:
[1,0]<stdout>:[acc/test_top1] = 0.020000
[1,0]<stdout>:[acc/test_top5] = 0.350000
[1,0]<stdout>:[acc/test_top1_best] = 0.020000
[1,0]<stdout>:[save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints
[1,0]<stdout>:spend all time:326.1287467479706s
[1,1]<stdout>:spend all time:326.1304278373718s
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  Environment Summary
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:PyTorch 1.6.0 compiled w/ CUDA 10.1
[1,0]<stdout>:Running with Python 3.8 and CUDA 10.1.105
[1,0]<stdout>:
[1,0]<stdout>:`pip3 list` truncated output:
[1,0]<stdout>:numpy==1.21.2
[1,0]<stdout>:pytorch-lightning==1.5.10
[1,0]<stdout>:torch==1.6.0
[1,0]<stdout>:torchmetrics==0.7.2
[1,0]<stdout>:torchvision==0.7.0
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  cProfile output
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:         868285 function calls (858842 primitive calls) in 478.660 seconds
[1,0]<stdout>:
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:   List reduced from 2254 to 15 due to restriction <15>
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:        1  405.948  405.948  405.948  405.948 {method 'enable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:      599   55.617    0.093   55.617    0.093 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:       97    3.468    0.036    3.468    0.036 {method 'cuda' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3380    2.381    0.001    2.381    0.001 {built-in method posix.stat}
[1,0]<stdout>:        9    2.351    0.261    2.351    0.261 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:      292    2.017    0.007    2.017    0.007 {method 'read' of '_io.BufferedReader' objects}
[1,0]<stdout>:      292    1.238    0.004    1.238    0.004 {built-in method io.open_code}
[1,0]<stdout>:       32    1.098    0.034    1.098    0.034 {method 'normal_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       32    0.771    0.024    0.771    0.024 {method 'uniform_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        1    0.680    0.680    0.680    0.680 /gs/home/lwang20/anaconda3/env/lib/python3.8/site-packages/horovod/common/basics.py:48(init)
[1,0]<stdout>:       18    0.652    0.036    0.652    0.036 {built-in method tensor}
[1,0]<stdout>:      235    0.333    0.001    0.333    0.001 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:       64    0.298    0.005    0.298    0.005 {built-in method mm}
[1,0]<stdout>:       24    0.202    0.008    0.226    0.009 {built-in method _imp.create_dynamic}
[1,0]<stdout>:     1027    0.108    0.000    0.108    0.000 {built-in method conv2d}
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  autograd profiler output (CPU mode)
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:        top 15 events sorted by cpu_time_total
[1,0]<stdout>:
[1,0]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Name                                 Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,0]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:normal_                              22.82%           819.895ms        22.82%           819.895ms        819.895ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:HorovodAllreduce                     17.90%           643.130ms        17.90%           643.130ms        643.130ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:uniform_                             15.71%           564.435ms        15.71%           564.435ms        564.435ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:item                                 9.05%            325.125ms        9.05%            325.125ms        325.125ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:_local_scalar_dense                  9.05%            325.119ms        9.05%            325.119ms        325.119ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:HorovodAllreduce                     8.96%            322.094ms        8.96%            322.094ms        322.094ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:normal_                              3.58%            128.737ms        3.58%            128.737ms        128.737ms        NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:uniform_                             2.50%            89.853ms         2.50%            89.853ms         89.853ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:torch::autograd::AccumulateGrad      2.22%            79.849ms         2.22%            79.849ms         79.849ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:add_                                 2.22%            79.844ms         2.22%            79.844ms         79.844ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:to                                   1.60%            57.463ms         1.60%            57.463ms         57.463ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:copy_                                1.60%            57.452ms         1.60%            57.452ms         57.452ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:HorovodAllreduce                     1.22%            43.783ms         1.22%            43.783ms         43.783ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:normal_                              0[1,0]<stdout>:.85%            30.719ms         0.85%            30.719ms         30.719ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:HorovodAllreduce                     0.72%            25.773ms         0.72%            25.773ms         25.773ms         NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Self CPU time total: 3.593s
[1,0]<stdout>:CUDA time total: 0.000us
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  autograd profiler output (CUDA mode)
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:        top 15 events sorted by cpu_time_total
[1,0]<stdout>:
[1,0]<stdout>:	Because the autograd profiler uses the CUDA event API,
[1,0]<stdout>:	the CUDA time column reports approximately max(cuda_time, cpu_time).
[1,0]<stdout>:	Please ignore this output if your code does not use CUDA.
[1,0]<stdout>:
[1,0]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Name                                 Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,0]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:normal_                              34.68%           803.176ms        34.68%           803.176ms        803.176ms        39.73%           803.184ms        803.184ms        1                []                                             
[1,0]<stdout>:uniform_                             24.00%           555.808ms        24.00%           555.808ms        555.808ms        27.49%           555.813ms        555.813ms        1                []                                             
[1,0]<stdout>:normal_                              5.70%            132.019ms        5.70%            132.019ms        132.019ms        6.53%            132.020ms        132.020ms        1                []                                             
[1,0]<stdout>:to                                   3.97%            91.818ms         3.97%            91.818ms         91.818ms         4.54%            91.816ms         91.816ms         1                []                                             
[1,0]<stdout>:copy_                                3.96%            91.796ms         3.96%            91.796ms         91.796ms         4.54%            91.792ms         91.792ms         1                []                                             
[1,0]<stdout>:uniform_                             3.93%            91.080ms         3.93%            91.080ms         91.080ms         4.50%            91.080ms         91.080ms         1                []                                             
[1,0]<stdout>:torch::autograd::AccumulateGrad      3.50%            80.954ms         3.50%            80.954ms         80.954ms         0.01%            256.000us        256.000us        1                []                                             
[1,0]<stdout>:add_                                 3.49%            80.932ms         3.49%            80.932ms         80.932ms         0.01%            256.000us        256.000us        1                []                                             
[1,0]<stdout>:set_                                 2.78%            64.310ms         2.78%            64.310ms         64.310ms         3.17%            64.064ms         64.064ms         1                []                                             
[1,0]<stdout>:conv2d                               2.42%            56.089ms         2.42%            56.089ms         56.089ms         1.58%            31.852ms         31.852ms         1                []                                             
[1,0]<stdout>:convolution                          2.42%            56.079ms         2.42%            56.079ms         56.079ms         1.57%            31.844ms         31.844ms         1                []                                             
[1,0]<stdout>:_convolution                         2.42%            56.070ms         2.42%            56.070ms         56.070ms         1.57%            31.840ms         31.840ms         1                []                                             
[1,0]<stdout>:conv2d                               2.24%            51.855ms         2.24%            5[1,0]<stdout>:1.855ms         51.855ms         1.58%            32.016ms         32.016ms         1                []                                             
[1,0]<stdout>:convolution                          2.24%            51.847ms         2.24%            51.847ms         51.847ms         1.58%            32.010ms         32.010ms         1                []                                             
[1,0]<stdout>:_convolution                         2.24%            51.838ms         2.24%            51.838ms         51.838ms         1.58%            32.002ms         32.002ms         1                []                                             
[1,0]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Self CPU time total: 2.316s
[1,0]<stdout>:CUDA time total: 2.022s
[1,0]<stdout>:
[1,0]<stderr>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  Environment Summary
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:PyTorch 1.6.0 compiled w/ CUDA 10.1
[1,1]<stdout>:Running with Python 3.8 and CUDA 10.1.105
[1,1]<stdout>:
[1,1]<stdout>:`pip3 list` truncated output:
[1,1]<stdout>:numpy==1.21.2
[1,1]<stdout>:pytorch-lightning==1.5.10
[1,1]<stdout>:torch==1.6.0
[1,1]<stdout>:torchmetrics==0.7.2
[1,1]<stdout>:torchvision==0.7.0
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  cProfile output
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:         853523 function calls (844552 primitive calls) in 478.657 seconds
[1,1]<stdout>:
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:   List reduced from 2075 to 15 due to restriction <15>
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:        1  406.904  406.904  406.904  406.904 {method 'enable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:      595   54.672    0.092   54.672    0.092 {method 'acquire' of '_thread.lock' objects}
[1,1]<stdout>:       97    3.458    0.036    3.458    0.036 {method 'cuda' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        5    2.327    0.465    2.327    0.465 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:     3177    2.186    0.001    2.186    0.001 {built-in method posix.stat}
[1,1]<stdout>:      235    1.844    0.008    1.844    0.008 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:      245    1.729    0.007    1.729    0.007 {method 'read' of '_io.BufferedReader' objects}
[1,1]<stdout>:       32    1.098    0.034    1.098    0.034 {method 'normal_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      245    0.873    0.004    0.873    0.004 {built-in method io.open_code}
[1,1]<stdout>:       32    0.769    0.024    0.769    0.024 {method 'uniform_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.680    0.680    0.680    0.680 /gs/home/lwang20/anaconda3/env/lib/python3.8/site-packages/horovod/common/basics.py:48(init)
[1,1]<stdout>:       64    0.298    0.005    0.298    0.005 {built-in method mm}
[1,1]<stdout>:     1027    0.143    0.000    0.143    0.000 {built-in method conv2d}
[1,1]<stdout>:       22    0.111    0.005    0.112    0.005 {built-in method _imp.create_dynamic}
[1,1]<stdout>:    44822    0.100    0.000    0.108    0.000 {built-in method builtins.next}
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  autograd profiler output (CPU mode)
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:        top 15 events sorted by cpu_time_total
[1,1]<stdout>:
[1,1]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Name                                 Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,1]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:HorovodAllreduce                     40.06%           2.026s           40.06%           2.026s           2.026s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:normal_                              16.15%           816.456ms        16.15%           816.456ms        816.456ms        NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:uniform_                             11.17%           564.974ms        11.17%           564.974ms        564.974ms        NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:HorovodAllreduce                     6.44%            325.492ms        6.44%            325.492ms        325.492ms        NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:item                                 6.41%            324.236ms        6.41%            324.236ms        324.236ms        NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:_local_scalar_dense                  6.41%            324.233ms        6.41%            324.233ms        324.233ms        NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:normal_                              2.64%            133.270ms        2.64%            133.270ms        133.270ms        NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:uniform_                             1.83%            92.365ms         1.83%            92.365ms         92.365ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:to                                   1.67%            84.395ms         1.67%            84.395ms         84.395ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:copy_                                1.67%            84.387ms         1.67%            84.387ms         84.387ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:torch::autograd::AccumulateGrad      1.50%            75.632ms         1.50%            75.632ms         75.632ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:add_                                 1.50%            75.622ms         1.50%            75.622ms         75.622ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:set_                                 1.27%            64.291ms         1.27%            64.291ms         64.291ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:HorovodAllreduce                     0[1,1]<stdout>:.65%            33.032ms         0.65%            33.032ms         33.032ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:normal_                              0.64%            32.458ms         0.64%            32.458ms         32.458ms         NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:-----------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Self CPU time total: 5.057s
[1,1]<stdout>:CUDA time total: 0.000us
[1,1]<stdout>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  autograd profiler output (CUDA mode)
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:        top 15 events sorted by cpu_time_total
[1,1]<stdout>:
[1,1]<stdout>:	Because the autograd profiler uses the CUDA event API,
[1,1]<stdout>:	the CUDA time column reports approximately max(cuda_time, cpu_time).
[1,1]<stdout>:	Please ignore this output if your code does not use CUDA.
[1,1]<stdout>:
[1,1]<stdout>:-------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Name                                   Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,1]<stdout>:-------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:HorovodAllreduce                       33.51%           2.286s           33.51%           2.286s           2.286s           34.56%           2.286s           2.286s           1                []                                             
[1,1]<stdout>:HorovodAllreduce                       33.30%           2.272s           33.30%           2.272s           2.272s           34.35%           2.272s           2.272s           1                []                                             
[1,1]<stdout>:normal_                                12.29%           838.733ms        12.29%           838.733ms        838.733ms        12.68%           838.740ms        838.740ms        1                []                                             
[1,1]<stdout>:uniform_                               8.26%            563.365ms        8.26%            563.365ms        563.365ms        8.52%            563.370ms        563.370ms        1                []                                             
[1,1]<stdout>:normal_                                1.97%            134.385ms        1.97%            134.385ms        134.385ms        2.03%            134.387ms        134.387ms        1                []                                             
[1,1]<stdout>:uniform_                               1.32%            89.899ms         1.32%            89.899ms         89.899ms         1.36%            89.900ms         89.900ms         1                []                                             
[1,1]<stdout>:to                                     1.24%            84.702ms         1.24%            84.702ms         84.702ms         1.28%            84.702ms         84.702ms         1                []                                             
[1,1]<stdout>:copy_                                  1.24%            84.679ms         1.24%            84.679ms         84.679ms         1.28%            84.679ms         84.679ms         1                []                                             
[1,1]<stdout>:torch::autograd::AccumulateGrad        1.14%            77.830ms         1.14%            77.830ms         77.830ms         0.00%            224.000us        224.000us        1                []                                             
[1,1]<stdout>:add_                                   1.14%            77.811ms         1.14%            77.811ms         77.811ms         0.00%            224.000us        224.000us        1                []                                             
[1,1]<stdout>:set_                                   1.00%            68.079ms         1.00%            68.079ms         68.079ms         1.03%            68.064ms         68.064ms         1                []                                             
[1,1]<stdout>:CudnnConvolutionBackward               0.96%            65.313ms         0.96%            65.313ms         65.313ms         0.97%            64.160ms         64.160ms         1                []                                             
[1,1]<stdout>:cudnn_convolution_backward             0.96%            65.[1,1]<stdout>:253ms         0.96%            65.253ms         65.253ms         0.97%            64.144ms         64.144ms         1                []                                             
[1,1]<stdout>:cudnn_convolution_backward_weight      0.95%            64.719ms         0.95%            64.719ms         64.719ms         0.49%            32.696ms         32.696ms         1                []                                             
[1,1]<stdout>:conv2d                                 0.72%            48.929ms         0.72%            48.929ms         48.929ms         0.48%            31.600ms         31.600ms         1                []                                             
[1,1]<stdout>:-------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Self CPU time total: 6.822s
[1,1]<stdout>:CUDA time total: 6.615s
[1,1]<stdout>:
[1,1]<stderr>:

real	25m44.913s
user	25m49.161s
sys	31m11.403s
