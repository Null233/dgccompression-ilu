Mon Apr 11 15:26:42 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 418.87.00    Driver Version: 418.87.00    CUDA Version: 10.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla V100-PCIE...  On   | 00000000:38:00.0 Off |                    0 |
| N/A   31C    P0    23W / 250W |      0MiB / 32480MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  Tesla V100-PCIE...  On   | 00000000:50:00.0 Off |                    0 |
| N/A   33C    P0    24W / 250W |      0MiB / 32480MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
/gs/software/cuda/10.1
[1,0]<stdout>:`bottleneck` is a tool that can be used as an initial step for debugging
[1,0]<stdout>:bottlenecks in your program.
[1,0]<stdout>:
[1,0]<stdout>:It summarizes runs of your script with the Python profiler and PyTorch's
[1,0]<stdout>:autograd profiler. Because your script will be profiled, please ensure that it
[1,0]<stdout>:exits in a finite amount of time.
[1,0]<stdout>:
[1,0]<stdout>:For more complicated uses of the profilers, please see
[1,0]<stdout>:https://docs.python.org/3/library/profile.html and
[1,0]<stdout>:https://pytorch.org/docs/master/autograd.html#profiler for more information.
[1,0]<stdout>:Running environment analysis...
[1,1]<stdout>:`bottleneck` is a tool that can be used as an initial step for debugging
[1,1]<stdout>:bottlenecks in your program.
[1,1]<stdout>:
[1,1]<stdout>:It summarizes runs of your script with the Python profiler and PyTorch's
[1,1]<stdout>:autograd profiler. Because your script will be profiled, please ensure that it
[1,1]<stdout>:exits in a finite amount of time.
[1,1]<stdout>:
[1,1]<stdout>:For more complicated uses of the profilers, please see
[1,1]<stdout>:https://docs.python.org/3/library/profile.html and
[1,1]<stdout>:https://pytorch.org/docs/master/autograd.html#profiler for more information.
[1,1]<stdout>:Running environment analysis...
[1,1]<stdout>:Running your script with cProfile
[1,0]<stdout>:Running your script with cProfile
[1,0]<stdout>:==> loading configs from ['configs/imagenet/vgg16_bn.py', 'configs/methods/wm0.py', 'configs/methods/fp16.py', 'configs/methods/int32.py']
[1,0]<stdout>:[train.save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:[seed] = 42
[1,0]<stdout>:[data]
[1,0]<stdout>:  [num_threads_per_worker] = 4
[1,0]<stdout>:[train]
[1,0]<stdout>:  [dgc] = False
[1,0]<stdout>:  [compression]
[1,0]<stdout>:    [func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:    [compress_ratio] = 0.05
[1,0]<stdout>:    [sample_ratio] = 0.01
[1,0]<stdout>:    [strided_sample] = True
[1,0]<stdout>:    [compress_upper_bound] = 1.3
[1,0]<stdout>:    [compress_lower_bound] = 0.8
[1,0]<stdout>:    [max_adaptation_iters] = 10
[1,0]<stdout>:    [resample] = True
[1,0]<stdout>:    [memory]
[1,0]<stdout>:      [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:      [momentum] = 0.9
[1,0]<stdout>:    [warmup_epochs] = 0
[1,0]<stdout>:    [fp16_values] = True
[1,0]<stdout>:    [int32_indices] = True
[1,0]<stdout>:  [criterion]
[1,0]<stdout>:    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
[1,0]<stdout>:  [optimizer]
[1,0]<stdout>:    [func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:    [momentum] = 0.9
[1,0]<stdout>:    [lr] = 0.0125
[1,0]<stdout>:    [weight_decay] = 5e-05
[1,0]<stdout>:  [schedule_lr_per_epoch] = True
[1,0]<stdout>:  [warmup_lr_epochs] = 5
[1,0]<stdout>:  [metric] = acc/test_top1
[1,0]<stdout>:  [meters]
[1,0]<stdout>:    [acc/{}_top1]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 1
[1,0]<stdout>:    [acc/{}_top5]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 5
[1,0]<stdout>:  [optimize_bn_separately] = False
[1,0]<stdout>:  [num_epochs] = 1
[1,0]<stdout>:  [batch_size] = 64
[1,0]<stdout>:  [scheduler]
[1,0]<stdout>:    [func] = <class 'torch.optim.lr_scheduler.MultiStepLR'>
[1,0]<stdout>:    [milestones] = [25, 55, 75]
[1,0]<stdout>:    [gamma] = 0.1
[1,0]<stdout>:  [topk] = True
[1,0]<stdout>:  [fp16] = False
[1,0]<stdout>:  [powersgd] = False
[1,0]<stdout>:  [sign] = False
[1,0]<stdout>:  [efsign] = False
[1,0]<stdout>:  [natural] = False
[1,0]<stdout>:  [onebit] = False
[1,0]<stdout>:  [qsgd] = False
[1,0]<stdout>:  [randomk] = False
[1,0]<stdout>:  [signum] = False
[1,0]<stdout>:  [terngrad] = False
[1,0]<stdout>:  [num_batches_per_step] = 1
[1,0]<stdout>:  [save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:  [checkpoint_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/e{epoch}-r0.pth
[1,0]<stdout>:  [latest_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/latest-r0.pth
[1,0]<stdout>:  [best_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/best-r0.pth
[1,0]<stdout>:[dataset]
[1,0]<stdout>:  [func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:  [root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [image_size] = 224
[1,0]<stdout>:[model]
[1,0]<stdout>:  [func] = <function vgg16_bn at 0x7f9020ddeb80>
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [init_weights] = True
[1,0]<stdout>:[device] = cuda
[1,0]<stdout>:
[1,0]<stdout>:==> creating model "[func] = <function vgg16_bn at 0x7f9020ddeb80>
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[init_weights] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> creating dataset "[func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:[root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[image_size] = 224"
[1,0]<stdout>:
[1,0]<stdout>:==> loading dataset "{'num_workers': 4, 'pin_memory': True, 'multiprocessing_context': 'forkserver'}""
[1,0]<stdout>:
[1,0]<stdout>:==> creating optimizer "[func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:[momentum] = 0.9
[1,0]<stdout>:[lr] = 0.025
[1,0]<stdout>:[weight_decay] = 5e-05"
[1,0]<stdout>:
[1,0]<stdout>:==> creating compression "[func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:[compress_ratio] = 0.05
[1,0]<stdout>:[sample_ratio] = 0.01
[1,0]<stdout>:[strided_sample] = True
[1,0]<stdout>:[compress_upper_bound] = 1.3
[1,0]<stdout>:[compress_lower_bound] = 0.8
[1,0]<stdout>:[max_adaptation_iters] = 10
[1,0]<stdout>:[resample] = True
[1,0]<stdout>:[memory]
[1,0]<stdout>:  [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:  [momentum] = 0.9
[1,0]<stdout>:[warmup_epochs] = 0
[1,0]<stdout>:[fp16_values] = True
[1,0]<stdout>:[int32_indices] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> initializing topk compression
[1,0]<stdout>:
[1,0]<stdout>:==> train from scratch
[1,0]<stdout>:
[1,0]<stdout>:==> broadcasting paramters and optimizer state
[1,0]<stdout>:before evaluate
[1,1]<stdout>:before evaluate
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:05<07:25,  5.71s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:05<07:44,  5.95s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:07<01:36,  1.30s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:07<01:36,  1.31s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:10<01:02,  1.12it/s][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:10<01:03,  1.11it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:12<00:52,  1.25it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:12<00:51,  1.27it/s][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:12<00:39,  1.64it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:15<00:45,  1.35it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:15<00:45,  1.37it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:17<00:40,  1.45it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:17<00:30,  1.81it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:18<00:41,  1.38it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:20<00:42,  1.27it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:20<00:27,  1.89it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:21<00:40,  1.32it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:23<00:34,  1.42it/s][1,1]<stderr>:test:  41%|████      | 32/79 [00:23<00:25,  1.87it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:23<00:34,  1.45it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:25<00:29,  1.57it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:25<00:37,  1.23it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:28<00:26,  1.59it/s][1,0]<stderr>:test:  49%|████▉     | 39/79 [00:28<00:22,  1.76it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:28<00:32,  1.28it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:30<00:22,  1.66it/s][1,0]<stderr>:test:  53%|█████▎    | 42/79 [00:30<00:20,  1.83it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:30<00:25,  1.50it/s][1,0]<stderr>:test:  54%|█████▍    | 43/79 [00:30<00:19,  1.86it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:32<00:23,  1.47it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:33<00:21,  1.55it/s][1,0]<stderr>:test:  59%|█████▉    | 47/79 [00:33<00:18,  1.74it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [00:33<00:15,  1.95it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:34<00:18,  1.62it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:35<00:19,  1.54it/s][1,0]<stderr>:test:  65%|██████▍   | 51/79 [00:35<00:15,  1.85it/s][1,1]<stderr>:test:  66%|██████▌   | 52/79 [00:35<00:13,  2.04it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:37<00:16,  1.55it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:37<00:17,  1.47it/s][1,0]<stderr>:test:  70%|██████▉   | 55/79 [00:37<00:12,  1.92it/s][1,1]<stderr>:test:  71%|███████   | 56/79 [00:38<00:12,  1.89it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:39<00:14,  1.54it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:39<00:14,  1.54it/s][1,0]<stderr>:test:  75%|███████▍  | 59/79 [00:40<00:10,  1.99it/s][1,1]<stderr>:test:  76%|███████▌  | 60/79 [00:40<00:09,  2.08it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:42<00:11,  1.52it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:42<00:12,  1.47it/s][1,0]<stderr>:test:  80%|███████▉  | 63/79 [00:42<00:07,  2.06it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [00:43<00:07,  1.97it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:44<00:10,  1.39it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:45<00:11,  1.23it/s][1,1]<stderr>:test:  86%|████████▌ | 68/79 [00:45<00:05,  1.86it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [00:47<00:07,  1.34it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [00:47<00:07,  1.41it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [00:48<00:03,  1.90it/s][1,0]<stderr>:test:  90%|████████▉ | 71/79 [00:48<00:04,  1.77it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [00:49<00:04,  1.40it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [00:50<00:04,  1.44it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [00:50<00:01,  2.05it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [00:52<00:01,  1.29it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [00:52<00:00,  1.50it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [00:52<00:01,  1.49it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [00:52<00:00,  1.49it/s][1,1]<stdout>:after evaluate
[1,0]<stdout>:after evaluate
[1,0]<stdout>:[acc/test_top1] = 0.060000
[1,0]<stdout>:[acc/test_top5] = 0.560000
[1,1]<stderr>:
[1,0]<stdout>:
[1,0]<stdout>:==> training epoch 0/1
[1,0]<stderr>:
[1,0]<stderr>:train:   0% 0/255 [00:00<?, ?it/s][1,0]<stderr>:train:   0% 1/255 [00:19<1:21:14, 19.19s/it][1,0]<stderr>:train:   1% 2/255 [00:22<40:46,  9.67s/it]  [1,0]<stderr>:train:   1% 3/255 [00:25<27:41,  6.59s/it][1,0]<stderr>:train:   2% 4/255 [00:28<21:29,  5.14s/it][1,0]<stderr>:train:   2% 5/255 [00:30<17:57,  4.31s/it][1,0]<stderr>:train:   2% 6/255 [00:33<15:49,  3.81s/it][1,0]<stderr>:train:   3% 7/255 [00:36<14:35,  3.53s/it][1,0]<stderr>:train:   3% 8/255 [00:39<13:40,  3.32s/it][1,0]<stderr>:train:   4% 9/255 [00:42<13:01,  3.18s/it][1,0]<stderr>:train:   4% 10/255 [00:45<12:39,  3.10s/it][1,0]<stderr>:train:   4% 11/255 [00:48<12:16,  3.02s/it][1,0]<stderr>:train:   5% 12/255 [00:51<12:08,  3.00s/it][1,0]<stderr>:train:   5% 13/255 [00:54<12:06,  3.00s/it][1,0]<stderr>:train:   5% 14/255 [00:57<12:00,  2.99s/it][1,0]<stderr>:train:   6% 15/255 [01:00<12:01,  3.01s/it][1,0]<stderr>:train:   6% 16/255 [01:03<11:49,  2.97s/it][1,0]<stderr>:train:   7% 17/255 [01:05<11:46,  2.97s/it][1,0]<stderr>:train:   7% 18/255 [01:08<11:44,  2.97s/it][1,0]<stderr>:train:   7% 19/255 [01:11<11:34,  2.94s/it][1,0]<stderr>:train:   8% 20/255 [01:14<11:26,  2.92s/it][1,0]<stderr>:train:   8% 21/255 [01:17<11:29,  2.95s/it][1,0]<stderr>:train:   9% 22/255 [01:20<11:29,  2.96s/it][1,0]<stderr>:train:   9% 23/255 [01:23<11:22,  2.94s/it][1,0]<stderr>:train:   9% 24/255 [01:26<11:16,  2.93s/it][1,0]<stderr>:train:  10% 25/255 [01:29<11:09,  2.91s/it][1,0]<stderr>:train:  10% 26/255 [01:32<11:07,  2.91s/it][1,0]<stderr>:train:  11% 27/255 [01:35<11:06,  2.93s/it][1,0]<stderr>:train:  11% 28/255 [01:38<11:03,  2.92s/it][1,0]<stderr>:train:  11% 29/255 [01:41<11:04,  2.94s/it][1,0]<stderr>:train:  12% 30/255 [01:44<11:02,  2.94s/it][1,0]<stderr>:train:  12% 31/255 [01:46<10:52,  2.91s/it][1,0]<stderr>:train:  13% 32/255 [01:49<10:48,  2.91s/it][1,0]<stderr>:train:  13% 33/255 [01:52<10:48,  2.92s/it][1,0]<stderr>:train:  13% 34/255 [01:55<10:44,  2.92s/it][1,0]<stderr>:train:  14% 35/255 [01:58<10:42,  2.92s/it][1,0]<stderr>:train:  14% 36/255 [02:01<10:42,  2.93s/it][1,0]<stderr>:train:  15% 37/255 [02:04<10:34,  2.91s/it][1,0]<stderr>:train:  15% 38/255 [02:07<10:28,  2.90s/it][1,0]<stderr>:train:  15% 39/255 [02:10<10:26,  2.90s/it][1,0]<stderr>:train:  16% 40/255 [02:13<10:24,  2.90s/it][1,0]<stderr>:train:  16% 41/255 [02:16<10:25,  2.92s/it][1,0]<stderr>:train:  16% 42/255 [02:18<10:20,  2.91s/it][1,0]<stderr>:train:  17% 43/255 [02:21<10:16,  2.91s/it][1,0]<stderr>:train:  17% 44/255 [02:24<10:17,  2.93s/it][1,0]<stderr>:train:  18% 45/255 [02:27<10:13,  2.92s/it][1,0]<stderr>:train:  18% 46/255 [02:30<10:07,  2.91s/it][1,0]<stderr>:train:  18% 47/255 [02:33<10:02,  2.90s/it][1,0]<stderr>:train:  19% 48/255 [02:36<09:54,  2.87s/it][1,0]<stderr>:train:  19% 49/255 [02:39<09:52,  2.88s/it][1,0]<stderr>:train:  20% 50/255 [02:42<09:49,  2.88s/it][1,0]<stderr>:train:  20% 51/255 [02:45<09:54,  2.92s/it][1,0]<stderr>:train:  20% 52/255 [02:48<09:53,  2.92s/it][1,0]<stderr>:train:  21% 53/255 [02:50<09:47,  2.91s/it][1,0]<stderr>:train:  21% 54/255 [02:53<09:43,  2.90s/it][1,0]<stderr>:train:  22% 55/255 [02:56<09:38,  2.89s/it][1,0]<stderr>:train:  22% 56/255 [02:59<09:39,  2.91s/it][1,0]<stderr>:train:  22% 57/255 [03:02<09:35,  2.91s/it][1,0]<stderr>:train:  23% 58/255 [03:05<09:32,  2.90s/it][1,0]<stderr>:train:  23% 59/255 [03:08<09:31,  2.91s/it][1,0]<stderr>:train:  24% 60/255 [03:11<09:25,  2.90s/it][1,0]<stderr>:train:  24% 61/255 [03:14<09:27,  2.93s/it][1,0]<stderr>:train:  24% 62/255 [03:17<09:23,  2.92s/it][1,0]<stderr>:train:  25% 63/255 [03:20<09:21,  2.93s/it][1,0]<stderr>:train:  25% 64/255 [03:22<09:17,  2.92s/it][1,0]<stderr>:train:  25% 65/255 [03:25<09:13,  2.92s/it][1,0]<stderr>:train:  26% 66/255 [03:28<09:12,  2.92s/it][1,0]<stderr>:train:  26% 67/255 [03:31<09:09,  2.92s/it][1,0]<stderr>:train:  27% 68/255 [03:34<09:11,  2.95s/it][1,0]<stderr>:train:  27% 69/255 [03:37<09:03,  2.92s/it][1,0]<stderr>:train:  27% 70/255 [03:40<08:56,  2.90s/it][1,0]<stderr>:train:  28% 71/255 [03:43<08:57,  2.92s/it][1,0]<stderr>:train:  28% 72/255 [03:46<08:51,  2.91s/it][1,0]<stderr>:train:  29% 73/255 [03:49<08:53,  2.93s/it][1,0]<stderr>:train:  29% 74/255 [03:52<08:52,  2.94s/it][1,0]<stderr>:train:  29% 75/255 [03:55<08:46,  2.92s/it][1,0]<stderr>:train:  30% 76/255 [03:58<08:44,  2.93s/it][1,0]<stderr>:train:  30% 77/255 [04:01<08:43,  2.94s/it][1,0]<stderr>:train:  31% 78/255 [04:03<08:38,  2.93s/it][1,0]<stderr>:train:  31% 79/255 [04:06<08:33,  2.92s/it][1,0]<stderr>:train:  31% 80/255 [04:09<08:32,  2.93s/it][1,0]<stderr>:train:  32% 81/255 [04:12<08:30,  2.93s/it][1,0]<stderr>:train:  32% 82/255 [04:15<08:31,  2.96s/it][1,0]<stderr>:train:  33% 83/255 [04:18<08:22,  2.92s/it][1,0]<stderr>:train:  33% 84/255 [04:21<08:17,  2.91s/it][1,0]<stderr>:train:  33% 85/255 [04:24<08:15,  2.91s/it][1,0]<stderr>:train:  34% 86/255 [04:27<08:09,  2.89s/it][1,0]<stderr>:train:  34% 87/255 [04:30<08:11,  2.92s/it][1,0]<stderr>:train:  35% 88/255 [04:33<08:04,  2.90s/it][1,0]<stderr>:train:  35% 89/255 [04:35<08:00,  2.90s/it][1,0]<stderr>:train:  35% 90/255 [04:38<08:00,  2.91s/it][1,0]<stderr>:train:  36% 91/255 [04:41<07:55,  2.90s/it][1,0]<stderr>:train:  36% 92/255 [04:44<07:49,  2.88s/it][1,0]<stderr>:train:  36% 93/255 [04:47<07:51,  2.91s/it][1,0]<stderr>:train:  37% 94/255 [04:50<07:49,  2.91s/it][1,0]<stderr>:train:  37% 95/255 [04:53<07:49,  2.93s/it][1,0]<stderr>:train:  38% 96/255 [04:56<07:47,  2.94s/it][1,0]<stderr>:train:  38% 97/255 [04:59<07:40,  2.91s/it][1,0]<stderr>:train:  38% 98/255 [05:02<07:33,  2.89s/it][1,0]<stderr>:train:  39% 99/255 [05:05<07:36,  2.93s/it][1,0]<stderr>:train:  39% 100/255 [05:08<07:32,  2.92s/it][1,0]<stderr>:train:  40% 101/255 [05:10<07:27,  2.91s/it][1,0]<stderr>:train:  40% 102/255 [05:13<07:28,  2.93s/it][1,0]<stderr>:train:  40% 103/255 [05:16<07:25,  2.93s/it][1,0]<stderr>:train:  41% 104/255 [05:19<07:17,  2.90s/it][1,0]<stderr>:train:  41% 105/255 [05:22<07:16,  2.91s/it][1,0]<stderr>:train:  42% 106/255 [05:25<07:12,  2.90s/it][1,0]<stderr>:train:  42% 107/255 [05:28<07:10,  2.91s/it][1,0]<stderr>:train:  42% 108/255 [05:31<07:05,  2.89s/it][1,0]<stderr>:train:  43% 109/255 [05:34<07:02,  2.90s/it][1,0]<stderr>:train:  43% 110/255 [05:37<06:59,  2.90s/it][1,0]<stderr>:train:  44% 111/255 [05:39<06:56,  2.89s/it][1,0]<stderr>:train:  44% 112/255 [05:42<06:53,  2.89s/it][1,0]<stderr>:train:  44% 113/255 [05:45<06:49,  2.89s/it][1,0]<stderr>:train:  45% 114/255 [05:48<06:49,  2.91s/it][1,0]<stderr>:train:  45% 115/255 [05:51<06:46,  2.90s/it][1,0]<stderr>:train:  45% 116/255 [05:54<06:48,  2.94s/it][1,0]<stderr>:train:  46% 117/255 [05:57<06:46,  2.95s/it][1,0]<stderr>:train:  46% 118/255 [06:00<06:43,  2.94s/it][1,0]<stderr>:train:  47% 119/255 [06:03<06:38,  2.93s/it][1,0]<stderr>:train:  47% 120/255 [06:06<06:36,  2.94s/it][1,0]<stderr>:train:  47% 121/255 [06:09<06:29,  2.91s/it][1,0]<stderr>:train:  48% 122/255 [06:12<06:27,  2.91s/it][1,0]<stderr>:train:  48% 123/255 [06:15<06:26,  2.93s/it][1,0]<stderr>:train:  49% 124/255 [06:17<06:23,  2.93s/it][1,0]<stderr>:train:  49% 125/255 [06:20<06:19,  2.92s/it][1,0]<stderr>:train:  49% 126/255 [06:23<06:18,  2.93s/it][1,0]<stderr>:train:  50% 127/255 [06:26<06:17,  2.95s/it][1,0]<stderr>:train:  50% 128/255 [06:29<06:11,  2.93s/it][1,0]<stderr>:train:  51% 129/255 [06:32<06:05,  2.90s/it][1,0]<stderr>:train:  51% 130/255 [06:35<06:01,  2.89s/it][1,0]<stderr>:train:  51% 131/255 [06:38<05:57,  2.89s/it][1,0]<stderr>:train:  52% 132/255 [06:41<05:58,  2.92s/it][1,0]<stderr>:train:  52% 133/255 [06:44<05:53,  2.90s/it][1,0]<stderr>:train:  53% 134/255 [06:46<05:49,  2.88s/it][1,0]<stderr>:train:  53% 135/255 [06:49<05:48,  2.90s/it][1,0]<stderr>:train:  53% 136/255 [06:52<05:46,  2.91s/it][1,0]<stderr>:train:  54% 137/255 [06:55<05:44,  2.92s/it][1,0]<stderr>:train:  54% 138/255 [06:58<05:41,  2.92s/it][1,0]<stderr>:train:  55% 139/255 [07:01<05:38,  2.92s/it][1,0]<stderr>:train:  55% 140/255 [07:04<05:37,  2.93s/it][1,0]<stderr>:train:  55% 141/255 [07:07<05:36,  2.95s/it][1,0]<stderr>:train:  56% 142/255 [07:10<05:32,  2.94s/it][1,0]<stderr>:train:  56% 143/255 [07:13<05:28,  2.94s/it][1,0]<stderr>:train:  56% 144/255 [07:16<05:23,  2.91s/it][1,0]<stderr>:train:  57% 145/255 [07:19<05:20,  2.91s/it][1,0]<stderr>:train:  57% 146/255 [07:22<05:15,  2.89s/it][1,0]<stderr>:train:  58% 147/255 [07:24<05:11,  2.88s/it][1,0]<stderr>:train:  58% 148/255 [07:27<05:09,  2.89s/it][1,0]<stderr>:train:  58% 149/255 [07:30<05:06,  2.89s/it][1,0]<stderr>:train:  59% 150/255 [07:33<05:05,  2.91s/it][1,0]<stderr>:train:  59% 151/255 [07:36<05:05,  2.93s/it][1,0]<stderr>:train:  60% 152/255 [07:39<05:03,  2.95s/it][1,0]<stderr>:train:  60% 153/255 [07:42<04:58,  2.93s/it][1,0]<stderr>:train:  60% 154/255 [07:45<04:55,  2.93s/it][1,0]<stderr>:train:  61% 155/255 [07:48<04:52,  2.93s/it][1,0]<stderr>:train:  61% 156/255 [07:51<04:50,  2.93s/it][1,0]<stderr>:train:  62% 157/255 [07:54<04:45,  2.92s/it][1,0]<stderr>:train:  62% 158/255 [07:57<04:43,  2.93s/it][1,0]<stderr>:train:  62% 159/255 [08:00<04:41,  2.93s/it][1,0]<stderr>:train:  63% 160/255 [08:03<04:40,  2.95s/it][1,0]<stderr>:train:  63% 161/255 [08:06<04:37,  2.95s/it][1,0]<stderr>:train:  64% 162/255 [08:08<04:33,  2.94s/it][1,0]<stderr>:train:  64% 163/255 [08:11<04:27,  2.90s/it][1,0]<stderr>:train:  64% 164/255 [08:14<04:22,  2.88s/it][1,0]<stderr>:train:  65% 165/255 [08:17<04:19,  2.89s/it][1,0]<stderr>:train:  65% 166/255 [08:20<04:15,  2.87s/it][1,0]<stderr>:train:  65% 167/255 [08:23<04:11,  2.86s/it][1,0]<stderr>:train:  66% 168/255 [08:26<04:10,  2.88s/it][1,0]<stderr>:train:  66% 169/255 [08:28<04:07,  2.87s/it][1,0]<stderr>:train:  67% 170/255 [08:31<04:04,  2.87s/it][1,0]<stderr>:train:  67% 171/255 [08:34<04:01,  2.88s/it][1,0]<stderr>:train:  67% 172/255 [08:37<04:00,  2.90s/it][1,0]<stderr>:train:  68% 173/255 [08:40<04:00,  2.93s/it][1,0]<stderr>:train:  68% 174/255 [08:43<03:59,  2.96s/it][1,0]<stderr>:train:  69% 175/255 [08:46<03:53,  2.92s/it][1,0]<stderr>:train:  69% 176/255 [08:49<03:51,  2.92s/it][1,0]<stderr>:train:  69% 177/255 [08:52<03:46,  2.90s/it][1,0]<stderr>:train:  70% 178/255 [08:55<03:42,  2.89s/it][1,0]<stderr>:train:  70% 179/255 [08:58<03:42,  2.92s/it][1,0]<stderr>:train:  71% 180/255 [09:01<03:39,  2.93s/it][1,0]<stderr>:train:  71% 181/255 [09:03<03:36,  2.93s/it][1,0]<stderr>:train:  71% 182/255 [09:06<03:33,  2.93s/it][1,0]<stderr>:train:  72% 183/255 [09:09<03:30,  2.92s/it][1,0]<stderr>:train:  72% 184/255 [09:12<03:27,  2.92s/it][1,0]<stderr>:train:  73% 185/255 [09:15<03:24,  2.92s/it][1,0]<stderr>:train:  73% 186/255 [09:18<03:23,  2.95s/it][1,0]<stderr>:train:  73% 187/255 [09:21<03:20,  2.94s/it][1,0]<stderr>:train:  74% 188/255 [09:24<03:15,  2.91s/it][1,0]<stderr>:train:  74% 189/255 [09:27<03:12,  2.92s/it][1,0]<stderr>:train:  75% 190/255 [09:30<03:10,  2.93s/it][1,0]<stderr>:train:  75% 191/255 [09:33<03:06,  2.92s/it][1,0]<stderr>:train:  75% 192/255 [09:36<03:03,  2.91s/it][1,0]<stderr>:train:  76% 193/255 [09:39<03:00,  2.92s/it][1,0]<stderr>:train:  76% 194/255 [09:42<02:58,  2.93s/it][1,0]<stderr>:train:  76% 195/255 [09:45<02:57,  2.95s/it][1,0]<stderr>:train:  77% 196/255 [09:47<02:54,  2.96s/it][1,0]<stderr>:train:  77% 197/255 [09:50<02:51,  2.95s/it][1,0]<stderr>:train:  78% 198/255 [09:53<02:47,  2.94s/it][1,0]<stderr>:train:  78% 199/255 [09:56<02:44,  2.94s/it][1,0]<stderr>:train:  78% 200/255 [09:59<02:40,  2.92s/it][1,0]<stderr>:train:  79% 201/255 [10:02<02:36,  2.90s/it][1,0]<stderr>:train:  79% 202/255 [10:05<02:33,  2.90s/it][1,0]<stderr>:train:  80% 203/255 [10:08<02:29,  2.88s/it][1,0]<stderr>:train:  80% 204/255 [10:11<02:26,  2.88s/it][1,0]<stderr>:train:  80% 205/255 [10:14<02:24,  2.90s/it][1,0]<stderr>:train:  81% 206/255 [10:17<02:22,  2.92s/it][1,0]<stderr>:train:  81% 207/255 [10:19<02:18,  2.89s/it][1,0]<stderr>:train:  82% 208/255 [10:22<02:15,  2.88s/it][1,0]<stderr>:train:  82% 209/255 [10:25<02:12,  2.88s/it][1,0]<stderr>:train:  82% 210/255 [10:28<02:08,  2.86s/it][1,0]<stderr>:train:  83% 211/255 [10:31<02:07,  2.89s/it][1,0]<stderr>:train:  83% 212/255 [10:34<02:04,  2.90s/it][1,0]<stderr>:train:  84% 213/255 [10:37<02:01,  2.90s/it][1,0]<stderr>:train:  84% 214/255 [10:40<01:59,  2.91s/it][1,0]<stderr>:train:  84% 215/255 [10:43<01:56,  2.91s/it][1,0]<stderr>:train:  85% 216/255 [10:45<01:52,  2.89s/it][1,0]<stderr>:train:  85% 217/255 [10:48<01:49,  2.88s/it][1,0]<stderr>:train:  85% 218/255 [10:51<01:46,  2.87s/it][1,0]<stderr>:train:  86% 219/255 [10:54<01:43,  2.87s/it][1,0]<stderr>:train:  86% 220/255 [10:57<01:40,  2.86s/it][1,0]<stderr>:train:  87% 221/255 [11:00<01:38,  2.88s/it][1,0]<stderr>:train:  87% 222/255 [11:03<01:35,  2.90s/it][1,0]<stderr>:train:  87% 223/255 [11:06<01:33,  2.92s/it][1,0]<stderr>:train:  88% 224/255 [11:09<01:30,  2.91s/it][1,0]<stderr>:train:  88% 225/255 [11:11<01:28,  2.93s/it][1,0]<stderr>:train:  89% 226/255 [11:14<01:25,  2.94s/it][1,0]<stderr>:train:  89% 227/255 [11:17<01:21,  2.91s/it][1,0]<stderr>:train:  89% 228/255 [11:20<01:18,  2.91s/it][1,0]<stderr>:train:  90% 229/255 [11:23<01:15,  2.89s/it][1,0]<stderr>:train:  90% 230/255 [11:26<01:12,  2.91s/it][1,0]<stderr>:train:  91% 231/255 [11:29<01:09,  2.91s/it][1,0]<stderr>:train:  91% 232/255 [11:32<01:07,  2.93s/it][1,0]<stderr>:train:  91% 233/255 [11:35<01:04,  2.91s/it][1,0]<stderr>:train:  92% 234/255 [11:38<01:01,  2.94s/it][1,0]<stderr>:train:  92% 235/255 [11:41<00:58,  2.94s/it][1,0]<stderr>:train:  93% 236/255 [11:44<00:56,  2.96s/it][1,0]<stderr>:train:  93% 237/255 [11:47<00:53,  2.95s/it][1,0]<stderr>:train:  93% 238/255 [11:50<00:49,  2.94s/it][1,0]<stderr>:train:  94% 239/255 [11:53<00:47,  2.95s/it][1,0]<stderr>:train:  94% 240/255 [11:55<00:44,  2.94s/it][1,0]<stderr>:train:  95% 241/255 [11:58<00:40,  2.90s/it][1,0]<stderr>:train:  95% 242/255 [12:01<00:37,  2.88s/it][1,0]<stderr>:train:  95% 243/255 [12:04<00:34,  2.88s/it][1,0]<stderr>:train:  96% 244/255 [12:07<00:31,  2.89s/it][1,0]<stderr>:train:  96% 245/255 [12:10<00:29,  2.93s/it][1,0]<stderr>:train:  96% 246/255 [12:13<00:26,  2.91s/it][1,0]<stderr>:train:  97% 247/255 [12:16<00:23,  2.88s/it][1,0]<stderr>:train:  97% 248/255 [12:18<00:20,  2.86s/it][1,0]<stderr>:train:  98% 249/255 [12:21<00:17,  2.85s/it][1,0]<stderr>:train:  98% 250/255 [12:24<00:14,  2.88s/it][1,0]<stderr>:train:  98% 251/255 [12:27<00:11,  2.90s/it][1,0]<stderr>:train:  99% 252/255 [12:30<00:08,  2.90s/it][1,0]<stderr>:train:  99% 253/255 [12:33<00:05,  2.93s/it][1,0]<stderr>:train: 100% 254/255 [12:36<00:02,  2.93s/it][1,0]<stderr>:train: 100% 255/255 [12:38<00:00,  2.73s/it][1,0]<stderr>:train: 100% 255/255 [12:38<00:00,  2.98s/it][1,0]<stdout>:         1184075 function calls (1170248 primitive calls) in 758.741 seconds
[1,0]<stdout>:
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:      255  585.387    2.296  585.387    2.296 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,0]<stdout>:      511  138.245    0.271  138.245    0.271 {method 'item' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29835   14.023    0.000   14.023    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:        4   11.105    2.776   11.105    2.776 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:     1072    4.938    0.005    4.938    0.005 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:    29580    0.551    0.000    0.551    0.000 {built-in method zeros}
[1,0]<stdout>:      255    0.487    0.002   15.894    0.062 optimizer.py:232(synchronize)
[1,0]<stdout>:    15047    0.405    0.000    0.411    0.000 {built-in method builtins.sum}
[1,0]<stdout>:    29580    0.363    0.000    0.363    0.000 {method 'scatter_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.356    0.000    0.356    0.000 {built-in method conv2d}
[1,0]<stdout>:    29580    0.237    0.000    0.237    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.196    0.000    0.196    0.000 {built-in method batch_norm}
[1,0]<stdout>:    15045    0.174    0.000    0.174    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    14790    0.154    0.000    0.154    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      510    0.153    0.000    0.153    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29580    0.127    0.000    0.127    0.000 {method 'split_with_sizes' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.120    0.000    0.403    0.000 batchnorm.py:99(forward)
[1,0]<stdout>:14280/510    0.099    0.000    1.278    0.003 module.py:710(_call_impl)
[1,0]<stdout>:    29580    0.090    0.000    0.090    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29835    0.089    0.000   14.117    0.000 mpi_ops.py:928(synchronize)
[1,0]<stdout>:     3825    0.081    0.000    0.081    0.000 {built-in method relu_}
[1,0]<stdout>:        1    0.079    0.079  758.740  758.740 train.py:338(train)
[1,0]<stdout>:    88740    0.076    0.000    0.087    0.000 tensor.py:725(grad)
[1,0]<stdout>:        8    0.075    0.009    0.075    0.009 {method 'dump' of '_pickle.Pickler' objects}
[1,0]<stdout>:      765    0.066    0.000    0.066    0.000 {built-in method addmm}
[1,0]<stdout>:      267    0.063    0.000    0.063    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:    14790    0.053    0.000    0.053    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29580    0.053    0.000    0.966    0.000 compression.py:268(desparsify)
[1,0]<stdout>:     1275    0.046    0.000    0.046    0.000 {built-in method max_pool2d}
[1,0]<stdout>:      255    0.045    0.000    0.474    0.002 sgd.py:75(step)
[1,0]<stdout>:    29580    0.037    0.000    0.171    0.000 tensor.py:367(split)
[1,0]<stdout>:      255    0.031    0.000    0.241    0.001 optimizer.py:166(zero_grad)
[1,0]<stdout>:    29070    0.026    0.000    0.026    0.000 module.py:758(__getattr__)
[1,0]<stdout>:      510    0.026    0.000    1.196    0.002 container.py:115(forward)
[1,0]<stdout>:    15301    0.025    0.000    0.025    0.000 basics.py:183(size)
[1,0]<stdout>:    29580    0.025    0.000    1.081    0.000 compression.py:252(decompress)
[1,0]<stdout>:     3370    0.025    0.000    0.029    0.000 module.py:774(__setattr__)
[1,0]<stdout>:      510    0.024    0.000    0.024    0.000 {built-in method dropout}
[1,0]<stdout>:       14    0.023    0.002    0.023    0.002 {method 'poll' of 'select.poll' objects}
[1,0]<stdout>:     3315    0.020    0.000    0.237    0.000 functional.py:1998(batch_norm)
[1,0]<stdout>:    14790    0.018    0.000    0.018    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.015    0.000    0.015    0.000 {built-in method torch._C._nn.nll_loss}
[1,0]<stdout>:      257    0.014    0.000    0.022    0.000 std.py:355(format_meter)
[1,0]<stdout>:    14280    0.014    0.000    0.014    0.000 {built-in method torch._C._get_tracing_state}
[1,0]<stdout>:      255    0.014    0.000    0.046    0.000 summary.py:137(scalar)
[1,0]<stdout>:    91045    0.013    0.000    0.013    0.000 {built-in method builtins.hasattr}
[1,0]<stdout>:    86604    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
[1,0]<stdout>:      255    0.012    0.000    0.012    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.012    0.000    0.369    0.000 conv.py:410(_conv_forward)
[1,0]<stdout>:    44370    0.011    0.000    0.019    0.000 tensor.py:458(__hash__)
[1,0]<stdout>:    75733    0.010    0.000    0.010    0.000 {method 'append' of 'list' objects}
[1,0]<stdout>:     3315    0.010    0.000    0.011    0.000 functional.py:1980(_verify_batch_size)
[1,0]<stdout>:     3315    0.010    0.000    0.382    0.000 conv.py:418(forward)
[1,0]<stdout>:      256    0.009    0.000    0.017    0.000 sampler.py:206(__iter__)
[1,0]<stdout>:      255    0.009    0.000    0.009    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,0]<stdout>:      269    0.008    0.000    0.008    0.000 {method 'clear' of 'dict' objects}
[1,0]<stdout>:    57630    0.008    0.000    0.008    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,0]<stdout>:     3825    0.008    0.000    0.089    0.000 functional.py:1106(relu)
[1,0]<stdout>:      255    0.008    0.000    0.021    0.000 x2num.py:11(check_nan)
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method ones_like}
[1,0]<stdout>:      255    0.007    0.000    0.532    0.002 {built-in method apply}
[1,0]<stdout>:    44399    0.007    0.000    0.007    0.000 {built-in method builtins.id}
[1,0]<stdout>:      765    0.007    0.000    0.007    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:51528/51525    0.007    0.000    0.007    0.000 {built-in method builtins.len}
[1,0]<stdout>:     3825    0.007    0.000    0.096    0.000 activation.py:101(forward)
[1,0]<stdout>:      765    0.007    0.000    0.085    0.000 functional.py:1655(linear)
[1,0]<stdout>:      255    0.006    0.000  585.409    2.296 tensor.py:155(backward)
[1,0]<stdout>:      255    0.006    0.000   16.381    0.064 optimizer.py:337(step)
[1,0]<stdout>:        8    0.006    0.001    0.082    0.010 reduction.py:58(dump)
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'reduce' of 'numpy.ufunc' objects}
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {built-in method tensor}
[1,0]<stdout>:     4080    0.006    0.000    0.006    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.005    0.000    0.119    0.000 std.py:1197(update)
[1,0]<stdout>:      256    0.005    0.000   16.324    0.064 std.py:1159(__iter__)
[1,0]<stdout>:    29839    0.005    0.000    0.005    0.000 {method 'pop' of 'dict' objects}
[1,0]<stdout>:      255    0.005    0.000    0.005    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,0]<stdout>:      255    0.005    0.000    1.230    0.005 vgg.py:42(forward)
[1,0]<stdout>:     1275    0.005    0.000    0.057    0.000 pooling.py:156(forward)
[1,0]<stdout>:    11449    0.005    0.000    0.007    0.000 utils.py:330(<genexpr>)
[1,0]<stdout>:      255    0.004    0.000  585.403    2.296 __init__.py:57(backward)
[1,0]<stdout>:      510    0.004    0.000    0.030    0.000 functional.py:950(dropout)
[1,0]<stdout>:      515    0.004    0.000    0.019    0.000 queues.py:80(put)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.004    0.000   16.385    0.064 lr_scheduler.py:62(wrapper)
[1,0]<stdout>:     1579    0.004    0.000    0.004    0.000 {method 'format' of 'str' objects}
[1,0]<stdout>:      776    0.004    0.000    0.008    0.000 threading.py:341(notify)
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 {built-in method numpy.array}
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 {built-in method flatten}
[1,0]<stdout>:      524    0.003    0.000    0.003    0.000 {method 'release' of '_thread.lock' objects}
[1,0]<stdout>:      256    0.003    0.000    4.993    0.020 dataloader.py:945(_next_data)
[1,0]<stdout>:     1275    0.003    0.000    0.049    0.000 functional.py:564(_max_pool2d)
[1,0]<stdout>:     1530    0.003    0.000    0.003    0.000 std.py:233(__call__)
[1,0]<stdout>:      255    0.003    0.000    0.017    0.000 writer.py:131(add_summary)
[1,0]<stdout>:      255    0.003    0.000    0.011    0.000 __init__.py:25(_make_grads)
[1,0]<stdout>:      255    0.003    0.000    0.029    0.000 x2num.py:18(make_np)
[1,0]<stdout>:     1275    0.003    0.000    0.053    0.000 _jit_internal.py:237(fn)
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 batchnorm.py:275(_check_input_dim)
[1,0]<stdout>:      255    0.003    0.000    0.481    0.002 grad_mode.py:12(decorate_context)
[1,0]<stdout>:      255    0.003    0.000    0.068    0.000 writer.py:401(add_scalar)
[1,0]<stdout>:        1    0.003    0.003    0.003    0.003 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      256    0.003    0.000    0.003    0.000 {built-in method now}
[1,0]<stdout>:      765    0.003    0.000    0.092    0.000 linear.py:90(forward)
[1,0]<stdout>:      257    0.003    0.000    0.003    0.000 std.py:1445(format_dict)
[1,0]<stdout>:      255    0.003    0.000    0.524    0.002 mpi_ops.py:191(forward)
[1,0]<stdout>:      255    0.003    0.000    0.534    0.002 mpi_ops.py:209(allreduce)
[1,0]<stdout>:      255    0.003    0.000    0.014    0.000 writer.py:115(add_event)
[1,0]<stdout>:     3315    0.003    0.000    0.004    0.000 __init__.py:31(__get__)
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,0]<stdout>:      255    0.003    0.000    0.019    0.000 functional.py:2158(nll_loss)
[1,0]<stdout>:      255    0.002    0.000    0.015    0.000 mpi_ops.py:105(_allreduce_async)
[1,0]<stdout>:      255    0.002    0.000    0.037    0.000 loss.py:946(forward)
[1,0]<stdout>:      255    0.002    0.000    0.005    0.000 train.py:409(adjust_learning_rate)
[1,0]<stdout>:      255    0.002    0.000    4.945    0.019 dataloader.py:912(_get_data)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,0]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,0]<stdout>:      256    0.002    0.000    0.111    0.000 std.py:1324(refresh)
[1,0]<stdout>:      255    0.002    0.000    4.939    0.019 queue.py:153(get)
[1,0]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.002    0.000    0.016    0.000 pooling.py:1110(forward)
[1,0]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,0]<stdout>:      255    0.002    0.000    0.014    0.000 functional.py:909(adaptive_avg_pool2d)
[1,0]<stdout>:      255    0.002    0.000    0.011    0.000 fromnumeric.py:2123(sum)
[1,0]<stdout>:      263    0.002    0.000    0.028    0.000 dataloader.py:991(_try_put_index)
[1,0]<stdout>:      257    0.002    0.000    0.077    0.000 std.py:348(print_status)
[1,0]<stdout>:    11192    0.002    0.000    0.002    0.000 {built-in method unicodedata.east_asian_width}
[1,0]<stdout>:      255    0.002    0.000    0.008    0.000 fromnumeric.py:69(_wrapreduction)
[1,0]<stdout>:      255    0.002    0.000    0.243    0.001 optimizer.py:353(zero_grad)
[1,0]<stdout>:      255    0.002    0.000    0.022    0.000 mpi_ops.py:152(allreduce_async)
[1,0]<stdout>:      257    0.002    0.000    0.106    0.000 std.py:1463(display)
[1,0]<stdout>:      255    0.002    0.000    0.034    0.000 functional.py:2370(cross_entropy)
[1,0]<stdout>:      257    0.002    0.000    0.027    0.000 std.py:1149(__str__)
[1,0]<stdout>:      765    0.002    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,0]<stdout>:     2040    0.002    0.000    0.003    0.000 {built-in method builtins.any}
[1,0]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,0]<stdout>:     3315    0.001    0.000    0.001    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,0]<stdout>:       20    0.001    0.000    0.004    0.000 synchronize.py:50(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 summary.py:28(_clean_tag)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,0]<stdout>:      512    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
[1,0]<stdout>:      255    0.001    0.000    0.013    0.000 <__array_function__ internals>:2(sum)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 numeric.py:1858(isscalar)
[1,0]<stdout>:        7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,0]<stdout>:      510    0.001    0.000    0.031    0.000 dropout.py:57(forward)
[1,0]<stdout>:      255    0.001    0.000    4.940    0.019 dataloader.py:766(_try_get_data)
[1,0]<stdout>:      255    0.001    0.000    0.011    0.000 event_file_writer.py:132(add_event)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,0]<stdout>:      881    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,0]<stdout>:      260    0.001    0.000    0.002    0.000 std.py:104(acquire)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:318(_check_caffe2_blob)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:      513    0.001    0.000    0.003    0.000 std.py:288(format_interval)
[1,0]<stdout>:      260    0.001    0.000    0.001    0.000 std.py:108(release)
[1,0]<stdout>:      257    0.001    0.000    0.065    0.000 std.py:342(fp_write)
[1,0]<stdout>:      779    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      783    0.001    0.000    0.002    0.000 threading.py:246(__enter__)
[1,0]<stdout>:      255    0.001    0.000    0.012    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
[1,0]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,0]<stdout>:      255    0.001    0.000    0.020    0.000 dataloader.py:1010(_process_data)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:      256    0.001    0.000    4.994    0.020 dataloader.py:362(__next__)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,0]<stdout>:      257    0.001    0.000    0.010    0.000 utils.py:333(disp_len)
[1,0]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:69(__exit__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:333(_get_file_writer)
[1,0]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.012    0.000 functional.py:1567(log_softmax)
[1,0]<stdout>:      257    0.001    0.000    0.009    0.000 utils.py:329(_text_width)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 util.py:221(impl)
[1,0]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:92(_check_function)
[1,0]<stdout>:      786    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,0]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,0]<stdout>:        1    0.001    0.001    0.005    0.005 distributed.py:68(__iter__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
[1,0]<stdout>:      512    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
[1,0]<stdout>:      603    0.000    0.000    0.019    0.000 {built-in method builtins.next}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
[1,0]<stdout>:        1    0.000    0.000  758.741  758.741 {built-in method builtins.exec}
[1,0]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,0]<stdout>:      516    0.000    0.000    0.064    0.000 utils.py:143(inner)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,0]<stdout>:        1    0.000    0.000   11.204   11.204 dataloader.py:690(__init__)
[1,0]<stdout>:       36    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      257    0.000    0.000    0.000    0.000 {built-in method builtins.max}
[1,0]<stdout>:     1277    0.000    0.000    0.000    0.000 {built-in method time.time}
[1,0]<stdout>:        4    0.000    0.000   11.188    2.797 popen_forkserver.py:41(_launch)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:     1026    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
[1,0]<stdout>:      263    0.000    0.000    0.018    0.000 dataloader.py:356(_next_index)
[1,0]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,0]<stdout>:      256    0.000    0.000    0.001    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,0]<stdout>:     55/1    0.000    0.000    0.001    0.001 module.py:1253(train)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,0]<stdout>:      297    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,0]<stdout>:        6    0.000    0.000    0.004    0.001 queues.py:158(_start_thread)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,0]<stdout>:      258    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,0]<stdout>:      765    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,0]<stdout>:      513    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,0]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,0]<stdout>:      530    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:2118(_sum_dispatcher)
[1,0]<stdout>:      783    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,0]<stdout>:       14    0.000    0.000    0.024    0.002 connection.py:917(wait)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.004    0.001 queues.py:36(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:       10    0.000    0.000    4.937    0.494 threading.py:270(wait)
[1,0]<stdout>:        1    0.000    0.000  758.740  758.740 <string>:1(<module>)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:        5    0.000    0.000    0.004    0.001 context.py:100(Queue)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,0]<stdout>:      274    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,0]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,0]<stdout>:        4    0.000    0.000   11.189    2.797 process.py:110(start)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,0]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,0]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,0]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:      280    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,0]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 std.py:846(__init__)
[1,0]<stdout>:        7    0.000    0.000    0.004    0.001 threading.py:834(start)
[1,0]<stdout>:       48    0.000    0.000    0.000    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:84(_cleanup)
[1,0]<stdout>:        4    0.000    0.000   11.188    2.797 context.py:288(_Popen)
[1,0]<stdout>:       14    0.000    0.000    0.023    0.002 selectors.py:402(select)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,0]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,0]<stdout>:        2    0.000    0.000    0.025    0.012 dataloader.py:1040(_shutdown_workers)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,0]<stdout>:        4    0.000    0.000   11.188    2.797 popen_fork.py:15(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,0]<stdout>:        7    0.000    0.000    0.003    0.000 threading.py:540(wait)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,0]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55f83cccc9a0}
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,0]<stdout>:      106    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:       72    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:145(register)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
[1,0]<stdout>:        4    0.000    0.000    0.023    0.006 process.py:142(join)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       53    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 context.py:80(Semaphore)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:282(_screen_shape_linux)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f9021419c10}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:390(__getitem__)
[1,0]<stdout>:        4    0.000    0.000    0.023    0.006 popen_fork.py:40(wait)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:583(_decr_instances)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:149(unregister)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,0]<stdout>:        4    0.000    0.000   11.188    2.797 popen_forkserver.py:33(__init__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,0]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:329(status_printer)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 context.py:75(Condition)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:296(<listcomp>)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 context.py:90(Event)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:383(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 synchronize.py:212(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:        1    0.000    0.000    0.001    0.001 synchronize.py:323(__init__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:748(encode)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:171(__eq__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:201(_is_utf)
[1,0]<stdout>:        1    0.000    0.000   11.204   11.204 dataloader.py:287(__iter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
[1,0]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:215(_supports_unicode)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,1]<stdout>:         1137783 function calls (1123956 primitive calls) in 759.863 seconds
[1,1]<stdout>:
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 std.py:228(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:      255  582.375    2.284  582.375    2.284 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:979(join)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1285(fp_write)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,1]<stdout>:      511  137.693    0.269  137.693    0.269 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29835   17.579    0.001   17.579    0.001 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,1]<stdout>:        4   12.226    3.056   12.226    3.056 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:      809    4.884    0.006    4.884    0.006 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:88(__getattr__)
[1,1]<stdout>:    29580    0.643    0.000    0.643    0.000 {built-in method zeros}
[1,1]<stdout>:      255    0.510    0.002   19.856    0.078 optimizer.py:232(synchronize)
[1,1]<stdout>:    14790    0.435    0.000    0.435    0.000 {built-in method builtins.sum}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:    29580    0.377    0.000    0.377    0.000 {method 'scatter_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        6    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,1]<stdout>:     3315    0.317    0.000    0.317    0.000 {built-in method conv2d}
[1,1]<stdout>:    29580    0.244    0.000    0.244    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.183    0.000    0.183    0.000 {built-in method batch_norm}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,1]<stdout>:    15045    0.169    0.000    0.169    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,1]<stdout>:    29835    0.153    0.000   17.737    0.001 mpi_ops.py:928(synchronize)
[1,1]<stdout>:    29580    0.147    0.000    0.147    0.000 {method 'split_with_sizes' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    0.144    0.000    0.144    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:231(_screen_shape_wrapper)
[1,1]<stdout>:     3315    0.108    0.000    0.375    0.000 batchnorm.py:99(forward)
[1,1]<stdout>:    29580    0.105    0.000    0.105    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:14280/510    0.101    0.000    1.265    0.002 module.py:710(_call_impl)
[1,1]<stdout>:      765    0.101    0.000    0.101    0.000 {built-in method addmm}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,1]<stdout>:        1    0.093    0.093  759.863  759.863 train.py:338(train)
[1,1]<stdout>:      510    0.091    0.000    0.091    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        8    0.076    0.009    0.076    0.010 {method 'dump' of '_pickle.Pickler' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:    88740    0.074    0.000    0.083    0.000 tensor.py:725(grad)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1300(<lambda>)
[1,0]<stdout>:
[1,0]<stdout>:
[1,1]<stdout>:     3825    0.072    0.000    0.072    0.000 {built-in method relu_}
[1,1]<stdout>:    14790    0.062    0.000    0.062    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29580    0.057    0.000    1.076    0.000 compression.py:268(desparsify)
[1,1]<stdout>:     1275    0.051    0.000    0.051    0.000 {built-in method max_pool2d}
[1,1]<stdout>:      255    0.049    0.000    0.481    0.002 sgd.py:75(step)
[1,1]<stdout>:    29580    0.037    0.000    0.191    0.000 tensor.py:367(split)
[1,1]<stdout>:    14790    0.031    0.000    0.031    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    15046    0.027    0.000    0.027    0.000 basics.py:183(size)
[1,1]<stdout>:       14    0.026    0.002    0.026    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:      255    0.025    0.000    0.025    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:      255    0.025    0.000    0.231    0.001 optimizer.py:166(zero_grad)
[1,0]<stdout>:this epoch's train spend:758.7512054443359s
[1,1]<stdout>:    29580    0.025    0.000    1.206    0.000 compression.py:252(decompress)
[1,1]<stdout>:     3370    0.024    0.000    0.028    0.000 module.py:774(__setattr__)
[1,1]<stdout>:      510    0.023    0.000    1.151    0.002 container.py:115(forward)
[1,1]<stdout>:    29070    0.023    0.000    0.023    0.000 module.py:758(__getattr__)
[1,1]<stdout>:     3315    0.021    0.000    0.222    0.000 functional.py:1998(batch_norm)
[1,1]<stdout>:      510    0.019    0.000    0.019    0.000 {built-in method dropout}
[1,1]<stdout>:      255    0.019    0.000    0.019    0.000 {built-in method torch._C._nn.nll_loss}
[1,1]<stdout>:      255    0.018    0.000    0.018    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.012    0.000    0.330    0.000 conv.py:410(_conv_forward)
[1,1]<stdout>:    14280    0.012    0.000    0.012    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:    85071    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:    44370    0.011    0.000    0.019    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:    75733    0.011    0.000    0.011    0.000 {method 'append' of 'list' objects}
[1,1]<stdout>:      256    0.011    0.000    0.020    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:    90530    0.011    0.000    0.011    0.000 {built-in method builtins.hasattr}
[1,1]<stdout>:      255    0.009    0.000    0.414    0.002 {built-in method apply}
[1,1]<stdout>:      269    0.009    0.000    0.009    0.000 {method 'clear' of 'dict' objects}
[1,1]<stdout>:     3825    0.009    0.000    0.089    0.000 activation.py:101(forward)
[1,1]<stdout>:      255    0.009    0.000  582.400    2.284 tensor.py:155(backward)
[1,1]<stdout>:     3315    0.009    0.000    0.009    0.000 functional.py:1980(_verify_batch_size)
[1,1]<stdout>:     3315    0.008    0.000    0.342    0.000 conv.py:418(forward)
[1,1]<stdout>:      510    0.008    0.000    0.029    0.000 functional.py:950(dropout)
[1,1]<stdout>:      255    0.008    0.000   20.361    0.080 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:    44399    0.007    0.000    0.007    0.000 {built-in method builtins.id}
[1,1]<stdout>:     3825    0.007    0.000    0.080    0.000 functional.py:1106(relu)
[1,1]<stdout>:      255    0.007    0.000   20.354    0.080 optimizer.py:337(step)
[1,1]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method ones_like}
[1,1]<stdout>:    57630    0.007    0.000    0.007    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:      765    0.007    0.000    0.120    0.000 functional.py:1655(linear)
[1,1]<stdout>:      765    0.007    0.000    0.007    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:51523/51520    0.006    0.000    0.006    0.000 {built-in method builtins.len}
[1,1]<stdout>:      255    0.006    0.000    0.006    0.000 {built-in method tensor}
[1,1]<stdout>:      255    0.006    0.000  582.392    2.284 __init__.py:57(backward)
[1,1]<stdout>:     1275    0.005    0.000    0.063    0.000 pooling.py:156(forward)
[1,1]<stdout>:    29837    0.005    0.000    0.005    0.000 {method 'pop' of 'dict' objects}
[1,1]<stdout>:      255    0.005    0.000    0.005    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,1]<stdout>:     4080    0.005    0.000    0.005    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      765    0.005    0.000    0.126    0.000 linear.py:90(forward)
[1,1]<stdout>:      256    0.005    0.000    4.957    0.019 dataloader.py:945(_next_data)
[1,1]<stdout>:      255    0.005    0.000    1.202    0.005 vgg.py:42(forward)
[1,1]<stdout>:        8    0.005    0.001    0.081    0.010 reduction.py:58(dump)
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.004    0.000    0.491    0.002 grad_mode.py:12(decorate_context)
[1,1]<stdout>:      255    0.004    0.000    4.890    0.019 queue.py:153(get)
[1,0]<stderr>:
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.004    0.000    0.405    0.002 mpi_ops.py:191(forward)
[1,1]<stdout>:      255    0.003    0.000    4.900    0.019 dataloader.py:912(_get_data)
[1,1]<stdout>:      255    0.003    0.000    0.004    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:      255    0.003    0.000    0.023    0.000 functional.py:2158(nll_loss)
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stdout>:      255    0.003    0.000    0.017    0.000 mpi_ops.py:105(_allreduce_async)
[1,1]<stdout>:      255    0.003    0.000    0.003    0.000 {built-in method flatten}
[1,1]<stdout>:      256    0.003    0.000   17.289    0.068 std.py:1159(__iter__)
[1,1]<stdout>:      255    0.003    0.000    0.011    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:      255    0.003    0.000    0.417    0.002 mpi_ops.py:209(allreduce)
[1,1]<stdout>:     1275    0.003    0.000    0.058    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:      521    0.003    0.000    0.006    0.000 threading.py:341(notify)
[1,1]<stdout>:        1    0.003    0.003    0.003    0.003 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     1275    0.003    0.000    0.054    0.000 functional.py:564(_max_pool2d)
[1,1]<stdout>:     3315    0.003    0.000    0.004    0.000 batchnorm.py:275(_check_input_dim)
[1,1]<stdout>:      255    0.003    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:      256    0.003    0.000    4.960    0.019 dataloader.py:362(__next__)
[1,1]<stdout>:      263    0.003    0.000    0.033    0.000 dataloader.py:991(_try_put_index)
[1,1]<stdout>:      255    0.003    0.000    0.004    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:      260    0.003    0.000    0.011    0.000 queues.py:80(put)
[1,1]<stdout>:      255    0.003    0.000    0.004    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:     3315    0.003    0.000    0.004    0.000 __init__.py:31(__get__)
[1,1]<stdout>:      255    0.002    0.000    0.024    0.000 mpi_ops.py:152(allreduce_async)
[1,1]<stdout>:      255    0.002    0.000    0.048    0.000 loss.py:946(forward)
[1,1]<stdout>:      255    0.002    0.000    0.233    0.001 optimizer.py:353(zero_grad)
[1,1]<stdout>:      255    0.002    0.000    4.892    0.019 dataloader.py:766(_try_get_data)
[1,1]<stdout>:      255    0.002    0.000    0.032    0.000 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,1]<stdout>:      255    0.002    0.000    0.045    0.000 functional.py:2370(cross_entropy)
[1,1]<stdout>:      267    0.002    0.000    0.002    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      765    0.002    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:      255    0.002    0.000    0.034    0.000 pooling.py:1110(forward)
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,1]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,1]<stdout>:      510    0.002    0.000    0.002    0.000 container.py:107(__iter__)
[1,1]<stdout>:     2040    0.002    0.000    0.003    0.000 {built-in method builtins.any}
[1,1]<stdout>:      510    0.001    0.000    0.030    0.000 dropout.py:57(forward)
[1,1]<stdout>:     3315    0.001    0.000    0.001    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,1]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:69(__exit__)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,1]<stdout>:        6    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,1]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:      510    0.001    0.000    0.002    0.000 _VF.py:13(__getattr__)
[1,1]<stdout>:      255    0.001    0.000    0.025    0.000 dataloader.py:1010(_process_data)
[1,1]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,1]<stdout>:     2295    0.001    0.000    0.001    0.000 _overrides.py:792(<genexpr>)
[1,1]<stdout>:      875    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 util.py:221(impl)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:246(__enter__)
[1,1]<stdout>:      256    0.001    0.000    0.002    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,1]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,1]<stdout>:      601    0.001    0.000    0.021    0.000 {built-in method builtins.next}
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:        1    0.001    0.001    0.005    0.005 distributed.py:68(__iter__)
[1,1]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:92(_check_function)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 queue.py:216(_get)
[1,1]<stdout>:      255    0.001    0.000    0.019    0.000 functional.py:1567(log_softmax)
[1,1]<stdout>:      266    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,1]<stdout>:      527    0.000    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:        4    0.000    0.000   12.309    3.077 popen_forkserver.py:41(_launch)
[1,1]<stdout>:      529    0.000    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 queues.py:158(_start_thread)
[1,1]<stdout>:        1    0.000    0.000   12.325   12.325 dataloader.py:690(__init__)
[1,1]<stdout>:      257    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
[1,1]<stdout>:       34    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,1]<stdout>:      263    0.000    0.000    0.020    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:        6    0.000    0.000    0.001    0.000 threading.py:761(__init__)
[1,1]<stdout>:      269    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,1]<stdout>:        1    0.000    0.000  759.863  759.863 {built-in method builtins.exec}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       14    0.000    0.000    0.026    0.002 connection.py:917(wait)
[1,1]<stdout>:      295    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,1]<stdout>:       15    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:285(choice)
[1,1]<stdout>:      273    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 context.py:100(Queue)
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:36(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,1]<stdout>:        1    0.000    0.000  759.863  759.863 <string>:1(<module>)
[1,1]<stdout>:      258    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,1]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,1]<stdout>:        4    0.000    0.000   12.310    3.077 process.py:110(start)
[1,1]<stdout>:      527    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,1]<stdout>:        2    0.000    0.000    0.028    0.014 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:        4    0.000    0.000   12.309    3.077 popen_fork.py:15(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,1]<stdout>:        8    0.000    0.000    4.883    0.610 threading.py:270(wait)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,1]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,1]<stdout>:       14    0.000    0.000    0.026    0.002 selectors.py:402(select)
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 context.py:65(Lock)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:      273    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,1]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,1]<stdout>:        6    0.000    0.000    0.003    0.001 threading.py:834(start)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,1]<stdout>:       11    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,1]<stdout>:       50    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:        4    0.000    0.000    0.026    0.007 popen_fork.py:40(wait)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,1]<stdout>:        4    0.000    0.000    0.026    0.007 process.py:142(join)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:      278    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:        6    0.000    0.000    0.002    0.000 threading.py:540(wait)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:        4    0.000    0.000   12.309    3.077 context.py:288(_Popen)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:390(__getitem__)
[1,1]<stdout>:      104    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,1]<stdout>:        1    0.000    0.000   12.325   12.325 dataloader.py:287(__iter__)
[1,1]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x56268ec899a0}
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:145(register)
[1,1]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7fe3eef8ec10}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,1]<stdout>:       70    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,1]<stdout>:        4    0.000    0.000   12.309    3.077 popen_forkserver.py:33(__init__)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,1]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:383(__getattr__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,1]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:104(acquire)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,1]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,1]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:108(release)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,1]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:        1    0.000    0.000    0.001    0.001 threading.py:979(join)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:this epoch's train spend:759.8764524459839s
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:19<25:35, 19.69s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:19<25:54, 19.93s/it][1,0]<stderr>:test:   3%|▎         | 2/79 [00:20<10:42,  8.35s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:22<03:30,  2.84s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:22<04:14,  3.44s/it][1,1]<stderr>:test:  10%|█         | 8/79 [00:22<02:09,  1.83s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:22<02:41,  2.21s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:25<02:26,  2.09s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:25<01:52,  1.61s/it][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:25<01:35,  1.40s/it][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:27<01:09,  1.05s/it][1,0]<stderr>:test:  18%|█▊        | 14/79 [00:27<00:59,  1.09it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:27<01:25,  1.29s/it][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:29<00:52,  1.19it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:30<00:38,  1.57it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:30<01:00,  1.03it/s][1,1]<stderr>:test:  25%|██▌       | 20/79 [00:30<00:38,  1.52it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:32<00:46,  1.26it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:32<00:48,  1.20it/s][1,1]<stderr>:test:  30%|███       | 24/79 [00:32<00:31,  1.75it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:34<00:37,  1.43it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:35<00:43,  1.24it/s][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:35<00:37,  1.41it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:35<00:26,  1.94it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:37<00:33,  1.51it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:37<00:38,  1.29it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:37<00:35,  1.40it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:39<00:29,  1.55it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:39<00:30,  1.52it/s][1,1]<stderr>:test:  43%|████▎     | 34/79 [00:40<00:29,  1.51it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:41<00:24,  1.71it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:42<00:26,  1.57it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:42<00:27,  1.50it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:44<00:22,  1.69it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:44<00:25,  1.50it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:45<00:22,  1.67it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:47<00:21,  1.58it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:47<00:21,  1.58it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [00:47<00:18,  1.81it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:49<00:18,  1.63it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:49<00:19,  1.51it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:52<00:16,  1.53it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:52<00:17,  1.46it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:54<00:13,  1.58it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:54<00:13,  1.58it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:56<00:10,  1.65it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:57<00:10,  1.67it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:59<00:08,  1.65it/s][1,0]<stderr>:test:  84%|████████▎ | 66/79 [00:59<00:07,  1.79it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:59<00:08,  1.63it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [01:01<00:06,  1.54it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:01<00:06,  1.65it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:04<00:03,  1.63it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [01:04<00:03,  1.53it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:06<00:01,  1.62it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:06<00:00,  1.18it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:07<00:01,  1.54it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:07<00:00,  1.18it/s][1,0]<stdout>:
[1,0]<stdout>:[acc/test_top1] = 0.530000
[1,0]<stdout>:[acc/test_top5] = 2.280000
[1,0]<stdout>:[acc/test_top1_best] = 0.530000
[1,1]<stdout>:spend all time:759.8764524459839s
[1,0]<stdout>:[save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints
[1,0]<stdout>:spend all time:758.7512054443359s
[1,1]<stdout>:Running your script with the autograd profiler...
[1,0]<stdout>:Running your script with the autograd profiler...
[1,0]<stdout>:==> loading configs from ['configs/imagenet/vgg16_bn.py', 'configs/methods/wm0.py', 'configs/methods/fp16.py', 'configs/methods/int32.py']
[1,0]<stdout>:[train.save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:[seed] = 42
[1,0]<stdout>:[data]
[1,0]<stdout>:  [num_threads_per_worker] = 4
[1,0]<stdout>:[train]
[1,0]<stdout>:  [dgc] = False
[1,0]<stdout>:  [compression]
[1,0]<stdout>:    [func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:    [compress_ratio] = 0.05
[1,0]<stdout>:    [sample_ratio] = 0.01
[1,0]<stdout>:    [strided_sample] = True
[1,0]<stdout>:    [compress_upper_bound] = 1.3
[1,0]<stdout>:    [compress_lower_bound] = 0.8
[1,0]<stdout>:    [max_adaptation_iters] = 10
[1,0]<stdout>:    [resample] = True
[1,0]<stdout>:    [memory]
[1,0]<stdout>:      [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:      [momentum] = 0.9
[1,0]<stdout>:    [warmup_epochs] = 0
[1,0]<stdout>:    [fp16_values] = True
[1,0]<stdout>:    [int32_indices] = True
[1,0]<stdout>:  [criterion]
[1,0]<stdout>:    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
[1,0]<stdout>:  [optimizer]
[1,0]<stdout>:    [func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:    [momentum] = 0.9
[1,0]<stdout>:    [lr] = 0.025
[1,0]<stdout>:    [weight_decay] = 5e-05
[1,0]<stdout>:  [schedule_lr_per_epoch] = True
[1,0]<stdout>:  [warmup_lr_epochs] = 5
[1,0]<stdout>:  [metric] = acc/test_top1
[1,0]<stdout>:  [meters]
[1,0]<stdout>:    [acc/{}_top1]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 1
[1,0]<stdout>:    [acc/{}_top5]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 5
[1,0]<stdout>:  [optimize_bn_separately] = False
[1,0]<stdout>:  [num_epochs] = 1
[1,0]<stdout>:  [batch_size] = 64
[1,0]<stdout>:  [scheduler]
[1,0]<stdout>:    [func] = <class 'torch.optim.lr_scheduler.MultiStepLR'>
[1,0]<stdout>:    [milestones] = [25, 55, 75]
[1,0]<stdout>:    [gamma] = 0.1
[1,0]<stdout>:  [topk] = True
[1,0]<stdout>:  [fp16] = False
[1,0]<stdout>:  [powersgd] = False
[1,0]<stdout>:  [sign] = False
[1,0]<stdout>:  [efsign] = False
[1,0]<stdout>:  [natural] = False
[1,0]<stdout>:  [onebit] = False
[1,0]<stdout>:  [qsgd] = False
[1,0]<stdout>:  [randomk] = False
[1,0]<stdout>:  [signum] = False
[1,0]<stdout>:  [terngrad] = False
[1,0]<stdout>:  [num_batches_per_step] = 1
[1,0]<stdout>:  [save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:  [checkpoint_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/e{epoch}-r0.pth
[1,0]<stdout>:  [latest_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/latest-r0.pth
[1,0]<stdout>:  [best_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/best-r0.pth
[1,0]<stdout>:  [base_lr] = 0.0125
[1,0]<stdout>:[dataset]
[1,0]<stdout>:  [func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:  [root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [image_size] = 224
[1,0]<stdout>:[model]
[1,0]<stdout>:  [func] = <function vgg16_bn at 0x7f9020ddeb80>
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [init_weights] = True
[1,0]<stdout>:[device] = cuda
[1,0]<stdout>:
[1,0]<stdout>:==> creating model "[func] = <function vgg16_bn at 0x7f9020ddeb80>
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[init_weights] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> creating dataset "[func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:[root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[image_size] = 224"
[1,0]<stdout>:
[1,0]<stdout>:==> loading dataset "{'num_workers': 4, 'pin_memory': True, 'multiprocessing_context': 'forkserver'}""
[1,0]<stdout>:
[1,0]<stdout>:==> creating optimizer "[func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:[momentum] = 0.9
[1,0]<stdout>:[lr] = 0.05
[1,0]<stdout>:[weight_decay] = 5e-05"
[1,0]<stdout>:
[1,0]<stdout>:==> creating compression "[func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:[compress_ratio] = 0.05
[1,0]<stdout>:[sample_ratio] = 0.01
[1,0]<stdout>:[strided_sample] = True
[1,0]<stdout>:[compress_upper_bound] = 1.3
[1,0]<stdout>:[compress_lower_bound] = 0.8
[1,0]<stdout>:[max_adaptation_iters] = 10
[1,0]<stdout>:[resample] = True
[1,0]<stdout>:[memory]
[1,0]<stdout>:  [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:  [momentum] = 0.9
[1,0]<stdout>:[warmup_epochs] = 0
[1,0]<stdout>:[fp16_values] = True
[1,0]<stdout>:[int32_indices] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> initializing topk compression
[1,0]<stdout>:
[1,0]<stdout>:==> train from scratch
[1,0]<stdout>:
[1,0]<stdout>:==> broadcasting paramters and optimizer state
[1,1]<stdout>:before evaluate
[1,0]<stdout>:before evaluate
[1,0]<stderr>:
[1,1]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stderr>:test:   1%|▏         | 1/79 [00:16<21:09, 16.28s/it][1,1]<stderr>:test:   3%|▎         | 2/79 [00:16<08:44,  6.81s/it][1,0]<stderr>:test:   1%|▏         | 1/79 [00:16<21:28, 16.51s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:18<02:55,  2.38s/it][1,1]<stderr>:test:   8%|▊         | 6/79 [00:18<02:12,  1.82s/it][1,1]<stderr>:test:  10%|█         | 8/79 [00:18<01:17,  1.09s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:18<03:36,  2.93s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:20<01:23,  1.20s/it][1,1]<stderr>:test:  13%|█▎        | 10/79 [00:20<01:04,  1.07it/s][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:20<00:55,  1.23it/s][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:20<01:53,  1.63s/it][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:22<00:49,  1.33it/s][1,1]<stderr>:test:  18%|█▊        | 14/79 [00:22<00:47,  1.37it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:23<01:15,  1.15s/it][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:23<00:32,  1.89it/s][1,1]<stderr>:test:  23%|██▎       | 18/79 [00:24<00:35,  1.72it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:25<00:55,  1.12it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:26<00:35,  1.61it/s][1,1]<stderr>:test:  28%|██▊       | 22/79 [00:27<00:34,  1.66it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:27<00:45,  1.26it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:29<00:33,  1.59it/s][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:29<00:28,  1.85it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:29<00:21,  2.39it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:29<00:39,  1.38it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:31<00:32,  1.56it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:31<00:26,  1.85it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:31<00:31,  1.56it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:33<00:25,  1.80it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:33<00:26,  1.71it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:34<00:21,  1.99it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:35<00:19,  2.12it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:35<00:16,  2.43it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:35<00:23,  1.78it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:37<00:21,  1.74it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:37<00:18,  1.99it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:37<00:16,  2.24it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:37<00:20,  1.84it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:39<00:20,  1.63it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [00:39<00:14,  2.20it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:39<00:18,  1.82it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:41<00:18,  1.59it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [00:42<00:14,  1.87it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:42<00:17,  1.69it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:43<00:13,  1.90it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [00:43<00:12,  2.03it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:44<00:13,  1.83it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:44<00:15,  1.70it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:45<00:14,  1.54it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [00:46<00:11,  1.80it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [00:46<00:12,  1.63it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:47<00:12,  1.71it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:48<00:11,  1.60it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [00:48<00:08,  1.96it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [00:49<00:09,  1.75it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:49<00:10,  1.70it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:50<00:08,  1.70it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [00:50<00:07,  1.68it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [00:51<00:06,  1.81it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:52<00:08,  1.67it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [00:52<00:06,  1.65it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [00:54<00:07,  1.25it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [00:54<00:05,  1.53it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [00:54<00:05,  1.67it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [00:55<00:03,  1.96it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [00:56<00:03,  1.38it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [00:56<00:03,  1.71it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [00:56<00:02,  1.66it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [00:57<00:00,  2.06it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [00:58<00:01,  1.79it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [00:58<00:00,  1.41it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [00:58<00:00,  1.34it/s][1,0]<stderr>:test:  99%|█████████▊| 78/79 [00:59<00:00,  1.88it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [00:59<00:00,  1.34it/s][1,1]<stdout>:after evaluate
[1,0]<stdout>:after evaluate
[1,0]<stdout>:[acc/test_top1] = 0.060000
[1,0]<stdout>:[acc/test_top5] = 0.560000
[1,1]<stderr>:
[1,0]<stdout>:
[1,0]<stdout>:==> training epoch 0/1[1,0]<stdout>:
[1,0]<stderr>:
[1,0]<stderr>:train:   0% 0/255 [00:00<?, ?it/s][1,0]<stderr>:train:   0% 1/255 [00:19<1:23:18, 19.68s/it][1,0]<stderr>:train:   1% 2/255 [00:22<41:21,  9.81s/it]  [1,0]<stderr>:train:   1% 3/255 [00:25<27:51,  6.63s/it][1,0]<stderr>:train:   2% 4/255 [00:28<21:31,  5.15s/it][1,0]<stderr>:train:   2% 5/255 [00:31<18:06,  4.35s/it][1,0]<stderr>:train:   2% 6/255 [00:34<16:03,  3.87s/it][1,0]<stderr>:train:   3% 7/255 [00:37<14:43,  3.56s/it][1,0]<stderr>:train:   3% 8/255 [00:40<13:51,  3.37s/it][1,0]<stderr>:train:   4% 9/255 [00:42<13:10,  3.21s/it][1,0]<stderr>:train:   4% 10/255 [00:45<12:45,  3.12s/it][1,0]<stderr>:train:   4% 11/255 [00:48<12:26,  3.06s/it][1,0]<stderr>:train:   5% 12/255 [00:51<12:14,  3.02s/it][1,0]<stderr>:train:   5% 13/255 [00:54<12:05,  3.00s/it][1,0]<stderr>:train:   5% 14/255 [00:57<11:56,  2.97s/it][1,0]<stderr>:train:   6% 15/255 [01:00<11:49,  2.96s/it][1,0]<stderr>:train:   6% 16/255 [01:03<11:41,  2.94s/it][1,0]<stderr>:train:   7% 17/255 [01:06<11:37,  2.93s/it][1,0]<stderr>:train:   7% 18/255 [01:09<11:28,  2.90s/it][1,0]<stderr>:train:   7% 19/255 [01:12<11:23,  2.90s/it][1,0]<stderr>:train:   8% 20/255 [01:14<11:24,  2.91s/it][1,0]<stderr>:train:   8% 21/255 [01:17<11:24,  2.92s/it][1,0]<stderr>:train:   9% 22/255 [01:20<11:22,  2.93s/it][1,0]<stderr>:train:   9% 23/255 [01:23<11:13,  2.90s/it][1,0]<stderr>:train:   9% 24/255 [01:26<11:10,  2.90s/it][1,0]<stderr>:train:  10% 25/255 [01:29<11:12,  2.93s/it][1,0]<stderr>:train:  10% 26/255 [01:32<11:07,  2.91s/it][1,0]<stderr>:train:  11% 27/255 [01:35<11:11,  2.94s/it][1,0]<stderr>:train:  11% 28/255 [01:38<11:06,  2.94s/it][1,0]<stderr>:train:  11% 29/255 [01:41<10:58,  2.91s/it][1,0]<stderr>:train:  12% 30/255 [01:44<10:55,  2.92s/it][1,0]<stderr>:train:  12% 31/255 [01:47<10:48,  2.89s/it][1,0]<stderr>:train:  13% 32/255 [01:49<10:48,  2.91s/it][1,0]<stderr>:train:  13% 33/255 [01:52<10:45,  2.91s/it][1,0]<stderr>:train:  13% 34/255 [01:55<10:45,  2.92s/it][1,0]<stderr>:train:  14% 35/255 [01:58<10:40,  2.91s/it][1,0]<stderr>:train:  14% 36/255 [02:01<10:34,  2.90s/it][1,0]<stderr>:train:  15% 37/255 [02:04<10:34,  2.91s/it][1,0]<stderr>:train:  15% 38/255 [02:07<10:32,  2.91s/it][1,0]<stderr>:train:  15% 39/255 [02:10<10:24,  2.89s/it][1,0]<stderr>:train:  16% 40/255 [02:13<10:19,  2.88s/it][1,0]<stderr>:train:  16% 41/255 [02:15<10:15,  2.88s/it][1,0]<stderr>:train:  16% 42/255 [02:18<10:18,  2.90s/it][1,0]<stderr>:train:  17% 43/255 [02:21<10:11,  2.88s/it][1,0]<stderr>:train:  17% 44/255 [02:24<10:08,  2.88s/it][1,0]<stderr>:train:  18% 45/255 [02:27<10:02,  2.87s/it][1,0]<stderr>:train:  18% 46/255 [02:30<10:04,  2.89s/it][1,0]<stderr>:train:  18% 47/255 [02:33<10:01,  2.89s/it][1,0]<stderr>:train:  19% 48/255 [02:36<10:03,  2.92s/it][1,0]<stderr>:train:  19% 49/255 [02:39<10:02,  2.92s/it][1,0]<stderr>:train:  20% 50/255 [02:42<09:53,  2.89s/it][1,0]<stderr>:train:  20% 51/255 [02:45<09:53,  2.91s/it][1,0]<stderr>:train:  20% 52/255 [02:47<09:53,  2.92s/it][1,0]<stderr>:train:  21% 53/255 [02:50<09:49,  2.92s/it][1,0]<stderr>:train:  21% 54/255 [02:53<09:47,  2.92s/it][1,0]<stderr>:train:  22% 55/255 [02:56<09:45,  2.93s/it][1,0]<stderr>:train:  22% 56/255 [02:59<09:43,  2.93s/it][1,0]<stderr>:train:  22% 57/255 [03:02<09:42,  2.94s/it][1,0]<stderr>:train:  23% 58/255 [03:05<09:38,  2.94s/it][1,0]<stderr>:train:  23% 59/255 [03:08<09:33,  2.93s/it][1,0]<stderr>:train:  24% 60/255 [03:11<09:32,  2.94s/it][1,0]<stderr>:train:  24% 61/255 [03:14<09:27,  2.93s/it][1,0]<stderr>:train:  24% 62/255 [03:17<09:24,  2.92s/it][1,0]<stderr>:train:  25% 63/255 [03:20<09:22,  2.93s/it][1,0]<stderr>:train:  25% 64/255 [03:23<09:16,  2.91s/it][1,0]<stderr>:train:  25% 65/255 [03:25<09:11,  2.90s/it][1,0]<stderr>:train:  26% 66/255 [03:28<09:09,  2.91s/it][1,0]<stderr>:train:  26% 67/255 [03:31<09:13,  2.94s/it][1,0]<stderr>:train:  27% 68/255 [03:34<09:10,  2.94s/it][1,0]<stderr>:train:  27% 69/255 [03:37<09:08,  2.95s/it][1,0]<stderr>:train:  27% 70/255 [03:40<09:08,  2.97s/it][1,0]<stderr>:train:  28% 71/255 [03:43<09:00,  2.94s/it][1,0]<stderr>:train:  28% 72/255 [03:46<08:56,  2.93s/it][1,0]<stderr>:train:  29% 73/255 [03:49<08:52,  2.92s/it][1,0]<stderr>:train:  29% 74/255 [03:52<08:48,  2.92s/it][1,0]<stderr>:train:  29% 75/255 [03:55<08:39,  2.89s/it][1,0]<stderr>:train:  30% 76/255 [03:58<08:42,  2.92s/it][1,0]<stderr>:train:  30% 77/255 [04:01<08:41,  2.93s/it][1,0]<stderr>:train:  31% 78/255 [04:03<08:30,  2.88s/it][1,0]<stderr>:train:  31% 79/255 [04:06<08:29,  2.89s/it][1,0]<stderr>:train:  31% 80/255 [04:09<08:31,  2.92s/it][1,0]<stderr>:train:  32% 81/255 [04:12<08:30,  2.93s/it][1,0]<stderr>:train:  32% 82/255 [04:15<08:25,  2.92s/it][1,0]<stderr>:train:  33% 83/255 [04:18<08:22,  2.92s/it][1,0]<stderr>:train:  33% 84/255 [04:21<08:23,  2.94s/it][1,0]<stderr>:train:  33% 85/255 [04:24<08:16,  2.92s/it][1,0]<stderr>:train:  34% 86/255 [04:27<08:11,  2.91s/it][1,0]<stderr>:train:  34% 87/255 [04:30<08:14,  2.94s/it][1,0]<stderr>:train:  35% 88/255 [04:33<08:08,  2.93s/it][1,0]<stderr>:train:  35% 89/255 [04:36<08:03,  2.91s/it][1,0]<stderr>:train:  35% 90/255 [04:39<07:58,  2.90s/it][1,0]<stderr>:train:  36% 91/255 [04:42<07:57,  2.91s/it][1,0]<stderr>:train:  36% 92/255 [04:44<07:56,  2.93s/it][1,0]<stderr>:train:  36% 93/255 [04:47<07:51,  2.91s/it][1,0]<stderr>:train:  37% 94/255 [04:50<07:53,  2.94s/it][1,0]<stderr>:train:  37% 95/255 [04:53<07:47,  2.92s/it][1,0]<stderr>:train:  38% 96/255 [04:56<07:41,  2.91s/it][1,0]<stderr>:train:  38% 97/255 [04:59<07:43,  2.93s/it][1,0]<stderr>:train:  38% 98/255 [05:02<07:36,  2.91s/it][1,0]<stderr>:train:  39% 99/255 [05:05<07:37,  2.93s/it][1,0]<stderr>:train:  39% 100/255 [05:08<07:31,  2.91s/it][1,0]<stderr>:train:  40% 101/255 [05:11<07:24,  2.89s/it][1,0]<stderr>:train:  40% 102/255 [05:14<07:26,  2.92s/it][1,0]<stderr>:train:  40% 103/255 [05:17<07:22,  2.91s/it][1,0]<stderr>:train:  41% 104/255 [05:19<07:22,  2.93s/it][1,0]<stderr>:train:  41% 105/255 [05:22<07:20,  2.93s/it][1,0]<stderr>:train:  42% 106/255 [05:25<07:18,  2.95s/it][1,0]<stderr>:train:  42% 107/255 [05:28<07:11,  2.91s/it][1,0]<stderr>:train:  42% 108/255 [05:31<07:09,  2.92s/it][1,0]<stderr>:train:  43% 109/255 [05:34<07:05,  2.91s/it][1,0]<stderr>:train:  43% 110/255 [05:37<07:04,  2.93s/it][1,0]<stderr>:train:  44% 111/255 [05:40<07:00,  2.92s/it][1,0]<stderr>:train:  44% 112/255 [05:43<06:58,  2.93s/it][1,0]<stderr>:train:  44% 113/255 [05:46<06:52,  2.91s/it][1,0]<stderr>:train:  45% 114/255 [05:49<06:53,  2.93s/it][1,0]<stderr>:train:  45% 115/255 [05:52<06:49,  2.92s/it][1,0]<stderr>:train:  45% 116/255 [05:54<06:42,  2.89s/it][1,0]<stderr>:train:  46% 117/255 [05:57<06:41,  2.91s/it][1,0]<stderr>:train:  46% 118/255 [06:00<06:37,  2.90s/it][1,0]<stderr>:train:  47% 119/255 [06:03<06:34,  2.90s/it][1,0]<stderr>:train:  47% 120/255 [06:06<06:31,  2.90s/it][1,0]<stderr>:train:  47% 121/255 [06:09<06:25,  2.88s/it][1,0]<stderr>:train:  48% 122/255 [06:12<06:22,  2.87s/it][1,0]<stderr>:train:  48% 123/255 [06:15<06:19,  2.87s/it][1,0]<stderr>:train:  49% 124/255 [06:18<06:17,  2.88s/it][1,0]<stderr>:train:  49% 125/255 [06:20<06:14,  2.88s/it][1,0]<stderr>:train:  49% 126/255 [06:23<06:09,  2.86s/it][1,0]<stderr>:train:  50% 127/255 [06:26<06:09,  2.89s/it][1,0]<stderr>:train:  50% 128/255 [06:29<06:05,  2.87s/it][1,0]<stderr>:train:  51% 129/255 [06:32<06:00,  2.86s/it][1,0]<stderr>:train:  51% 130/255 [06:35<05:59,  2.88s/it][1,0]<stderr>:train:  51% 131/255 [06:38<05:58,  2.89s/it][1,0]<stderr>:train:  52% 132/255 [06:41<05:59,  2.92s/it][1,0]<stderr>:train:  52% 133/255 [06:44<05:55,  2.91s/it][1,0]<stderr>:train:  53% 134/255 [06:47<05:54,  2.93s/it][1,0]<stderr>:train:  53% 135/255 [06:49<05:48,  2.90s/it][1,0]<stderr>:train:  53% 136/255 [06:52<05:44,  2.90s/it][1,0]<stderr>:train:  54% 137/255 [06:55<05:44,  2.92s/it][1,0]<stderr>:train:  54% 138/255 [06:58<05:37,  2.89s/it][1,0]<stderr>:train:  55% 139/255 [07:01<05:32,  2.87s/it][1,0]<stderr>:train:  55% 140/255 [07:04<05:29,  2.87s/it][1,0]<stderr>:train:  55% 141/255 [07:07<05:30,  2.90s/it][1,0]<stderr>:train:  56% 142/255 [07:10<05:24,  2.87s/it][1,0]<stderr>:train:  56% 143/255 [07:12<05:19,  2.86s/it][1,0]<stderr>:train:  56% 144/255 [07:15<05:15,  2.85s/it][1,0]<stderr>:train:  57% 145/255 [07:18<05:12,  2.84s/it][1,0]<stderr>:train:  57% 146/255 [07:21<05:08,  2.83s/it][1,0]<stderr>:train:  58% 147/255 [07:24<05:04,  2.82s/it][1,0]<stderr>:train:  58% 148/255 [07:27<05:05,  2.86s/it][1,0]<stderr>:train:  58% 149/255 [07:29<05:04,  2.87s/it][1,0]<stderr>:train:  59% 150/255 [07:32<04:59,  2.85s/it][1,0]<stderr>:train:  59% 151/255 [07:35<04:55,  2.84s/it][1,0]<stderr>:train:  60% 152/255 [07:38<04:51,  2.83s/it][1,0]<stderr>:train:  60% 153/255 [07:41<04:48,  2.83s/it][1,0]<stderr>:train:  60% 154/255 [07:44<04:45,  2.82s/it][1,0]<stderr>:train:  61% 155/255 [07:46<04:42,  2.82s/it][1,0]<stderr>:train:  61% 156/255 [07:49<04:39,  2.82s/it][1,0]<stderr>:train:  62% 157/255 [07:52<04:36,  2.82s/it][1,0]<stderr>:train:  62% 158/255 [07:55<04:33,  2.82s/it][1,0]<stderr>:train:  62% 159/255 [07:58<04:30,  2.82s/it][1,0]<stderr>:train:  63% 160/255 [08:00<04:27,  2.82s/it][1,0]<stderr>:train:  63% 161/255 [08:03<04:24,  2.82s/it][1,0]<stderr>:train:  64% 162/255 [08:06<04:21,  2.82s/it][1,0]<stderr>:train:  64% 163/255 [08:09<04:19,  2.82s/it][1,0]<stderr>:train:  64% 164/255 [08:12<04:16,  2.82s/it][1,0]<stderr>:train:  65% 165/255 [08:14<04:13,  2.82s/it][1,0]<stderr>:train:  65% 166/255 [08:17<04:10,  2.82s/it][1,0]<stderr>:train:  65% 167/255 [08:20<04:07,  2.82s/it][1,0]<stderr>:train:  66% 168/255 [08:23<04:04,  2.81s/it][1,0]<stderr>:train:  66% 169/255 [08:26<04:02,  2.82s/it][1,0]<stderr>:train:  67% 170/255 [08:29<03:59,  2.81s/it][1,0]<stderr>:train:  67% 171/255 [08:31<03:56,  2.82s/it][1,0]<stderr>:train:  67% 172/255 [08:34<03:53,  2.82s/it][1,0]<stderr>:train:  68% 173/255 [08:37<03:50,  2.82s/it][1,0]<stderr>:train:  68% 174/255 [08:40<03:48,  2.82s/it][1,0]<stderr>:train:  69% 175/255 [08:43<03:45,  2.82s/it][1,0]<stderr>:train:  69% 176/255 [08:45<03:42,  2.81s/it][1,0]<stderr>:train:  69% 177/255 [08:48<03:39,  2.81s/it][1,0]<stderr>:train:  70% 178/255 [08:51<03:36,  2.82s/it][1,0]<stderr>:train:  70% 179/255 [08:54<03:34,  2.82s/it][1,0]<stderr>:train:  71% 180/255 [08:57<03:31,  2.82s/it][1,0]<stderr>:train:  71% 181/255 [09:00<03:28,  2.82s/it][1,0]<stderr>:train:  71% 182/255 [09:02<03:25,  2.82s/it][1,0]<stderr>:train:  72% 183/255 [09:05<03:23,  2.82s/it][1,0]<stderr>:train:  72% 184/255 [09:08<03:19,  2.82s/it][1,0]<stderr>:train:  73% 185/255 [09:11<03:17,  2.82s/it][1,0]<stderr>:train:  73% 186/255 [09:14<03:14,  2.82s/it][1,0]<stderr>:train:  73% 187/255 [09:16<03:11,  2.82s/it][1,0]<stderr>:train:  74% 188/255 [09:19<03:08,  2.82s/it][1,0]<stderr>:train:  74% 189/255 [09:22<03:05,  2.81s/it][1,0]<stderr>:train:  75% 190/255 [09:25<03:02,  2.81s/it][1,0]<stderr>:train:  75% 191/255 [09:28<03:00,  2.82s/it][1,0]<stderr>:train:  75% 192/255 [09:31<02:57,  2.81s/it][1,0]<stderr>:train:  76% 193/255 [09:33<02:54,  2.82s/it][1,0]<stderr>:train:  76% 194/255 [09:36<02:51,  2.82s/it][1,0]<stderr>:train:  76% 195/255 [09:39<02:49,  2.82s/it][1,0]<stderr>:train:  77% 196/255 [09:42<02:46,  2.82s/it][1,0]<stderr>:train:  77% 197/255 [09:45<02:43,  2.82s/it][1,0]<stderr>:train:  78% 198/255 [09:47<02:40,  2.82s/it][1,0]<stderr>:train:  78% 199/255 [09:50<02:37,  2.82s/it][1,0]<stderr>:train:  78% 200/255 [09:53<02:34,  2.81s/it][1,0]<stderr>:train:  79% 201/255 [09:56<02:31,  2.81s/it][1,0]<stderr>:train:  79% 202/255 [09:59<02:28,  2.81s/it][1,0]<stderr>:train:  80% 203/255 [10:02<02:26,  2.81s/it][1,0]<stderr>:train:  80% 204/255 [10:04<02:23,  2.81s/it][1,0]<stderr>:train:  80% 205/255 [10:07<02:20,  2.81s/it][1,0]<stderr>:train:  81% 206/255 [10:10<02:18,  2.82s/it][1,0]<stderr>:train:  81% 207/255 [10:13<02:15,  2.82s/it][1,0]<stderr>:train:  82% 208/255 [10:16<02:12,  2.82s/it][1,0]<stderr>:train:  82% 209/255 [10:18<02:09,  2.82s/it][1,0]<stderr>:train:  82% 210/255 [10:21<02:06,  2.82s/it][1,0]<stderr>:train:  83% 211/255 [10:24<02:03,  2.82s/it][1,0]<stderr>:train:  83% 212/255 [10:27<02:01,  2.82s/it][1,0]<stderr>:train:  84% 213/255 [10:30<01:58,  2.82s/it][1,0]<stderr>:train:  84% 214/255 [10:33<01:55,  2.82s/it][1,0]<stderr>:train:  84% 215/255 [10:35<01:52,  2.82s/it][1,0]<stderr>:train:  85% 216/255 [10:38<01:49,  2.82s/it][1,0]<stderr>:train:  85% 217/255 [10:41<01:46,  2.82s/it][1,0]<stderr>:train:  85% 218/255 [10:44<01:44,  2.82s/it][1,0]<stderr>:train:  86% 219/255 [10:47<01:41,  2.82s/it][1,0]<stderr>:train:  86% 220/255 [10:49<01:38,  2.82s/it][1,0]<stderr>:train:  87% 221/255 [10:52<01:35,  2.81s/it][1,0]<stderr>:train:  87% 222/255 [10:55<01:32,  2.82s/it][1,0]<stderr>:train:  87% 223/255 [10:58<01:30,  2.82s/it][1,0]<stderr>:train:  88% 224/255 [11:01<01:27,  2.82s/it][1,0]<stderr>:train:  88% 225/255 [11:03<01:24,  2.81s/it][1,0]<stderr>:train:  89% 226/255 [11:06<01:21,  2.81s/it][1,0]<stderr>:train:  89% 227/255 [11:09<01:18,  2.82s/it][1,0]<stderr>:train:  89% 228/255 [11:12<01:16,  2.82s/it][1,0]<stderr>:train:  90% 229/255 [11:15<01:13,  2.82s/it][1,0]<stderr>:train:  90% 230/255 [11:18<01:10,  2.82s/it][1,0]<stderr>:train:  91% 231/255 [11:20<01:07,  2.82s/it][1,0]<stderr>:train:  91% 232/255 [11:23<01:04,  2.82s/it][1,0]<stderr>:train:  91% 233/255 [11:26<01:01,  2.82s/it][1,0]<stderr>:train:  92% 234/255 [11:29<00:59,  2.82s/it][1,0]<stderr>:train:  92% 235/255 [11:32<00:56,  2.82s/it][1,0]<stderr>:train:  93% 236/255 [11:34<00:53,  2.82s/it][1,0]<stderr>:train:  93% 237/255 [11:37<00:50,  2.82s/it][1,0]<stderr>:train:  93% 238/255 [11:40<00:47,  2.82s/it][1,0]<stderr>:train:  94% 239/255 [11:43<00:45,  2.82s/it][1,0]<stderr>:train:  94% 240/255 [11:46<00:42,  2.82s/it][1,0]<stderr>:train:  95% 241/255 [11:49<00:39,  2.82s/it][1,0]<stderr>:train:  95% 242/255 [11:51<00:36,  2.82s/it][1,0]<stderr>:train:  95% 243/255 [11:54<00:33,  2.82s/it][1,0]<stderr>:train:  96% 244/255 [11:57<00:31,  2.82s/it][1,0]<stderr>:train:  96% 245/255 [12:00<00:28,  2.82s/it][1,0]<stderr>:train:  96% 246/255 [12:03<00:25,  2.82s/it][1,0]<stderr>:train:  97% 247/255 [12:05<00:22,  2.82s/it][1,0]<stderr>:train:  97% 248/255 [12:08<00:19,  2.82s/it][1,0]<stderr>:train:  98% 249/255 [12:11<00:16,  2.82s/it][1,0]<stderr>:train:  98% 250/255 [12:14<00:14,  2.82s/it][1,0]<stderr>:train:  98% 251/255 [12:17<00:11,  2.82s/it][1,0]<stderr>:train:  99% 252/255 [12:20<00:08,  2.82s/it][1,0]<stderr>:train:  99% 253/255 [12:22<00:05,  2.82s/it][1,0]<stderr>:train: 100% 254/255 [12:25<00:02,  2.82s/it][1,0]<stderr>:train: 100% 255/255 [12:27<00:00,  2.62s/it][1,1]<stdout>:         1137819 function calls (1123992 primitive calls) in 747.902 seconds
[1,1]<stdout>:
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:      255  573.138    2.248  573.138    2.248 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:      511  137.834    0.270  137.834    0.270 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29835   14.321    0.000   14.321    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:        4   12.326    3.082   12.326    3.082 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:      817    4.249    0.005    4.249    0.005 {method 'acquire' of '_thread.lock' objects}
[1,1]<stdout>:    29580    0.555    0.000    0.555    0.000 {method 'scatter_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.548    0.002   17.092    0.067 optimizer.py:232(synchronize)
[1,1]<stdout>:    29580    0.541    0.000    0.541    0.000 {built-in method zeros}
[1,1]<stdout>:    14790    0.479    0.000    0.479    0.000 {built-in method builtins.sum}
[1,1]<stdout>:     3315    0.466    0.000    0.466    0.000 {built-in method conv2d}
[1,1]<stdout>:    29580    0.339    0.000    0.339    0.000 {method 'split_with_sizes' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29580    0.329    0.000    0.329    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.299    0.000    0.299    0.000 {built-in method batch_norm}
[1,1]<stdout>:    29580    0.259    0.000    0.259    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    15045    0.193    0.000    0.193    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29835    0.144    0.000   14.470    0.000 mpi_ops.py:928(synchronize)
[1,1]<stdout>:    14790    0.139    0.000    0.139    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.126    0.000    0.510    0.000 batchnorm.py:99(forward)
[1,1]<stdout>:     3825    0.104    0.000    0.104    0.000 {built-in method relu_}
[1,1]<stdout>:14280/510    0.102    0.000    1.613    0.003 module.py:710(_call_impl)
[1,1]<stdout>:      765    0.099    0.000    0.099    0.000 {built-in method addmm}
[1,1]<stdout>:    14790    0.097    0.000    0.097    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.086    0.000    0.086    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.080    0.080  747.902  747.902 train.py:338(train)
[1,1]<stdout>:    88740    0.074    0.000    0.084    0.000 tensor.py:725(grad)
[1,1]<stdout>:     1275    0.073    0.000    0.073    0.000 {built-in method max_pool2d}
[1,1]<stdout>:        8    0.073    0.009    0.073    0.009 {method 'dump' of '_pickle.Pickler' objects}
[1,1]<stdout>:    29580    0.056    0.000    1.152    0.000 compression.py:268(desparsify)
[1,1]<stdout>:      255    0.047    0.000    0.516    0.002 sgd.py:75(step)
[1,1]<stdout>:    29580    0.036    0.000    0.382    0.000 tensor.py:367(split)
[1,1]<stdout>:    14790    0.031    0.000    0.031    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      510    0.029    0.000    0.029    0.000 {built-in method dropout}
[1,1]<stdout>:    15046    0.026    0.000    0.026    0.000 basics.py:183(size)
[1,1]<stdout>:      510    0.026    0.000    1.498    0.003 container.py:115(forward)
[1,1]<stdout>:      255    0.025    0.000    0.025    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:    29070    0.025    0.000    0.025    0.000 module.py:758(__getattr__)
[1,1]<stdout>:    29580    0.025    0.000    1.505    0.000 compression.py:252(decompress)
[1,1]<stdout>:      255    0.025    0.000    0.227    0.001 optimizer.py:166(zero_grad)
[1,1]<stdout>:     3370    0.024    0.000    0.028    0.000 module.py:774(__setattr__)
[1,1]<stdout>:      255    0.021    0.000    0.021    0.000 {built-in method torch._C._nn.nll_loss}
[1,1]<stdout>:     3315    0.019    0.000    0.337    0.000 functional.py:1998(batch_norm)
[1,1]<stdout>:      255    0.017    0.000    0.017    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       14    0.017    0.001    0.017    0.001 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:    14280    0.012    0.000    0.012    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:    85070    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:     3315    0.012    0.000    0.479    0.000 conv.py:410(_conv_forward)
[1,1]<stdout>:    44370    0.011    0.000    0.019    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:    90530    0.011    0.000    0.011    0.000 {built-in method builtins.hasattr}
[1,1]<stdout>:    75733    0.011    0.000    0.011    0.000 {method 'append' of 'list' objects}
[1,1]<stdout>:      765    0.010    0.000    0.010    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      269    0.010    0.000    0.010    0.000 {method 'clear' of 'dict' objects}
[1,1]<stdout>:      255    0.009    0.000    0.009    0.000 {built-in method ones_like}
[1,1]<stdout>:     3315    0.009    0.000    0.010    0.000 functional.py:1980(_verify_batch_size)
[1,1]<stdout>:     3315    0.009    0.000    0.492    0.000 conv.py:418(forward)
[1,1]<stdout>:      255    0.008    0.000    0.514    0.002 {built-in method apply}
[1,1]<stdout>:      256    0.008    0.000    0.017    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:    44399    0.008    0.000    0.008    0.000 {built-in method builtins.id}
[1,1]<stdout>:      255    0.008    0.000   17.624    0.069 optimizer.py:337(step)
[1,1]<stdout>:     3825    0.007    0.000    0.113    0.000 functional.py:1106(relu)
[1,1]<stdout>:      255    0.007    0.000    0.007    0.000 {built-in method tensor}
[1,1]<stdout>:      255    0.007    0.000  573.161    2.248 tensor.py:155(backward)
[1,1]<stdout>:    57630    0.007    0.000    0.007    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:     3825    0.006    0.000    0.119    0.000 activation.py:101(forward)
[1,1]<stdout>:51533/51530    0.006    0.000    0.006    0.000 {built-in method builtins.len}
[1,1]<stdout>:      765    0.006    0.000    0.121    0.000 functional.py:1655(linear)
[1,1]<stdout>:      255    0.006    0.000    0.006    0.000 {built-in method flatten}
[1,1]<stdout>:     4080    0.006    0.000    0.006    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.005    0.000    0.005    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,1]<stdout>:      255    0.005    0.000    0.005    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29841    0.005    0.000    0.005    0.000 {method 'pop' of 'dict' objects}
[1,1]<stdout>:     1275    0.005    0.000    0.084    0.000 pooling.py:156(forward)
[1,1]<stdout>:        8    0.005    0.001    0.078    0.010 reduction.py:58(dump)
[1,1]<stdout>:      255    0.005    0.000    1.550    0.006 vgg.py:42(forward)
[1,1]<stdout>:      255    0.005    0.000  573.154    2.248 __init__.py:57(backward)
[1,1]<stdout>:      255    0.004    0.000   17.628    0.069 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:      510    0.004    0.000    0.035    0.000 functional.py:950(dropout)
[1,1]<stdout>:      256    0.004    0.000    4.306    0.017 dataloader.py:945(_next_data)
[1,1]<stdout>:      255    0.003    0.000    4.254    0.017 queue.py:153(get)
[1,1]<stdout>:      255    0.003    0.000    0.003    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      521    0.003    0.000    0.006    0.000 threading.py:341(notify)
[1,1]<stdout>:      255    0.003    0.000    0.524    0.002 grad_mode.py:12(decorate_context)
[1,1]<stdout>:      255    0.003    0.000    0.026    0.000 functional.py:2158(nll_loss)
[1,1]<stdout>:      255    0.003    0.000    0.505    0.002 mpi_ops.py:191(forward)
[1,0]<stderr>:train: 100% 255/255 [12:27<00:00,  2.93s/it][1,1]<stdout>:     3315    0.003    0.000    0.004    0.000 batchnorm.py:275(_check_input_dim)
[1,1]<stdout>:      255    0.003    0.000    0.012    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:     1275    0.003    0.000    0.079    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:      255    0.003    0.000    0.016    0.000 mpi_ops.py:105(_allreduce_async)
[1,1]<stdout>:        1    0.003    0.003    0.003    0.003 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     1275    0.003    0.000    0.076    0.000 functional.py:564(_max_pool2d)
[1,1]<stdout>:      255    0.003    0.000    0.050    0.000 loss.py:946(forward)
[1,1]<stdout>:      255    0.003    0.000    4.262    0.017 dataloader.py:912(_get_data)
[1,1]<stdout>:      256    0.003    0.000   16.733    0.065 std.py:1159(__iter__)
[1,1]<stdout>:      765    0.002    0.000    0.125    0.000 linear.py:90(forward)
[1,1]<stdout>:      255    0.002    0.000    0.516    0.002 mpi_ops.py:209(allreduce)
[1,1]<stdout>:      263    0.002    0.000    0.029    0.000 dataloader.py:991(_try_put_index)
[1,1]<stdout>:      255    0.002    0.000    0.004    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:     3315    0.002    0.000    0.004    0.000 __init__.py:31(__get__)
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:      255    0.002    0.000    0.004    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:      255    0.002    0.000    0.046    0.000 functional.py:2370(cross_entropy)
[1,1]<stdout>:      260    0.002    0.000    0.010    0.000 queues.py:80(put)
[1,1]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,1]<stdout>:      255    0.002    0.000    0.030    0.000 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:      255    0.002    0.000    0.024    0.000 mpi_ops.py:152(allreduce_async)
[1,1]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.002    0.000    0.229    0.001 optimizer.py:353(zero_grad)
[1,1]<stdout>:      256    0.002    0.000    4.308    0.017 dataloader.py:362(__next__)
[1,1]<stdout>:      255    0.002    0.000    0.032    0.000 pooling.py:1110(forward)
[1,1]<stdout>:      255    0.002    0.000    4.256    0.017 dataloader.py:766(_try_get_data)
[1,1]<stdout>:      270    0.002    0.000    0.002    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,1]<stdout>:      765    0.002    0.000    0.004    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:     2040    0.002    0.000    0.003    0.000 {built-in method builtins.any}
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 basics.py:365(rocm_built)
[1,1]<stdout>:      510    0.001    0.000    0.002    0.000 container.py:107(__iter__)
[1,1]<stdout>:     3315    0.001    0.000    0.001    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,1]<stdout>:      510    0.001    0.000    0.036    0.000 dropout.py:57(forward)
[1,1]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:69(__exit__)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,1]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:     2295    0.001    0.000    0.001    0.000 _overrides.py:792(<genexpr>)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,1]<stdout>:      255    0.001    0.000    0.021    0.000 dataloader.py:1010(_process_data)
[1,1]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,1]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,1]<stdout>:        6    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,1]<stdout>:      510    0.001    0.000    0.001    0.000 _VF.py:13(__getattr__)
[1,1]<stdout>:      875    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:246(__enter__)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 util.py:221(impl)
[1,1]<stdout>:      601    0.001    0.000    0.018    0.000 {built-in method builtins.next}
[1,1]<stdout>:      256    0.001    0.000    0.002    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:      255    0.001    0.000    0.018    0.000 functional.py:1567(log_softmax)
[1,1]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:92(_check_function)
[1,1]<stdout>:        1    0.001    0.001    0.005    0.005 distributed.py:68(__iter__)
[1,1]<stdout>:      266    0.000    0.000    0.000    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,1]<stdout>:        4    0.000    0.000   12.406    3.102 popen_forkserver.py:41(_launch)
[1,1]<stdout>:        1    0.000    0.000   12.422   12.422 dataloader.py:690(__init__)
[1,1]<stdout>:      531    0.000    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
[1,1]<stdout>:      259    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,1]<stdout>:      263    0.000    0.000    0.017    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,1]<stdout>:      295    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,1]<stdout>:       34    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,1]<stdout>:        1    0.000    0.000  747.902  747.902 {built-in method builtins.exec}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:      269    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,1]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,1]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:       14    0.000    0.000    0.017    0.001 connection.py:917(wait)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:158(_start_thread)
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 queues.py:36(__init__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.004    0.001 context.py:100(Queue)
[1,1]<stdout>:       15    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,1]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,1]<stdout>:       10    0.000    0.000    4.248    0.425 threading.py:270(wait)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:      275    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:        4    0.000    0.000   12.407    3.102 process.py:110(start)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,1]<stdout>:      527    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.000    0.000  747.902  747.902 <string>:1(<module>)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,1]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,1]<stdout>:      275    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,1]<stdout>:        4    0.000    0.000   12.406    3.102 popen_fork.py:15(__init__)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,1]<stdout>:        2    0.000    0.000    0.019    0.009 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,1]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,1]<stdout>:       14    0.000    0.000    0.017    0.001 selectors.py:402(select)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,1]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,1]<stdout>:        6    0.000    0.000    0.003    0.000 threading.py:834(start)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,1]<stdout>:      277    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:        6    0.000    0.000    0.002    0.000 threading.py:540(wait)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,1]<stdout>:        4    0.000    0.000   12.406    3.102 context.py:288(_Popen)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:      104    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,1]<stdout>:       11    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:       11    0.000    0.000    0.003    0.000 synchronize.py:161(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.017    0.004 popen_fork.py:40(wait)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,1]<stdout>:        4    0.000    0.000    0.017    0.004 process.py:142(join)
[1,1]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,1]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x56268ec899a0}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,1]<stdout>:       50    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:145(register)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       70    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7fe3eef8ec10}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:       23    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,1]<stdout>:        4    0.000    0.000   12.406    3.102 popen_forkserver.py:33(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,1]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,1]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,1]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,1]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:104(acquire)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:108(release)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,1]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,1]<stdout>:        1    0.000    0.000   12.422   12.422 dataloader.py:287(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:979(join)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:this epoch's train spend:747.9177832603455s
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stdout>:         1184094 function calls (1170267 primitive calls) in 747.910 seconds
[1,0]<stdout>:
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:      255  573.624    2.250  573.624    2.250 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,0]<stdout>:      511  138.425    0.271  138.425    0.271 {method 'item' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29835   12.551    0.000   12.551    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:        4   12.319    3.080   12.319    3.080 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:     1076    4.034    0.004    4.034    0.004 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:    29580    0.583    0.000    0.583    0.000 {method 'scatter_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.583    0.002   15.612    0.061 optimizer.py:232(synchronize)
[1,0]<stdout>:     3315    0.557    0.000    0.557    0.000 {built-in method conv2d}
[1,0]<stdout>:    29580    0.537    0.000    0.537    0.000 {built-in method zeros}
[1,0]<stdout>:    15047    0.490    0.000    0.498    0.000 {built-in method builtins.sum}
[1,0]<stdout>:    29580    0.357    0.000    0.357    0.000 {method 'split_with_sizes' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.352    0.000    0.352    0.000 {built-in method batch_norm}
[1,0]<stdout>:    29580    0.352    0.000    0.352    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29580    0.268    0.000    0.268    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    14790    0.219    0.000    0.219    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    15045    0.215    0.000    0.215    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3315    0.156    0.000    0.617    0.000 batchnorm.py:99(forward)
[1,0]<stdout>:    29835    0.151    0.000   12.707    0.000 mpi_ops.py:928(synchronize)
[1,0]<stdout>:      510    0.146    0.000    0.146    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:14280/510    0.121    0.000    1.924    0.004 module.py:710(_call_impl)
[1,0]<stdout>:     3825    0.114    0.000    0.114    0.000 {built-in method relu_}
[1,0]<stdout>:        1    0.102    0.102  747.910  747.910 train.py:338(train)
[1,0]<stdout>:    14790    0.100    0.000    0.100    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      765    0.097    0.000    0.097    0.000 {built-in method addmm}
[1,0]<stdout>:    88740    0.083    0.000    0.094    0.000 tensor.py:725(grad)
[1,0]<stdout>:     1275    0.081    0.000    0.081    0.000 {built-in method max_pool2d}
[1,0]<stdout>:        8    0.070    0.009    0.071    0.009 {method 'dump' of '_pickle.Pickler' objects}
[1,0]<stdout>:      267    0.068    0.000    0.068    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:    29580    0.059    0.000    1.179    0.000 compression.py:268(desparsify)
[1,0]<stdout>:    14790    0.049    0.000    0.049    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.049    0.000    0.549    0.002 sgd.py:75(step)
[1,0]<stdout>:      510    0.047    0.000    0.047    0.000 {built-in method dropout}
[1,0]<stdout>:      255    0.036    0.000    0.348    0.001 optimizer.py:166(zero_grad)
[1,0]<stdout>:    29580    0.036    0.000    0.400    0.000 tensor.py:367(split)
[1,0]<stdout>:      510    0.034    0.000    1.800    0.004 container.py:115(forward)
[1,0]<stdout>:     3370    0.030    0.000    0.035    0.000 module.py:774(__setattr__)
[1,0]<stdout>:    29070    0.030    0.000    0.030    0.000 module.py:758(__getattr__)
[1,0]<stdout>:      255    0.028    0.000    0.028    0.000 {built-in method torch._C._nn.nll_loss}
[1,0]<stdout>:    15301    0.028    0.000    0.028    0.000 basics.py:183(size)
[1,0]<stdout>:    29580    0.026    0.000    1.556    0.000 compression.py:252(decompress)
[1,0]<stdout>:     3315    0.025    0.000    0.403    0.000 functional.py:1998(batch_norm)
[1,0]<stdout>:       14    0.023    0.002    0.023    0.002 {method 'poll' of 'select.poll' objects}
[1,0]<stdout>:      255    0.021    0.000    0.021    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      765    0.020    0.000    0.020    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3825    0.018    0.000    0.143    0.000 activation.py:101(forward)
[1,0]<stdout>:      255    0.017    0.000    0.017    0.000 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,0]<stdout>:      257    0.017    0.000    0.026    0.000 std.py:355(format_meter)
[1,0]<stdout>:      255    0.016    0.000    0.054    0.000 summary.py:137(scalar)
[1,0]<stdout>:    14280    0.015    0.000    0.015    0.000 {built-in method torch._C._get_tracing_state}
[1,0]<stdout>:     3315    0.014    0.000    0.573    0.000 conv.py:410(_conv_forward)
[1,0]<stdout>:    91045    0.013    0.000    0.013    0.000 {built-in method builtins.hasattr}
[1,0]<stdout>:    44370    0.012    0.000    0.020    0.000 tensor.py:458(__hash__)
[1,0]<stdout>:    86603    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
[1,0]<stdout>:      256    0.011    0.000    0.017    0.000 sampler.py:206(__iter__)
[1,0]<stdout>:     3315    0.011    0.000    0.589    0.000 conv.py:418(forward)
[1,0]<stdout>:      269    0.011    0.000    0.011    0.000 {method 'clear' of 'dict' objects}
[1,0]<stdout>:     3315    0.011    0.000    0.012    0.000 functional.py:1980(_verify_batch_size)
[1,0]<stdout>:    75733    0.011    0.000    0.011    0.000 {method 'append' of 'list' objects}
[1,0]<stdout>:    57630    0.010    0.000    0.010    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,0]<stdout>:      255    0.010    0.000    0.010    0.000 {built-in method ones_like}
[1,0]<stdout>:     3825    0.010    0.000    0.125    0.000 functional.py:1106(relu)
[1,0]<stdout>:      255    0.009    0.000    0.025    0.000 x2num.py:11(check_nan)
[1,0]<stdout>:     4080    0.009    0.000    0.009    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.009    0.000    0.351    0.001 {built-in method apply}
[1,0]<stdout>:      255    0.008    0.000  573.651    2.250 tensor.py:155(backward)
[1,0]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method tensor}
[1,0]<stdout>:      255    0.008    0.000    0.139    0.001 std.py:1197(update)
[1,0]<stdout>:    44399    0.008    0.000    0.008    0.000 {built-in method builtins.id}
[1,0]<stdout>:      256    0.007    0.000   16.663    0.065 std.py:1159(__iter__)
[1,0]<stdout>:      255    0.007    0.000   16.178    0.063 optimizer.py:337(step)
[1,0]<stdout>:      765    0.007    0.000    0.131    0.000 functional.py:1655(linear)
[1,0]<stdout>:51533/51530    0.007    0.000    0.007    0.000 {built-in method builtins.len}
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'reduce' of 'numpy.ufunc' objects}
[1,0]<stdout>:     1275    0.006    0.000    0.095    0.000 pooling.py:156(forward)
[1,0]<stdout>:    11449    0.006    0.000    0.008    0.000 utils.py:330(<genexpr>)
[1,0]<stdout>:      255    0.006    0.000    1.849    0.007 vgg.py:42(forward)
[1,0]<stdout>:      515    0.006    0.000    0.022    0.000 queues.py:80(put)
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,0]<stdout>:      255    0.006    0.000  573.644    2.250 __init__.py:57(backward)
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {built-in method flatten}
[1,0]<stdout>:      255    0.005    0.000   16.183    0.063 lr_scheduler.py:62(wrapper)
[1,0]<stdout>:    29841    0.005    0.000    0.005    0.000 {method 'pop' of 'dict' objects}
[1,0]<stdout>:      510    0.005    0.000    0.054    0.000 functional.py:950(dropout)
[1,0]<stdout>:      776    0.005    0.000    0.009    0.000 threading.py:341(notify)
[1,0]<stdout>:      256    0.005    0.000    4.102    0.016 dataloader.py:945(_next_data)
[1,0]<stdout>:      255    0.005    0.000    0.005    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.004    0.000    0.021    0.000 writer.py:131(add_summary)
[1,0]<stdout>:        8    0.004    0.001    0.076    0.009 reduction.py:58(dump)
[1,0]<stdout>:     1579    0.004    0.000    0.004    0.000 {method 'format' of 'str' objects}
[1,0]<stdout>:      255    0.004    0.000    0.014    0.000 __init__.py:25(_make_grads)
[1,0]<stdout>:      255    0.004    0.000    0.082    0.000 writer.py:401(add_scalar)
[1,0]<stdout>:     1530    0.004    0.000    0.004    0.000 std.py:233(__call__)
[1,0]<stdout>:      255    0.004    0.000    0.034    0.000 x2num.py:18(make_np)
[1,0]<stdout>:      255    0.004    0.000    0.559    0.002 grad_mode.py:12(decorate_context)
[1,0]<stdout>:     1275    0.004    0.000    0.085    0.000 functional.py:564(_max_pool2d)
[1,0]<stdout>:      255    0.004    0.000    0.004    0.000 {built-in method numpy.array}
[1,0]<stdout>:      255    0.004    0.000    0.017    0.000 writer.py:115(add_event)
[1,0]<stdout>:      257    0.004    0.000    0.004    0.000 std.py:1445(format_dict)
[1,0]<stdout>:      525    0.003    0.000    0.003    0.000 {method 'release' of '_thread.lock' objects}
[1,0]<stdout>:      255    0.003    0.000    0.004    0.000 grad_mode.py:65(__enter__)
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 batchnorm.py:275(_check_input_dim)
[1,0]<stdout>:      255    0.003    0.000    4.045    0.016 dataloader.py:912(_get_data)
[1,0]<stdout>:     1275    0.003    0.000    0.089    0.000 _jit_internal.py:237(fn)
[1,0]<stdout>:      255    0.003    0.000    0.342    0.001 mpi_ops.py:191(forward)
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      256    0.003    0.000    0.128    0.001 std.py:1324(refresh)
[1,0]<stdout>:      255    0.003    0.000    0.027    0.000 pooling.py:1110(forward)
[1,0]<stdout>:      255    0.003    0.000    0.061    0.000 loss.py:946(forward)
[1,0]<stdout>:      255    0.003    0.000    0.354    0.001 mpi_ops.py:209(allreduce)
[1,0]<stdout>:      256    0.003    0.000    0.003    0.000 {built-in method now}
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,0]<stdout>:      255    0.003    0.000    0.033    0.000 functional.py:2158(nll_loss)
[1,0]<stdout>:      255    0.003    0.000    0.006    0.000 train.py:409(adjust_learning_rate)
[1,0]<stdout>:      765    0.003    0.000    0.135    0.000 linear.py:90(forward)
[1,0]<stdout>:      255    0.003    0.000    0.018    0.000 mpi_ops.py:105(_allreduce_async)
[1,0]<stdout>:      255    0.003    0.000    4.036    0.016 queue.py:153(get)
[1,0]<stdout>:    10114    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,0]<stdout>:      255    0.003    0.000    0.351    0.001 optimizer.py:353(zero_grad)
[1,0]<stdout>:      255    0.003    0.000    0.012    0.000 fromnumeric.py:2123(sum)
[1,0]<stdout>:      255    0.003    0.000    0.004    0.000 threading.py:1071(is_alive)
[1,0]<stdout>:      257    0.003    0.000    0.086    0.000 std.py:348(print_status)
[1,0]<stdout>:    10710    0.003    0.000    0.003    0.000 __init__.py:2277(is_scripting)
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:      255    0.003    0.000    0.024    0.000 functional.py:909(adaptive_avg_pool2d)
[1,0]<stdout>:      257    0.002    0.000    0.121    0.000 std.py:1463(display)
[1,0]<stdout>:     4335    0.002    0.000    0.002    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.002    0.000    0.009    0.000 fromnumeric.py:69(_wrapreduction)
[1,0]<stdout>:      263    0.002    0.000    0.028    0.000 dataloader.py:991(_try_put_index)
[1,0]<stdout>:    11192    0.002    0.000    0.002    0.000 {built-in method unicodedata.east_asian_width}
[1,0]<stdout>:      257    0.002    0.000    0.032    0.000 std.py:1149(__str__)
[1,0]<stdout>:      255    0.002    0.000    0.057    0.000 functional.py:2370(cross_entropy)
[1,0]<stdout>:      255    0.002    0.000    4.038    0.016 dataloader.py:766(_try_get_data)
[1,0]<stdout>:      255    0.002    0.000    0.016    0.000 <__array_function__ internals>:2(sum)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 summary.py:28(_clean_tag)
[1,0]<stdout>:      255    0.002    0.000    0.025    0.000 mpi_ops.py:152(allreduce_async)
[1,0]<stdout>:      765    0.002    0.000    0.005    0.000 _overrides.py:779(has_torch_function)
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 {built-in method builtins.sorted}
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 numeric.py:1858(isscalar)
[1,0]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,0]<stdout>:      255    0.002    0.000    0.013    0.000 event_file_writer.py:132(add_event)
[1,0]<stdout>:      255    0.002    0.000    0.002    0.000 writer.py:318(_check_caffe2_blob)
[1,0]<stdout>:      260    0.002    0.000    0.002    0.000 std.py:104(acquire)
[1,0]<stdout>:      510    0.002    0.000    0.056    0.000 dropout.py:57(forward)
[1,0]<stdout>:      257    0.002    0.000    0.071    0.000 std.py:342(fp_write)
[1,0]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,0]<stdout>:      881    0.002    0.000    0.002    0.000 {built-in method builtins.getattr}
[1,0]<stdout>:      512    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
[1,0]<stdout>:      510    0.001    0.000    0.003    0.000 container.py:107(__iter__)
[1,0]<stdout>:      256    0.001    0.000    4.104    0.016 dataloader.py:362(__next__)
[1,0]<stdout>:      779    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      260    0.001    0.000    0.002    0.000 std.py:108(release)
[1,0]<stdout>:      783    0.001    0.000    0.002    0.000 threading.py:246(__enter__)
[1,0]<stdout>:      513    0.001    0.000    0.003    0.000 std.py:288(format_interval)
[1,0]<stdout>:      255    0.001    0.000    0.014    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
[1,0]<stdout>:       20    0.001    0.000    0.004    0.000 synchronize.py:50(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.025    0.000 dataloader.py:1010(_process_data)
[1,0]<stdout>:        1    0.001    0.001    0.001    0.001 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      257    0.001    0.000    0.012    0.000 utils.py:333(disp_len)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,0]<stdout>:        1    0.001    0.001   12.411   12.411 dataloader.py:690(__init__)
[1,0]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 grad_mode.py:149(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:333(_get_file_writer)
[1,0]<stdout>:      255    0.001    0.000    0.005    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:69(__exit__)
[1,0]<stdout>:      257    0.001    0.000    0.011    0.000 utils.py:329(_text_width)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,0]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 util.py:221(impl)
[1,0]<stdout>:        4    0.001    0.000   12.399    3.100 process.py:110(start)
[1,0]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,0]<stdout>:        7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,0]<stdout>:       20    0.001    0.000    0.002    0.000 synchronize.py:114(_make_name)
[1,0]<stdout>:      255    0.001    0.000    0.022    0.000 functional.py:1567(log_softmax)
[1,0]<stdout>:        8    0.001    0.000    0.001    0.000 reduction.py:38(__init__)
[1,0]<stdout>:      787    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,0]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:92(_check_function)
[1,0]<stdout>:        1    0.001    0.001    0.001    0.001 {built-in method randperm}
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 queue.py:216(_get)
[1,0]<stdout>:        4    0.001    0.000   12.397    3.099 popen_forkserver.py:41(_launch)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 fromnumeric.py:70(<dictcomp>)
[1,0]<stdout>:      603    0.000    0.000    0.018    0.000 {built-in method builtins.next}
[1,0]<stdout>:      516    0.000    0.000    0.069    0.000 utils.py:143(inner)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
[1,0]<stdout>:      257    0.000    0.000    0.000    0.000 {built-in method builtins.max}
[1,0]<stdout>:      256    0.000    0.000    0.001    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,0]<stdout>:      531    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,0]<stdout>:     1277    0.000    0.000    0.000    0.000 {built-in method time.time}
[1,0]<stdout>:      263    0.000    0.000    0.018    0.000 dataloader.py:356(_next_index)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
[1,0]<stdout>:     1026    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
[1,0]<stdout>:        1    0.000    0.000  747.910  747.910 {built-in method builtins.exec}
[1,0]<stdout>:       14    0.000    0.000    0.024    0.002 connection.py:917(wait)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,0]<stdout>:       36    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:        5    0.000    0.000    0.005    0.001 context.py:100(Queue)
[1,0]<stdout>:        1    0.000    0.000    0.002    0.002 distributed.py:68(__iter__)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,0]<stdout>:        5    0.000    0.000    0.005    0.001 queues.py:36(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:2118(_sum_dispatcher)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,0]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,0]<stdout>:      783    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:      297    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:      513    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,0]<stdout>:      765    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:        4    0.000    0.000   12.398    3.099 popen_fork.py:15(__init__)
[1,0]<stdout>:        6    0.000    0.000    0.004    0.001 queues.py:158(_start_thread)
[1,0]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:       11    0.000    0.000    4.033    0.367 threading.py:270(wait)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000  747.910  747.910 <string>:1(<module>)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,0]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,0]<stdout>:      275    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,0]<stdout>:        2    0.000    0.000    0.027    0.014 dataloader.py:1040(_shutdown_workers)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 context.py:65(Lock)
[1,0]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,0]<stdout>:       14    0.000    0.000    0.024    0.002 selectors.py:402(select)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.024    0.006 popen_fork.py:40(wait)
[1,0]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,0]<stdout>:        4    0.000    0.000    0.024    0.006 process.py:142(join)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,0]<stdout>:        4    0.000    0.000   12.398    3.099 context.py:288(_Popen)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:      284    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,0]<stdout>:        7    0.000    0.000    0.004    0.001 threading.py:834(start)
[1,0]<stdout>:       11    0.000    0.000    0.003    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,0]<stdout>:        7    0.000    0.000    0.003    0.000 threading.py:540(wait)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,0]<stdout>:      106    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55f83cccc9a0}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,0]<stdout>:       53    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,0]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:145(register)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:       72    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,0]<stdout>:        4    0.000    0.000   12.398    3.099 popen_forkserver.py:33(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:583(_decr_instances)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:       11    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f9021419c10}
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:282(_screen_shape_linux)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,0]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:296(<listcomp>)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,0]<stdout>:       11    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1285(fp_write)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:        1    0.000    0.000   12.411   12.411 dataloader.py:287(__iter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:979(join)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:329(status_printer)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:748(encode)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:171(__eq__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:215(_supports_unicode)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:201(_is_utf)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,0]<stdout>:        6    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 std.py:228(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:231(_screen_shape_wrapper)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:88(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1300(<lambda>)
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:this epoch's train spend:747.9273812770844s
[1,0]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,1]<stderr>:test:   1%|▏         | 1/79 [00:31<40:56, 31.50s/it][1,0]<stderr>:test:   1%|▏         | 1/79 [00:31<41:11, 31.69s/it][1,0]<stderr>:test:   4%|▍         | 3/79 [00:31<10:27,  8.25s/it][1,1]<stderr>:test:   4%|▍         | 3/79 [00:31<10:30,  8.30s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:33<05:37,  4.57s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:35<05:57,  4.84s/it][1,1]<stderr>:test:   9%|▉         | 7/79 [00:35<03:26,  2.87s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:36<02:21,  2.03s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:37<02:40,  2.30s/it][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:37<01:48,  1.59s/it][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:39<01:24,  1.27s/it][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:39<01:41,  1.54s/it][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:40<01:08,  1.07s/it][1,0]<stderr>:test:  19%|█▉        | 15/79 [00:40<01:19,  1.25s/it][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:42<01:04,  1.03s/it][1,1]<stderr>:test:  23%|██▎       | 18/79 [00:42<00:52,  1.16it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:42<01:14,  1.21s/it][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:43<00:55,  1.07it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:44<01:03,  1.06s/it][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:44<00:47,  1.21it/s][1,1]<stderr>:test:  28%|██▊       | 22/79 [00:45<00:40,  1.42it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:45<00:56,  1.02it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:46<00:40,  1.38it/s][1,0]<stderr>:test:  29%|██▉       | 23/79 [00:46<00:44,  1.25it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:46<00:33,  1.63it/s][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:47<00:31,  1.67it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:48<00:44,  1.20it/s][1,0]<stderr>:test:  34%|███▍      | 27/79 [00:48<00:35,  1.47it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:48<00:41,  1.25it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:49<00:30,  1.63it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:50<00:30,  1.63it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:50<00:37,  1.35it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [00:51<00:39,  1.21it/s][1,0]<stderr>:test:  39%|███▉      | 31/79 [00:51<00:33,  1.43it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:51<00:25,  1.82it/s][1,1]<stderr>:test:  43%|████▎     | 34/79 [00:52<00:22,  1.99it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:52<00:30,  1.51it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:54<00:37,  1.18it/s][1,0]<stderr>:test:  44%|████▍     | 35/79 [00:54<00:29,  1.48it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:54<00:27,  1.53it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:55<00:23,  1.73it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:55<00:28,  1.47it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:56<00:30,  1.30it/s][1,0]<stderr>:test:  49%|████▉     | 39/79 [00:56<00:24,  1.61it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:57<00:21,  1.78it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:57<00:20,  1.81it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:58<00:24,  1.58it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:59<00:31,  1.15it/s][1,0]<stderr>:test:  54%|█████▍    | 43/79 [01:00<00:27,  1.31it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [01:00<00:22,  1.54it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [01:00<00:20,  1.65it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [01:00<00:21,  1.60it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [01:02<00:26,  1.23it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [01:02<00:19,  1.57it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [01:02<00:16,  1.78it/s][1,0]<stderr>:test:  59%|█████▉    | 47/79 [01:02<00:23,  1.39it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [01:03<00:19,  1.58it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [01:03<00:19,  1.46it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [01:04<00:22,  1.22it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [01:05<00:14,  1.75it/s][1,0]<stderr>:test:  65%|██████▍   | 51/79 [01:05<00:20,  1.34it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [01:05<00:14,  1.76it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [01:06<00:18,  1.32it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [01:07<00:18,  1.27it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [01:08<00:16,  1.35it/s][1,0]<stderr>:test:  70%|██████▉   | 55/79 [01:09<00:22,  1.07it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [01:09<00:15,  1.40it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [01:10<00:19,  1.10it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [01:11<00:17,  1.13it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [01:11<00:11,  1.55it/s][1,0]<stderr>:test:  75%|███████▍  | 59/79 [01:12<00:17,  1.17it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [01:12<00:11,  1.53it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [01:12<00:11,  1.44it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [01:14<00:14,  1.12it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [01:14<00:09,  1.49it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [01:15<00:09,  1.39it/s][1,0]<stderr>:test:  80%|███████▉  | 63/79 [01:15<00:15,  1.06it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [01:16<00:09,  1.24it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:17<00:06,  1.61it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [01:18<00:06,  1.43it/s][1,0]<stderr>:test:  85%|████████▍ | 67/79 [01:18<00:10,  1.19it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [01:19<00:06,  1.22it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [01:20<00:05,  1.30it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:20<00:04,  1.40it/s][1,0]<stderr>:test:  90%|████████▉ | 71/79 [01:21<00:06,  1.24it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [01:21<00:03,  1.28it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [01:22<00:02,  1.44it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [01:22<00:01,  1.56it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:23<00:01,  1.37it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [01:24<00:00,  1.20it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:24<00:00,  1.07s/it][1,0]<stderr>:test:  95%|█████████▍| 75/79 [01:25<00:03,  1.22it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:25<00:00,  1.77it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:25<00:00,  1.08s/it][1,0]<stdout>:
[1,0]<stdout>:[acc/test_top1] = 0.400000
[1,0]<stdout>:[acc/test_top5] = 0.880000
[1,0]<stdout>:[acc/test_top1_best] = 0.400000
[1,1]<stdout>:spend all time:747.9177832603455s
[1,0]<stdout>:[save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints
[1,0]<stdout>:spend all time:747.9273812770844s
[1,0]<stdout>:==> loading configs from ['configs/imagenet/vgg16_bn.py', 'configs/methods/wm0.py', 'configs/methods/fp16.py', 'configs/methods/int32.py']
[1,0]<stdout>:[train.save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:[seed] = 42
[1,0]<stdout>:[data]
[1,0]<stdout>:  [num_threads_per_worker] = 4
[1,0]<stdout>:[train]
[1,0]<stdout>:  [dgc] = False
[1,0]<stdout>:  [compression]
[1,0]<stdout>:    [func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:    [compress_ratio] = 0.05
[1,0]<stdout>:    [sample_ratio] = 0.01
[1,0]<stdout>:    [strided_sample] = True
[1,0]<stdout>:    [compress_upper_bound] = 1.3
[1,0]<stdout>:    [compress_lower_bound] = 0.8
[1,0]<stdout>:    [max_adaptation_iters] = 10
[1,0]<stdout>:    [resample] = True
[1,0]<stdout>:    [memory]
[1,0]<stdout>:      [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:      [momentum] = 0.9
[1,0]<stdout>:    [warmup_epochs] = 0
[1,0]<stdout>:    [fp16_values] = True
[1,0]<stdout>:    [int32_indices] = True
[1,0]<stdout>:  [criterion]
[1,0]<stdout>:    [func] = <class 'torch.nn.modules.loss.CrossEntropyLoss'>
[1,0]<stdout>:  [optimizer]
[1,0]<stdout>:    [func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:    [momentum] = 0.9
[1,0]<stdout>:    [lr] = 0.05
[1,0]<stdout>:    [weight_decay] = 5e-05
[1,0]<stdout>:  [schedule_lr_per_epoch] = True
[1,0]<stdout>:  [warmup_lr_epochs] = 5
[1,0]<stdout>:  [metric] = acc/test_top1
[1,0]<stdout>:  [meters]
[1,0]<stdout>:    [acc/{}_top1]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 1
[1,0]<stdout>:    [acc/{}_top5]
[1,0]<stdout>:      [func] = <class 'torchpack.mtpack.meters.class_meter.TopKClassMeter'>
[1,0]<stdout>:      [k] = 5
[1,0]<stdout>:  [optimize_bn_separately] = False
[1,0]<stdout>:  [num_epochs] = 1
[1,0]<stdout>:  [batch_size] = 64
[1,0]<stdout>:  [scheduler]
[1,0]<stdout>:    [func] = <class 'torch.optim.lr_scheduler.MultiStepLR'>
[1,0]<stdout>:    [milestones] = [25, 55, 75]
[1,0]<stdout>:    [gamma] = 0.1
[1,0]<stdout>:  [topk] = True
[1,0]<stdout>:  [fp16] = False
[1,0]<stdout>:  [powersgd] = False
[1,0]<stdout>:  [sign] = False
[1,0]<stdout>:  [efsign] = False
[1,0]<stdout>:  [natural] = False
[1,0]<stdout>:  [onebit] = False
[1,0]<stdout>:  [qsgd] = False
[1,0]<stdout>:  [randomk] = False
[1,0]<stdout>:  [signum] = False
[1,0]<stdout>:  [terngrad] = False
[1,0]<stdout>:  [num_batches_per_step] = 1
[1,0]<stdout>:  [save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2
[1,0]<stdout>:  [checkpoint_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/e{epoch}-r0.pth
[1,0]<stdout>:  [latest_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/latest-r0.pth
[1,0]<stdout>:  [best_pth_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints/best-r0.pth
[1,0]<stdout>:  [base_lr] = 0.025
[1,0]<stdout>:[dataset]
[1,0]<stdout>:  [func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:  [root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [image_size] = 224
[1,0]<stdout>:[model]
[1,0]<stdout>:  [func] = <function vgg16_bn at 0x7f9020ddeb80>
[1,0]<stdout>:  [num_classes] = 1000
[1,0]<stdout>:  [init_weights] = True
[1,0]<stdout>:[device] = cuda
[1,0]<stdout>:
[1,0]<stdout>:==> creating model "[func] = <function vgg16_bn at 0x7f9020ddeb80>
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[init_weights] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> creating dataset "[func] = <class 'torchpack.mtpack.datasets.vision.imagenet.ImageNet'>
[1,0]<stdout>:[root] = /gs/home/lwang20/jzb_horovod_test/deep-gradient-compression/data/imagenet
[1,0]<stdout>:[num_classes] = 1000
[1,0]<stdout>:[image_size] = 224"
[1,0]<stdout>:
[1,0]<stdout>:==> loading dataset "{'num_workers': 4, 'pin_memory': True, 'multiprocessing_context': 'forkserver'}""
[1,0]<stdout>:
[1,0]<stdout>:==> creating optimizer "[func] = <class 'src.optim.sgd.DGCSGD'>
[1,0]<stdout>:[momentum] = 0.9
[1,0]<stdout>:[lr] = 0.1
[1,0]<stdout>:[weight_decay] = 5e-05"
[1,0]<stdout>:
[1,0]<stdout>:==> creating compression "[func] = <class 'src.compression.DGCCompressor'>
[1,0]<stdout>:[compress_ratio] = 0.05
[1,0]<stdout>:[sample_ratio] = 0.01
[1,0]<stdout>:[strided_sample] = True
[1,0]<stdout>:[compress_upper_bound] = 1.3
[1,0]<stdout>:[compress_lower_bound] = 0.8
[1,0]<stdout>:[max_adaptation_iters] = 10
[1,0]<stdout>:[resample] = True
[1,0]<stdout>:[memory]
[1,0]<stdout>:  [func] = <class 'src.memory.DGCSGDMemory'>
[1,0]<stdout>:  [momentum] = 0.9
[1,0]<stdout>:[warmup_epochs] = 0
[1,0]<stdout>:[fp16_values] = True
[1,0]<stdout>:[int32_indices] = True"
[1,0]<stdout>:
[1,0]<stdout>:==> initializing topk compression
[1,0]<stdout>:
[1,0]<stdout>:==> train from scratch
[1,0]<stdout>:
[1,0]<stdout>:==> broadcasting paramters and optimizer state
[1,1]<stdout>:before evaluate
[1,0]<stdout>:before evaluate
[1,1]<stderr>:
[1,0]<stderr>:
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:18<23:43, 18.25s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:18<23:59, 18.45s/it][1,0]<stderr>:test:   3%|▎         | 2/79 [00:18<09:53,  7.71s/it][1,1]<stderr>:test:   3%|▎         | 2/79 [00:18<10:00,  7.79s/it][1,0]<stderr>:test:   4%|▍         | 3/79 [00:18<05:29,  4.34s/it][1,1]<stderr>:test:   4%|▍         | 3/79 [00:19<05:33,  4.39s/it][1,0]<stderr>:test:   5%|▌         | 4/79 [00:19<03:26,  2.76s/it][1,1]<stderr>:test:   5%|▌         | 4/79 [00:19<03:28,  2.78s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:20<02:51,  2.32s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:20<02:50,  2.30s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:21<01:59,  1.64s/it][1,1]<stderr>:test:   8%|▊         | 6/79 [00:21<01:59,  1.63s/it][1,0]<stderr>:test:   9%|▉         | 7/79 [00:21<01:27,  1.21s/it][1,1]<stderr>:test:   9%|▉         | 7/79 [00:21<01:26,  1.21s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:21<01:06,  1.07it/s][1,1]<stderr>:test:  10%|█         | 8/79 [00:21<01:05,  1.08it/s][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:23<01:19,  1.13s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:23<01:23,  1.19s/it][1,1]<stderr>:test:  13%|█▎        | 10/79 [00:23<01:00,  1.13it/s][1,0]<stderr>:test:  13%|█▎        | 10/79 [00:23<01:03,  1.08it/s][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:24<00:48,  1.40it/s][1,0]<stderr>:test:  14%|█▍        | 11/79 [00:24<00:50,  1.35it/s][1,1]<stderr>:test:  15%|█▌        | 12/79 [00:24<00:40,  1.67it/s][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:24<00:41,  1.62it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:25<00:48,  1.37it/s][1,1]<stderr>:test:  18%|█▊        | 14/79 [00:25<00:39,  1.64it/s][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:26<00:33,  1.91it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:26<01:02,  1.06it/s][1,1]<stderr>:test:  20%|██        | 16/79 [00:26<00:29,  2.15it/s][1,0]<stderr>:test:  18%|█▊        | 14/79 [00:26<00:49,  1.32it/s][1,0]<stderr>:test:  19%|█▉        | 15/79 [00:26<00:40,  1.59it/s][1,0]<stderr>:test:  20%|██        | 16/79 [00:27<00:33,  1.85it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:27<00:42,  1.45it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:28<00:48,  1.28it/s][1,1]<stderr>:test:  23%|██▎       | 18/79 [00:28<00:47,  1.28it/s][1,0]<stderr>:test:  23%|██▎       | 18/79 [00:28<00:39,  1.55it/s][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:29<00:38,  1.55it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:29<00:32,  1.82it/s][1,1]<stderr>:test:  25%|██▌       | 20/79 [00:29<00:32,  1.82it/s][1,0]<stderr>:test:  25%|██▌       | 20/79 [00:29<00:28,  2.07it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:29<00:29,  1.95it/s][1,1]<stderr>:test:  28%|██▊       | 22/79 [00:30<00:40,  1.39it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:31<00:49,  1.18it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:31<00:33,  1.66it/s][1,0]<stderr>:test:  28%|██▊       | 22/79 [00:31<00:39,  1.45it/s][1,1]<stderr>:test:  30%|███       | 24/79 [00:31<00:28,  1.92it/s][1,0]<stderr>:test:  29%|██▉       | 23/79 [00:31<00:32,  1.72it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:31<00:25,  2.14it/s][1,0]<stderr>:test:  30%|███       | 24/79 [00:32<00:27,  1.98it/s][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:33<00:42,  1.26it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:33<00:44,  1.22it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:33<00:34,  1.53it/s][1,0]<stderr>:test:  33%|███▎      | 26/79 [00:34<00:35,  1.48it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:34<00:28,  1.79it/s][1,0]<stderr>:test:  34%|███▍      | 27/79 [00:34<00:29,  1.75it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [00:34<00:26,  1.86it/s][1,0]<stderr>:test:  35%|███▌      | 28/79 [00:34<00:25,  2.01it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [00:35<00:30,  1.62it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [00:35<00:25,  1.88it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [00:35<00:33,  1.50it/s][1,0]<stderr>:test:  38%|███▊      | 30/79 [00:36<00:27,  1.76it/s][1,1]<stderr>:test:  41%|████      | 32/79 [00:36<00:22,  2.11it/s][1,0]<stderr>:test:  39%|███▉      | 31/79 [00:36<00:23,  2.02it/s][1,0]<stderr>:test:  41%|████      | 32/79 [00:36<00:20,  2.24it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [00:37<00:32,  1.41it/s][1,1]<stderr>:test:  43%|████▎     | 34/79 [00:38<00:36,  1.23it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [00:38<00:38,  1.21it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [00:38<00:29,  1.49it/s][1,0]<stderr>:test:  43%|████▎     | 34/79 [00:38<00:30,  1.47it/s][1,1]<stderr>:test:  46%|████▌     | 36/79 [00:39<00:24,  1.76it/s][1,0]<stderr>:test:  44%|████▍     | 35/79 [00:39<00:25,  1.74it/s][1,0]<stderr>:test:  46%|████▌     | 36/79 [00:39<00:21,  2.00it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [00:39<00:22,  1.86it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [00:40<00:28,  1.43it/s][1,0]<stderr>:test:  47%|████▋     | 37/79 [00:40<00:30,  1.40it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [00:41<00:23,  1.70it/s][1,0]<stderr>:test:  48%|████▊     | 38/79 [00:41<00:24,  1.67it/s][1,1]<stderr>:test:  51%|█████     | 40/79 [00:41<00:19,  1.96it/s][1,0]<stderr>:test:  49%|████▉     | 39/79 [00:41<00:20,  1.93it/s][1,0]<stderr>:test:  51%|█████     | 40/79 [00:41<00:18,  2.17it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [00:42<00:23,  1.63it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [00:43<00:30,  1.19it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [00:43<00:33,  1.15it/s][1,0]<stderr>:test:  53%|█████▎    | 42/79 [00:43<00:26,  1.41it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [00:43<00:24,  1.46it/s][1,1]<stderr>:test:  56%|█████▌    | 44/79 [00:44<00:20,  1.72it/s][1,0]<stderr>:test:  54%|█████▍    | 43/79 [00:44<00:21,  1.67it/s][1,0]<stderr>:test:  56%|█████▌    | 44/79 [00:44<00:18,  1.93it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [00:44<00:17,  1.97it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [00:45<00:24,  1.37it/s][1,0]<stderr>:test:  58%|█████▊    | 46/79 [00:46<00:20,  1.64it/s][1,0]<stderr>:test:  59%|█████▉    | 47/79 [00:46<00:16,  1.90it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [00:46<00:30,  1.08it/s][1,0]<stderr>:test:  61%|██████    | 48/79 [00:46<00:14,  2.14it/s][1,1]<stderr>:test:  59%|█████▉    | 47/79 [00:46<00:23,  1.33it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [00:47<00:19,  1.60it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [00:47<00:20,  1.47it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [00:49<00:30,  1.00s/it][1,0]<stderr>:test:  63%|██████▎   | 50/79 [00:49<00:23,  1.25it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [00:49<00:26,  1.08it/s][1,0]<stderr>:test:  65%|██████▍   | 51/79 [00:49<00:18,  1.52it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [00:49<00:21,  1.33it/s][1,0]<stderr>:test:  66%|██████▌   | 52/79 [00:50<00:15,  1.78it/s][1,1]<stderr>:test:  66%|██████▌   | 52/79 [00:50<00:16,  1.60it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [00:50<00:13,  1.86it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [00:51<00:24,  1.05it/s][1,0]<stderr>:test:  68%|██████▊   | 54/79 [00:52<00:19,  1.31it/s][1,0]<stderr>:test:  70%|██████▉   | 55/79 [00:52<00:15,  1.58it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [00:52<00:27,  1.08s/it][1,0]<stderr>:test:  71%|███████   | 56/79 [00:52<00:12,  1.84it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [00:53<00:20,  1.17it/s][1,1]<stderr>:test:  71%|███████   | 56/79 [00:53<00:16,  1.43it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [00:54<00:15,  1.44it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [00:54<00:21,  1.00it/s][1,0]<stderr>:test:  73%|███████▎  | 58/79 [00:55<00:16,  1.25it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [00:55<00:18,  1.15it/s][1,0]<stderr>:test:  75%|███████▍  | 59/79 [00:55<00:13,  1.52it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [00:55<00:14,  1.41it/s][1,0]<stderr>:test:  76%|███████▌  | 60/79 [00:55<00:10,  1.79it/s][1,1]<stderr>:test:  76%|███████▌  | 60/79 [00:56<00:11,  1.68it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [00:56<00:12,  1.45it/s][1,0]<stderr>:test:  77%|███████▋  | 61/79 [00:57<00:15,  1.16it/s][1,0]<stderr>:test:  78%|███████▊  | 62/79 [00:57<00:11,  1.43it/s][1,0]<stderr>:test:  80%|███████▉  | 63/79 [00:58<00:09,  1.70it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [00:58<00:14,  1.15it/s][1,0]<stderr>:test:  81%|████████  | 64/79 [00:58<00:07,  1.96it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [00:58<00:11,  1.42it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [00:58<00:08,  1.69it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [00:59<00:11,  1.25it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [00:59<00:10,  1.39it/s][1,0]<stderr>:test:  84%|████████▎ | 66/79 [01:00<00:08,  1.52it/s][1,0]<stderr>:test:  85%|████████▍ | 67/79 [01:00<00:06,  1.78it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [01:00<00:10,  1.29it/s][1,0]<stderr>:test:  86%|████████▌ | 68/79 [01:00<00:05,  2.04it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [01:01<00:07,  1.56it/s][1,1]<stderr>:test:  86%|████████▌ | 68/79 [01:01<00:06,  1.82it/s][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:03<00:08,  1.20it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [01:03<00:09,  1.01it/s][1,0]<stderr>:test:  89%|████████▊ | 70/79 [01:03<00:07,  1.26it/s][1,0]<stderr>:test:  90%|████████▉ | 71/79 [01:03<00:05,  1.53it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [01:03<00:07,  1.18it/s][1,0]<stderr>:test:  91%|█████████ | 72/79 [01:04<00:03,  1.80it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [01:04<00:05,  1.45it/s][1,1]<stderr>:test:  91%|█████████ | 72/79 [01:04<00:04,  1.72it/s][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:05<00:03,  1.58it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [01:05<00:05,  1.19it/s][1,0]<stderr>:test:  94%|█████████▎| 74/79 [01:05<00:03,  1.45it/s][1,0]<stderr>:test:  95%|█████████▍| 75/79 [01:06<00:02,  1.72it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [01:06<00:04,  1.23it/s][1,0]<stderr>:test:  96%|█████████▌| 76/79 [01:06<00:01,  1.98it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [01:06<00:02,  1.50it/s][1,1]<stderr>:test:  96%|█████████▌| 76/79 [01:07<00:01,  1.77it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:08<00:01,  1.40it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:08<00:01,  1.07it/s][1,0]<stderr>:test:  99%|█████████▊| 78/79 [01:08<00:00,  1.32it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:08<00:00,  1.76it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:08<00:00,  1.15it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [01:09<00:00,  1.33it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:09<00:00,  1.77it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:09<00:00,  1.14it/s][1,1]<stdout>:after evaluate
[1,0]<stdout>:after evaluate
[1,0]<stdout>:[acc/test_top1] = 0.060000
[1,0]<stdout>:[acc/test_top5] = 0.560000
[1,1]<stderr>:
[1,0]<stdout>:
[1,0]<stdout>:==> training epoch 0/1
[1,0]<stderr>:
[1,0]<stderr>:train:   0% 0/255 [00:00<?, ?it/s][1,0]<stderr>:train:   0% 1/255 [00:19<1:23:17, 19.68s/it][1,0]<stderr>:train:   1% 2/255 [00:22<41:33,  9.85s/it]  [1,0]<stderr>:train:   1% 3/255 [00:25<28:05,  6.69s/it][1,0]<stderr>:train:   2% 4/255 [00:28<21:55,  5.24s/it][1,0]<stderr>:train:   2% 5/255 [00:31<18:28,  4.43s/it][1,0]<stderr>:train:   2% 6/255 [00:34<16:24,  3.95s/it][1,0]<stderr>:train:   3% 7/255 [00:37<15:03,  3.64s/it][1,0]<stderr>:train:   3% 8/255 [00:40<14:06,  3.43s/it][1,0]<stderr>:train:   4% 9/255 [00:43<13:28,  3.29s/it][1,0]<stderr>:train:   4% 10/255 [00:46<12:54,  3.16s/it][1,0]<stderr>:train:   4% 11/255 [00:49<12:33,  3.09s/it][1,0]<stderr>:train:   5% 12/255 [00:52<12:17,  3.03s/it][1,0]<stderr>:train:   5% 13/255 [00:55<12:15,  3.04s/it][1,0]<stderr>:train:   5% 14/255 [00:58<12:04,  3.00s/it][1,0]<stderr>:train:   6% 15/255 [01:01<11:53,  2.97s/it][1,0]<stderr>:train:   6% 16/255 [01:04<11:51,  2.98s/it][1,0]<stderr>:train:   7% 17/255 [01:07<11:44,  2.96s/it][1,0]<stderr>:train:   7% 18/255 [01:09<11:39,  2.95s/it][1,0]<stderr>:train:   7% 19/255 [01:12<11:37,  2.95s/it][1,0]<stderr>:train:   8% 20/255 [01:15<11:36,  2.96s/it][1,0]<stderr>:train:   8% 21/255 [01:18<11:29,  2.95s/it][1,0]<stderr>:train:   9% 22/255 [01:21<11:27,  2.95s/it][1,0]<stderr>:train:   9% 23/255 [01:24<11:31,  2.98s/it][1,0]<stderr>:train:   9% 24/255 [01:27<11:27,  2.98s/it][1,0]<stderr>:train:  10% 25/255 [01:30<11:22,  2.97s/it][1,0]<stderr>:train:  10% 26/255 [01:33<11:25,  2.99s/it][1,0]<stderr>:train:  11% 27/255 [01:36<11:28,  3.02s/it][1,0]<stderr>:train:  11% 28/255 [01:39<11:27,  3.03s/it][1,0]<stderr>:train:  11% 29/255 [01:42<11:18,  3.00s/it][1,0]<stderr>:train:  12% 30/255 [01:45<11:12,  2.99s/it][1,0]<stderr>:train:  12% 31/255 [01:48<11:06,  2.97s/it][1,0]<stderr>:train:  13% 32/255 [01:51<11:02,  2.97s/it][1,0]<stderr>:train:  13% 33/255 [01:54<10:59,  2.97s/it][1,0]<stderr>:train:  13% 34/255 [01:57<11:00,  2.99s/it][1,0]<stderr>:train:  14% 35/255 [02:00<11:00,  3.00s/it][1,0]<stderr>:train:  14% 36/255 [02:03<10:50,  2.97s/it][1,0]<stderr>:train:  15% 37/255 [02:06<10:46,  2.97s/it][1,0]<stderr>:train:  15% 38/255 [02:09<10:45,  2.97s/it][1,0]<stderr>:train:  15% 39/255 [02:12<10:43,  2.98s/it][1,0]<stderr>:train:  16% 40/255 [02:15<10:40,  2.98s/it][1,0]<stderr>:train:  16% 41/255 [02:18<10:39,  2.99s/it][1,0]<stderr>:train:  16% 42/255 [02:21<10:36,  2.99s/it][1,0]<stderr>:train:  17% 43/255 [02:24<10:37,  3.01s/it][1,0]<stderr>:train:  17% 44/255 [02:27<10:31,  2.99s/it][1,0]<stderr>:train:  18% 45/255 [02:30<10:30,  3.00s/it][1,0]<stderr>:train:  18% 46/255 [02:33<10:21,  2.97s/it][1,0]<stderr>:train:  18% 47/255 [02:36<10:23,  3.00s/it][1,0]<stderr>:train:  19% 48/255 [02:39<10:15,  2.97s/it][1,0]<stderr>:train:  19% 49/255 [02:42<10:11,  2.97s/it][1,0]<stderr>:train:  20% 50/255 [02:45<10:02,  2.94s/it][1,0]<stderr>:train:  20% 51/255 [02:48<09:59,  2.94s/it][1,0]<stderr>:train:  20% 52/255 [02:51<09:56,  2.94s/it][1,0]<stderr>:train:  21% 53/255 [02:54<09:57,  2.96s/it][1,0]<stderr>:train:  21% 54/255 [02:57<09:51,  2.94s/it][1,0]<stderr>:train:  22% 55/255 [03:00<09:44,  2.92s/it][1,0]<stderr>:train:  22% 56/255 [03:02<09:43,  2.93s/it][1,0]<stderr>:train:  22% 57/255 [03:05<09:40,  2.93s/it][1,0]<stderr>:train:  23% 58/255 [03:08<09:30,  2.90s/it][1,0]<stderr>:train:  23% 59/255 [03:11<09:36,  2.94s/it][1,0]<stderr>:train:  24% 60/255 [03:14<09:32,  2.94s/it][1,0]<stderr>:train:  24% 61/255 [03:17<09:24,  2.91s/it][1,0]<stderr>:train:  24% 62/255 [03:20<09:21,  2.91s/it][1,0]<stderr>:train:  25% 63/255 [03:23<09:16,  2.90s/it][1,0]<stderr>:train:  25% 64/255 [03:26<09:13,  2.90s/it][1,0]<stderr>:train:  25% 65/255 [03:29<09:08,  2.89s/it][1,0]<stderr>:train:  26% 66/255 [03:31<09:04,  2.88s/it][1,0]<stderr>:train:  26% 67/255 [03:34<09:08,  2.92s/it][1,0]<stderr>:train:  27% 68/255 [03:37<09:03,  2.91s/it][1,0]<stderr>:train:  27% 69/255 [03:40<09:05,  2.94s/it][1,0]<stderr>:train:  27% 70/255 [03:43<08:59,  2.91s/it][1,0]<stderr>:train:  28% 71/255 [03:46<08:53,  2.90s/it][1,0]<stderr>:train:  28% 72/255 [03:49<08:50,  2.90s/it][1,0]<stderr>:train:  29% 73/255 [03:52<08:45,  2.89s/it][1,0]<stderr>:train:  29% 74/255 [03:55<08:41,  2.88s/it][1,0]<stderr>:train:  29% 75/255 [03:58<08:37,  2.88s/it][1,0]<stderr>:train:  30% 76/255 [04:00<08:35,  2.88s/it][1,0]<stderr>:train:  30% 77/255 [04:03<08:35,  2.90s/it][1,0]<stderr>:train:  31% 78/255 [04:06<08:31,  2.89s/it][1,0]<stderr>:train:  31% 79/255 [04:09<08:27,  2.88s/it][1,0]<stderr>:train:  31% 80/255 [04:12<08:24,  2.88s/it][1,0]<stderr>:train:  32% 81/255 [04:15<08:21,  2.88s/it][1,0]<stderr>:train:  32% 82/255 [04:18<08:17,  2.88s/it][1,0]<stderr>:train:  33% 83/255 [04:21<08:14,  2.88s/it][1,0]<stderr>:train:  33% 84/255 [04:23<08:11,  2.87s/it][1,0]<stderr>:train:  33% 85/255 [04:26<08:08,  2.88s/it][1,0]<stderr>:train:  34% 86/255 [04:29<08:06,  2.88s/it][1,0]<stderr>:train:  34% 87/255 [04:32<08:03,  2.88s/it][1,0]<stderr>:train:  35% 88/255 [04:35<08:00,  2.88s/it][1,0]<stderr>:train:  35% 89/255 [04:38<07:58,  2.88s/it][1,0]<stderr>:train:  35% 90/255 [04:41<07:54,  2.88s/it][1,0]<stderr>:train:  36% 91/255 [04:44<07:51,  2.87s/it][1,0]<stderr>:train:  36% 92/255 [04:46<07:47,  2.87s/it][1,0]<stderr>:train:  36% 93/255 [04:49<07:45,  2.87s/it][1,0]<stderr>:train:  37% 94/255 [04:52<07:42,  2.87s/it][1,0]<stderr>:train:  37% 95/255 [04:55<07:39,  2.87s/it][1,0]<stderr>:train:  38% 96/255 [04:58<07:37,  2.88s/it][1,0]<stderr>:train:  38% 97/255 [05:01<07:34,  2.88s/it][1,0]<stderr>:train:  38% 98/255 [05:04<07:31,  2.88s/it][1,0]<stderr>:train:  39% 99/255 [05:07<07:29,  2.88s/it][1,0]<stderr>:train:  39% 100/255 [05:09<07:26,  2.88s/it][1,0]<stderr>:train:  40% 101/255 [05:12<07:22,  2.87s/it][1,0]<stderr>:train:  40% 102/255 [05:15<07:19,  2.87s/it][1,0]<stderr>:train:  40% 103/255 [05:18<07:16,  2.87s/it][1,0]<stderr>:train:  41% 104/255 [05:21<07:14,  2.88s/it][1,0]<stderr>:train:  41% 105/255 [05:24<07:11,  2.88s/it][1,0]<stderr>:train:  42% 106/255 [05:27<07:08,  2.88s/it][1,0]<stderr>:train:  42% 107/255 [05:30<07:05,  2.88s/it][1,0]<stderr>:train:  42% 108/255 [05:32<07:02,  2.88s/it][1,0]<stderr>:train:  43% 109/255 [05:35<07:00,  2.88s/it][1,0]<stderr>:train:  43% 110/255 [05:38<06:57,  2.88s/it][1,0]<stderr>:train:  44% 111/255 [05:41<06:54,  2.88s/it][1,0]<stderr>:train:  44% 112/255 [05:44<06:52,  2.88s/it][1,0]<stderr>:train:  44% 113/255 [05:47<06:48,  2.88s/it][1,0]<stderr>:train:  45% 114/255 [05:50<06:45,  2.88s/it][1,0]<stderr>:train:  45% 115/255 [05:53<06:42,  2.88s/it][1,0]<stderr>:train:  45% 116/255 [05:56<06:40,  2.88s/it][1,0]<stderr>:train:  46% 117/255 [05:58<06:37,  2.88s/it][1,0]<stderr>:train:  46% 118/255 [06:01<06:34,  2.88s/it][1,0]<stderr>:train:  47% 119/255 [06:04<06:31,  2.88s/it][1,0]<stderr>:train:  47% 120/255 [06:07<06:27,  2.87s/it][1,0]<stderr>:train:  47% 121/255 [06:10<06:24,  2.87s/it][1,0]<stderr>:train:  48% 122/255 [06:13<06:22,  2.88s/it][1,0]<stderr>:train:  48% 123/255 [06:16<06:19,  2.87s/it][1,0]<stderr>:train:  49% 124/255 [06:19<06:16,  2.87s/it][1,0]<stderr>:train:  49% 125/255 [06:21<06:13,  2.88s/it][1,0]<stderr>:train:  49% 126/255 [06:24<06:11,  2.88s/it][1,0]<stderr>:train:  50% 127/255 [06:27<06:09,  2.88s/it][1,0]<stderr>:train:  50% 128/255 [06:30<06:05,  2.88s/it][1,0]<stderr>:train:  51% 129/255 [06:33<06:02,  2.88s/it][1,0]<stderr>:train:  51% 130/255 [06:36<05:59,  2.88s/it][1,0]<stderr>:train:  51% 131/255 [06:39<05:58,  2.89s/it][1,0]<stderr>:train:  52% 132/255 [06:42<05:55,  2.89s/it][1,0]<stderr>:train:  52% 133/255 [06:44<05:52,  2.89s/it][1,0]<stderr>:train:  53% 134/255 [06:47<05:49,  2.89s/it][1,0]<stderr>:train:  53% 135/255 [06:50<05:46,  2.89s/it][1,0]<stderr>:train:  53% 136/255 [06:53<05:43,  2.88s/it][1,0]<stderr>:train:  54% 137/255 [06:56<05:40,  2.88s/it][1,0]<stderr>:train:  54% 138/255 [06:59<05:36,  2.88s/it][1,0]<stderr>:train:  55% 139/255 [07:02<05:33,  2.87s/it][1,0]<stderr>:train:  55% 140/255 [07:05<05:31,  2.88s/it][1,0]<stderr>:train:  55% 141/255 [07:08<05:28,  2.88s/it][1,0]<stderr>:train:  56% 142/255 [07:10<05:25,  2.88s/it][1,0]<stderr>:train:  56% 143/255 [07:13<05:22,  2.88s/it][1,0]<stderr>:train:  56% 144/255 [07:16<05:19,  2.88s/it][1,0]<stderr>:train:  57% 145/255 [07:19<05:16,  2.88s/it][1,0]<stderr>:train:  57% 146/255 [07:22<05:13,  2.88s/it][1,0]<stderr>:train:  58% 147/255 [07:25<05:11,  2.88s/it][1,0]<stderr>:train:  58% 148/255 [07:28<05:11,  2.91s/it][1,0]<stderr>:train:  58% 149/255 [07:31<05:07,  2.90s/it][1,0]<stderr>:train:  59% 150/255 [07:34<05:04,  2.90s/it][1,0]<stderr>:train:  59% 151/255 [07:36<05:00,  2.89s/it][1,0]<stderr>:train:  60% 152/255 [07:39<04:57,  2.89s/it][1,0]<stderr>:train:  60% 153/255 [07:42<04:54,  2.89s/it][1,0]<stderr>:train:  60% 154/255 [07:45<04:51,  2.88s/it][1,0]<stderr>:train:  61% 155/255 [07:48<04:48,  2.88s/it][1,0]<stderr>:train:  61% 156/255 [07:51<04:45,  2.88s/it][1,0]<stderr>:train:  62% 157/255 [07:54<04:42,  2.88s/it][1,0]<stderr>:train:  62% 158/255 [07:57<04:39,  2.88s/it][1,0]<stderr>:train:  62% 159/255 [07:59<04:36,  2.88s/it][1,0]<stderr>:train:  63% 160/255 [08:02<04:33,  2.88s/it][1,0]<stderr>:train:  63% 161/255 [08:05<04:30,  2.88s/it][1,0]<stderr>:train:  64% 162/255 [08:08<04:27,  2.88s/it][1,0]<stderr>:train:  64% 163/255 [08:11<04:24,  2.88s/it][1,0]<stderr>:train:  64% 164/255 [08:14<04:22,  2.88s/it][1,0]<stderr>:train:  65% 165/255 [08:17<04:19,  2.88s/it][1,0]<stderr>:train:  65% 166/255 [08:20<04:16,  2.88s/it][1,0]<stderr>:train:  65% 167/255 [08:22<04:13,  2.88s/it][1,0]<stderr>:train:  66% 168/255 [08:25<04:10,  2.88s/it][1,0]<stderr>:train:  66% 169/255 [08:28<04:07,  2.88s/it][1,0]<stderr>:train:  67% 170/255 [08:31<04:04,  2.88s/it][1,0]<stderr>:train:  67% 171/255 [08:34<04:01,  2.88s/it][1,0]<stderr>:train:  67% 172/255 [08:37<03:58,  2.88s/it][1,0]<stderr>:train:  68% 173/255 [08:40<03:55,  2.88s/it][1,0]<stderr>:train:  68% 174/255 [08:43<03:52,  2.88s/it][1,0]<stderr>:train:  69% 175/255 [08:46<03:50,  2.88s/it][1,0]<stderr>:train:  69% 176/255 [08:48<03:47,  2.88s/it][1,0]<stderr>:train:  69% 177/255 [08:51<03:44,  2.88s/it][1,0]<stderr>:train:  70% 178/255 [08:54<03:42,  2.89s/it][1,0]<stderr>:train:  70% 179/255 [08:57<03:38,  2.88s/it][1,0]<stderr>:train:  71% 180/255 [09:00<03:36,  2.88s/it][1,0]<stderr>:train:  71% 181/255 [09:03<03:33,  2.88s/it][1,0]<stderr>:train:  71% 182/255 [09:06<03:30,  2.89s/it][1,0]<stderr>:train:  72% 183/255 [09:09<03:27,  2.88s/it][1,0]<stderr>:train:  72% 184/255 [09:11<03:24,  2.88s/it][1,0]<stderr>:train:  73% 185/255 [09:14<03:21,  2.88s/it][1,0]<stderr>:train:  73% 186/255 [09:17<03:18,  2.88s/it][1,0]<stderr>:train:  73% 187/255 [09:20<03:16,  2.89s/it][1,0]<stderr>:train:  74% 188/255 [09:23<03:13,  2.88s/it][1,0]<stderr>:train:  74% 189/255 [09:26<03:10,  2.88s/it][1,0]<stderr>:train:  75% 190/255 [09:29<03:07,  2.88s/it][1,0]<stderr>:train:  75% 191/255 [09:32<03:04,  2.89s/it][1,0]<stderr>:train:  75% 192/255 [09:35<03:01,  2.89s/it][1,0]<stderr>:train:  76% 193/255 [09:37<02:58,  2.88s/it][1,0]<stderr>:train:  76% 194/255 [09:40<02:55,  2.88s/it][1,0]<stderr>:train:  76% 195/255 [09:43<02:52,  2.88s/it][1,0]<stderr>:train:  77% 196/255 [09:46<02:49,  2.88s/it][1,0]<stderr>:train:  77% 197/255 [09:49<02:46,  2.88s/it][1,0]<stderr>:train:  78% 198/255 [09:52<02:44,  2.88s/it][1,0]<stderr>:train:  78% 199/255 [09:55<02:41,  2.88s/it][1,0]<stderr>:train:  78% 200/255 [09:58<02:38,  2.88s/it][1,0]<stderr>:train:  79% 201/255 [10:00<02:35,  2.88s/it][1,0]<stderr>:train:  79% 202/255 [10:03<02:32,  2.88s/it][1,0]<stderr>:train:  80% 203/255 [10:06<02:29,  2.88s/it][1,0]<stderr>:train:  80% 204/255 [10:09<02:27,  2.88s/it][1,0]<stderr>:train:  80% 205/255 [10:12<02:24,  2.88s/it][1,0]<stderr>:train:  81% 206/255 [10:15<02:21,  2.88s/it][1,0]<stderr>:train:  81% 207/255 [10:18<02:18,  2.88s/it][1,0]<stderr>:train:  82% 208/255 [10:21<02:15,  2.88s/it][1,0]<stderr>:train:  82% 209/255 [10:23<02:12,  2.88s/it][1,0]<stderr>:train:  82% 210/255 [10:26<02:09,  2.88s/it][1,0]<stderr>:train:  83% 211/255 [10:29<02:06,  2.88s/it][1,0]<stderr>:train:  83% 212/255 [10:32<02:03,  2.88s/it][1,0]<stderr>:train:  84% 213/255 [10:35<02:00,  2.88s/it][1,0]<stderr>:train:  84% 214/255 [10:38<01:57,  2.88s/it][1,0]<stderr>:train:  84% 215/255 [10:41<01:55,  2.88s/it][1,0]<stderr>:train:  85% 216/255 [10:44<01:52,  2.88s/it][1,0]<stderr>:train:  85% 217/255 [10:47<01:49,  2.89s/it][1,0]<stderr>:train:  85% 218/255 [10:49<01:46,  2.88s/it][1,0]<stderr>:train:  86% 219/255 [10:52<01:43,  2.88s/it][1,0]<stderr>:train:  86% 220/255 [10:55<01:40,  2.88s/it][1,0]<stderr>:train:  87% 221/255 [10:58<01:38,  2.88s/it][1,0]<stderr>:train:  87% 222/255 [11:01<01:35,  2.89s/it][1,0]<stderr>:train:  87% 223/255 [11:04<01:32,  2.89s/it][1,0]<stderr>:train:  88% 224/255 [11:07<01:29,  2.89s/it][1,0]<stderr>:train:  88% 225/255 [11:10<01:26,  2.88s/it][1,0]<stderr>:train:  89% 226/255 [11:13<01:23,  2.88s/it][1,0]<stderr>:train:  89% 227/255 [11:15<01:20,  2.88s/it][1,0]<stderr>:train:  89% 228/255 [11:18<01:17,  2.88s/it][1,0]<stderr>:train:  90% 229/255 [11:21<01:14,  2.88s/it][1,0]<stderr>:train:  90% 230/255 [11:24<01:12,  2.89s/it][1,0]<stderr>:train:  91% 231/255 [11:27<01:09,  2.88s/it][1,0]<stderr>:train:  91% 232/255 [11:30<01:06,  2.88s/it][1,0]<stderr>:train:  91% 233/255 [11:33<01:03,  2.88s/it][1,0]<stderr>:train:  92% 234/255 [11:36<01:00,  2.88s/it][1,0]<stderr>:train:  92% 235/255 [11:38<00:57,  2.89s/it][1,0]<stderr>:train:  93% 236/255 [11:41<00:54,  2.88s/it][1,0]<stderr>:train:  93% 237/255 [11:44<00:51,  2.88s/it][1,0]<stderr>:train:  93% 238/255 [11:47<00:49,  2.88s/it][1,0]<stderr>:train:  94% 239/255 [11:50<00:46,  2.88s/it][1,0]<stderr>:train:  94% 240/255 [11:53<00:43,  2.89s/it][1,0]<stderr>:train:  95% 241/255 [11:56<00:40,  2.88s/it][1,0]<stderr>:train:  95% 242/255 [11:59<00:37,  2.88s/it][1,0]<stderr>:train:  95% 243/255 [12:02<00:34,  2.88s/it][1,0]<stderr>:train:  96% 244/255 [12:04<00:31,  2.89s/it][1,0]<stderr>:train:  96% 245/255 [12:07<00:28,  2.89s/it][1,0]<stderr>:train:  96% 246/255 [12:10<00:26,  2.89s/it][1,0]<stderr>:train:  97% 247/255 [12:13<00:23,  2.89s/it][1,0]<stderr>:train:  97% 248/255 [12:16<00:20,  2.89s/it][1,0]<stderr>:train:  98% 249/255 [12:19<00:17,  2.89s/it][1,0]<stderr>:train:  98% 250/255 [12:22<00:14,  2.89s/it][1,0]<stderr>:train:  98% 251/255 [12:25<00:11,  2.89s/it][1,0]<stderr>:train:  99% 252/255 [12:28<00:08,  2.89s/it][1,0]<stderr>:train:  99% 253/255 [12:30<00:05,  2.89s/it][1,0]<stderr>:train: 100% 254/255 [12:33<00:02,  2.89s/it][1,0]<stderr>:train: 100% 255/255 [12:36<00:00,  2.69s/it][1,0]<stderr>:train: 100% 255/255 [12:36<00:00,  2.97s/it][1,1]<stdout>:         1137808 function calls (1123981 primitive calls) in 756.128 seconds
[1,1]<stdout>:
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:      255  531.175    2.083  531.175    2.083 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:      511   98.109    0.192   98.109    0.192 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315   55.579    0.017   55.579    0.017 {built-in method batch_norm}
[1,1]<stdout>:     3315   13.680    0.004   13.680    0.004 {built-in method conv2d}
[1,1]<stdout>:        4   12.063    3.016   12.063    3.016 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:    29835   11.042    0.000   11.042    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:      510    8.198    0.016    8.198    0.016 {built-in method dropout}
[1,1]<stdout>:      813    4.325    0.005    4.325    0.005 {method 'acquire' of '_thread.lock' objects}
[1,1]<stdout>:    29580    3.689    0.000    3.689    0.000 {method 'scatter_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29580    3.285    0.000    3.285    0.000 {method 'split_with_sizes' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    1.862    0.007    1.862    0.007 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    1.683    0.000    1.683    0.000 {built-in method builtins.sum}
[1,1]<stdout>:    29580    1.647    0.000    1.647    0.000 {built-in method zeros}
[1,1]<stdout>:     3825    1.449    0.000    1.449    0.000 {built-in method relu_}
[1,1]<stdout>:      255    1.310    0.005   23.805    0.093 optimizer.py:232(synchronize)
[1,1]<stdout>:    29580    0.760    0.000    0.760    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    29580    0.708    0.000    0.708    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    15045    0.643    0.000    0.643    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    0.633    0.000    0.633    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    14790    0.584    0.000    0.584    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      765    0.437    0.001    0.437    0.001 {built-in method addmm}
[1,1]<stdout>:     1275    0.355    0.000    0.355    0.000 {built-in method max_pool2d}
[1,1]<stdout>:    14790    0.317    0.000    0.317    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     3315    0.295    0.000   55.992    0.017 batchnorm.py:99(forward)
[1,1]<stdout>:      255    0.278    0.001    0.278    0.001 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,1]<stdout>:        1    0.163    0.163  756.127  756.127 train.py:338(train)
[1,1]<stdout>:    29835    0.158    0.000   11.206    0.000 mpi_ops.py:928(synchronize)
[1,1]<stdout>:14280/510    0.135    0.000   82.855    0.162 module.py:710(_call_impl)
[1,1]<stdout>:      255    0.116    0.000    0.116    0.000 {built-in method flatten}
[1,1]<stdout>:    88740    0.104    0.000    0.116    0.000 tensor.py:725(grad)
[1,1]<stdout>:      510    0.102    0.000    0.102    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        8    0.101    0.013    0.101    0.013 {method 'dump' of '_pickle.Pickler' objects}
[1,1]<stdout>:    29580    0.075    0.000    5.411    0.000 compression.py:268(desparsify)
[1,1]<stdout>:      255    0.072    0.000    0.072    0.000 {built-in method torch._C._nn.nll_loss}
[1,1]<stdout>:      255    0.066    0.000    1.467    0.006 sgd.py:75(step)
[1,1]<stdout>:      510    0.050    0.000   80.470    0.158 container.py:115(forward)
[1,1]<stdout>:    29580    0.047    0.000    3.341    0.000 tensor.py:367(split)
[1,1]<stdout>:      765    0.046    0.000    0.046    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    15046    0.041    0.000    0.041    0.000 basics.py:183(size)
[1,1]<stdout>:     3370    0.037    0.000    0.042    0.000 module.py:774(__setattr__)
[1,1]<stdout>:      255    0.036    0.000    1.029    0.004 optimizer.py:166(zero_grad)
[1,1]<stdout>:    29580    0.034    0.000    6.153    0.000 compression.py:252(decompress)
[1,1]<stdout>:      269    0.034    0.000    0.034    0.000 {method 'clear' of 'dict' objects}
[1,1]<stdout>:      256    0.033    0.000    0.055    0.000 sampler.py:206(__iter__)
[1,1]<stdout>:     3315    0.029    0.000   55.633    0.017 functional.py:1998(batch_norm)
[1,1]<stdout>:    29070    0.027    0.000    0.027    0.000 module.py:758(__getattr__)
[1,1]<stdout>:       14    0.027    0.002    0.027    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:      255    0.025    0.000    0.025    0.000 {built-in method ones_like}
[1,1]<stdout>:     3315    0.024    0.000   13.706    0.004 conv.py:410(_conv_forward)
[1,1]<stdout>:    14280    0.020    0.000    0.020    0.000 {built-in method torch._C._get_tracing_state}
[1,1]<stdout>:      255    0.016    0.000    0.016    0.000 {built-in method tensor}
[1,1]<stdout>:        1    0.015    0.015    0.015    0.015 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:    85070    0.015    0.000    0.015    0.000 {built-in method builtins.isinstance}
[1,1]<stdout>:     3315    0.014    0.000   13.726    0.004 conv.py:418(forward)
[1,1]<stdout>:    44370    0.014    0.000    0.023    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:     3825    0.014    0.000    1.463    0.000 functional.py:1106(relu)
[1,1]<stdout>:    90530    0.013    0.000    0.013    0.000 {built-in method builtins.hasattr}
[1,1]<stdout>:    75733    0.013    0.000    0.013    0.000 {method 'append' of 'list' objects}
[1,1]<stdout>:     3315    0.012    0.000    0.013    0.000 functional.py:1980(_verify_batch_size)
[1,1]<stdout>:     4080    0.012    0.000    0.012    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.011    0.000    0.666    0.003 {built-in method apply}
[1,1]<stdout>:    57630    0.010    0.000    0.010    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,1]<stdout>:     3825    0.010    0.000    1.473    0.000 activation.py:101(forward)
[1,1]<stdout>:    44399    0.009    0.000    0.009    0.000 {built-in method builtins.id}
[1,1]<stdout>:      255    0.009    0.000  531.218    2.083 tensor.py:155(backward)
[1,1]<stdout>:      255    0.008    0.000    0.008    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,1]<stdout>:      765    0.008    0.000    0.499    0.001 functional.py:1655(linear)
[1,1]<stdout>:      255    0.007    0.000   25.288    0.099 optimizer.py:337(step)
[1,1]<stdout>:     1275    0.007    0.000    0.371    0.000 pooling.py:156(forward)
[1,1]<stdout>:51530/51527    0.007    0.000    0.007    0.000 {built-in method builtins.len}
[1,1]<stdout>:      255    0.007    0.000    0.007    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.006    0.000   80.889    0.317 vgg.py:42(forward)
[1,1]<stdout>:    29840    0.006    0.000    0.006    0.000 {method 'pop' of 'dict' objects}
[1,1]<stdout>:        8    0.006    0.001    0.107    0.013 reduction.py:58(dump)
[1,1]<stdout>:      255    0.005    0.000  531.209    2.083 __init__.py:57(backward)
[1,1]<stdout>:      510    0.005    0.000    8.205    0.016 functional.py:950(dropout)
[1,1]<stdout>:      256    0.005    0.000    4.422    0.017 dataloader.py:945(_next_data)
[1,1]<stdout>:      255    0.005    0.000   25.293    0.099 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:     3315    0.005    0.000    0.007    0.000 batchnorm.py:275(_check_input_dim)
[1,1]<stdout>:      255    0.004    0.000    0.004    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     1275    0.004    0.000    0.359    0.000 functional.py:564(_max_pool2d)
[1,1]<stdout>:      255    0.004    0.000    0.081    0.000 functional.py:2158(nll_loss)
[1,1]<stdout>:      765    0.004    0.000    0.504    0.001 linear.py:90(forward)
[1,1]<stdout>:      255    0.004    0.000    4.330    0.017 queue.py:153(get)
[1,1]<stdout>:     1275    0.004    0.000    0.364    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:      255    0.004    0.000    1.476    0.006 grad_mode.py:12(decorate_context)
[1,1]<stdout>:      255    0.004    0.000    0.029    0.000 __init__.py:25(_make_grads)
[1,1]<stdout>:      255    0.003    0.000    0.022    0.000 mpi_ops.py:105(_allreduce_async)
[1,1]<stdout>:      521    0.003    0.000    0.006    0.000 threading.py:341(notify)
[1,1]<stdout>:      255    0.003    0.000    0.005    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:      263    0.003    0.000    0.070    0.000 dataloader.py:991(_try_put_index)
[1,1]<stdout>:      255    0.003    0.000    1.948    0.008 functional.py:2370(cross_entropy)
[1,1]<stdout>:     4335    0.003    0.000    0.003    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.003    0.000    0.655    0.003 mpi_ops.py:191(forward)
[1,1]<stdout>:      255    0.003    0.000    0.669    0.003 mpi_ops.py:209(allreduce)
[1,1]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,1]<stdout>:      260    0.003    0.000    0.012    0.000 queues.py:80(put)
[1,1]<stdout>:      255    0.003    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,1]<stdout>:      256    0.003    0.000   16.628    0.065 std.py:1159(__iter__)
[1,1]<stdout>:      255    0.003    0.000    4.338    0.017 dataloader.py:912(_get_data)
[1,1]<stdout>:      255    0.002    0.000    1.032    0.004 optimizer.py:353(zero_grad)
[1,1]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,1]<stdout>:      255    0.002    0.000    0.285    0.001 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:      255    0.002    0.000    0.031    0.000 mpi_ops.py:152(allreduce_async)
[1,1]<stdout>:    10114    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,1]<stdout>:      255    0.002    0.000    1.951    0.008 loss.py:946(forward)
[1,1]<stdout>:      256    0.002    0.000    4.424    0.017 dataloader.py:362(__next__)
[1,1]<stdout>:      255    0.002    0.000    0.287    0.001 pooling.py:1110(forward)
[1,1]<stdout>:      255    0.002    0.000    0.004    0.000 threading.py:1071(is_alive)
[1,1]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,1]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,1]<stdout>:        1    0.002    0.002    0.002    0.002 {built-in method randperm}
[1,1]<stdout>:      255    0.002    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,1]<stdout>:      255    0.002    0.000    4.332    0.017 dataloader.py:766(_try_get_data)
[1,1]<stdout>:      255    0.002    0.000    0.002    0.000 basics.py:365(rocm_built)
[1,1]<stdout>:        1    0.002    0.002    0.018    0.018 distributed.py:68(__iter__)
[1,1]<stdout>:      765    0.002    0.000    0.005    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:      269    0.002    0.000    0.002    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:      510    0.002    0.000    0.002    0.000 container.py:107(__iter__)
[1,1]<stdout>:      510    0.002    0.000    8.206    0.016 dropout.py:57(forward)
[1,1]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,1]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:149(__init__)
[1,1]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,1]<stdout>:      527    0.001    0.000    0.002    0.000 threading.py:246(__enter__)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,1]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,1]<stdout>:      255    0.001    0.000    0.008    0.000 mpi_ops.py:92(_check_function)
[1,1]<stdout>:      255    0.001    0.000    0.049    0.000 dataloader.py:1010(_process_data)
[1,1]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:      510    0.001    0.000    0.002    0.000 _VF.py:13(__getattr__)
[1,1]<stdout>:        6    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,1]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,1]<stdout>:      601    0.001    0.000    0.056    0.000 {built-in method builtins.next}
[1,1]<stdout>:      875    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,1]<stdout>:      255    0.001    0.000    1.863    0.007 functional.py:1567(log_softmax)
[1,1]<stdout>:      266    0.001    0.000    0.001    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:      527    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,1]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,1]<stdout>:      530    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,1]<stdout>:      255    0.001    0.000    0.001    0.000 util.py:221(impl)
[1,1]<stdout>:      256    0.001    0.000    0.002    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,1]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
[1,1]<stdout>:      274    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,1]<stdout>:      258    0.000    0.000    0.001    0.000 queue.py:208(_qsize)
[1,1]<stdout>:        1    0.000    0.000  756.128  756.128 {built-in method builtins.exec}
[1,1]<stdout>:      263    0.000    0.000    0.056    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,1]<stdout>:        1    0.000    0.000   12.201   12.201 dataloader.py:690(__init__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,1]<stdout>:        4    0.000    0.000   12.172    3.043 popen_forkserver.py:41(_launch)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,1]<stdout>:       34    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,1]<stdout>:      269    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,1]<stdout>:      295    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:158(_start_thread)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,1]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,1]<stdout>:       14    0.000    0.000    0.028    0.002 connection.py:917(wait)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,1]<stdout>:        1    0.000    0.000  756.128  756.128 <string>:1(<module>)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:285(choice)
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,1]<stdout>:       15    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,1]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,1]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,1]<stdout>:        4    0.000    0.000    0.028    0.007 popen_fork.py:40(wait)
[1,1]<stdout>:        2    0.000    0.000    0.030    0.015 dataloader.py:1040(_shutdown_workers)
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 queues.py:36(__init__)
[1,1]<stdout>:      274    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,1]<stdout>:        4    0.000    0.000   12.173    3.043 process.py:110(start)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,1]<stdout>:        5    0.000    0.000    0.003    0.001 context.py:100(Queue)
[1,1]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,1]<stdout>:      527    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,1]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,1]<stdout>:        9    0.000    0.000    4.323    0.480 threading.py:270(wait)
[1,1]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,1]<stdout>:     55/1    0.000    0.000    0.000    0.000 module.py:1253(train)
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,1]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,1]<stdout>:       48    0.000    0.000    0.000    0.000 resource_tracker.py:70(ensure_running)
[1,1]<stdout>:       14    0.000    0.000    0.027    0.002 selectors.py:402(select)
[1,1]<stdout>:        4    0.000    0.000   12.172    3.043 popen_fork.py:15(__init__)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 context.py:65(Lock)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,1]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,1]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,1]<stdout>:        6    0.000    0.000    0.003    0.001 threading.py:834(start)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.028    0.007 process.py:142(join)
[1,1]<stdout>:        6    0.000    0.000    0.002    0.000 threading.py:540(wait)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,1]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,1]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,1]<stdout>:      283    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,1]<stdout>:       48    0.000    0.000    0.000    0.000 resource_tracker.py:134(_check_alive)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
[1,1]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,1]<stdout>:        4    0.000    0.000   12.172    3.043 context.py:288(_Popen)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,1]<stdout>:      104    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,1]<stdout>:       11    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,1]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,1]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x56268ec899a0}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:61(_cleanup)
[1,1]<stdout>:       50    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,1]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 resource_tracker.py:145(register)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,1]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,1]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,1]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,1]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,1]<stdout>:       70    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,1]<stdout>:        4    0.000    0.000   12.172    3.043 popen_forkserver.py:33(__init__)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:         1184082 function calls (1170255 primitive calls) in 756.124 seconds
[1,0]<stdout>:
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,1]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,0]<stdout>:      255  530.797    2.082  530.797    2.082 {method 'run_backward' of 'torch._C._EngineBase' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7fe3eef8ec10}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:      511   98.476    0.193   98.476    0.193 {method 'item' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       22    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:     3315   55.120    0.017   55.120    0.017 {built-in method batch_norm}
[1,0]<stdout>:     3315   13.696    0.004   13.696    0.004 {built-in method conv2d}
[1,0]<stdout>:        4   12.009    3.002   12.009    3.002 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:    29835   10.769    0.000   10.769    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:      510    8.237    0.016    8.237    0.016 {built-in method dropout}
[1,0]<stdout>:     1076    4.448    0.004    4.448    0.004 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:    29580    3.668    0.000    3.668    0.000 {method 'scatter_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29580    3.368    0.000    3.368    0.000 {method 'split_with_sizes' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:      255    1.858    0.007    1.858    0.007 {method 'log_softmax' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    15047    1.772    0.000    1.778    0.000 {built-in method builtins.sum}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,1]<stdout>:        6    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:    29580    1.696    0.000    1.696    0.000 {built-in method zeros}
[1,0]<stdout>:     3825    1.466    0.000    1.466    0.000 {built-in method relu_}
[1,0]<stdout>:      255    1.261    0.005   23.619    0.093 optimizer.py:232(synchronize)
[1,0]<stdout>:    14790    0.798    0.000    0.798    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29580    0.770    0.000    0.770    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:    29580    0.708    0.000    0.708    0.000 {method 'view' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    15045    0.618    0.000    0.618    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:    14790    0.481    0.000    0.481    0.000 {method 'set_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      765    0.417    0.001    0.417    0.001 {built-in method addmm}
[1,0]<stdout>:    14790    0.397    0.000    0.397    0.000 {method 'detach_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     1275    0.354    0.000    0.354    0.000 {built-in method max_pool2d}
[1,0]<stdout>:     3315    0.335    0.000   55.575    0.017 batchnorm.py:99(forward)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,0]<stdout>:      255    0.276    0.001    0.276    0.001 {built-in method torch._C._nn.adaptive_avg_pool2d}
[1,0]<stdout>:        1    0.182    0.182  756.124  756.124 train.py:338(train)
[1,0]<stdout>:      510    0.164    0.000    0.164    0.000 {method 'to' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:        8    0.159    0.020    0.159    0.020 {method 'dump' of '_pickle.Pickler' objects}
[1,0]<stdout>:14280/510    0.143    0.000   82.488    0.162 module.py:710(_call_impl)
[1,0]<stdout>:    29835    0.135    0.000   10.910    0.000 mpi_ops.py:928(synchronize)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,0]<stdout>:      255    0.116    0.000    0.116    0.000 {built-in method flatten}
[1,0]<stdout>:    88740    0.100    0.000    0.114    0.000 tensor.py:725(grad)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:    29580    0.075    0.000    5.439    0.000 compression.py:268(desparsify)
[1,0]<stdout>:      255    0.072    0.000    0.072    0.000 {built-in method torch._C._nn.nll_loss}
[1,0]<stdout>:      267    0.070    0.000    0.070    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      255    0.059    0.000    1.440    0.006 sgd.py:75(step)
[1,1]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:      510    0.051    0.000   80.112    0.157 container.py:115(forward)
[1,0]<stdout>:      255    0.047    0.000    1.297    0.005 optimizer.py:166(zero_grad)
[1,1]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,0]<stdout>:      765    0.046    0.000    0.046    0.000 {method 't' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:    29580    0.044    0.000    3.420    0.000 tensor.py:367(split)
[1,0]<stdout>:    15301    0.039    0.000    0.039    0.000 basics.py:183(size)
[1,0]<stdout>:     3370    0.035    0.000    0.040    0.000 module.py:774(__setattr__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,1]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:    29580    0.034    0.000    6.180    0.000 compression.py:252(decompress)
[1,0]<stdout>:     3315    0.031    0.000   55.178    0.017 functional.py:1998(batch_norm)
[1,0]<stdout>:      269    0.028    0.000    0.028    0.000 {method 'clear' of 'dict' objects}
[1,0]<stdout>:       14    0.027    0.002    0.027    0.002 {method 'poll' of 'select.poll' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:    29070    0.026    0.000    0.026    0.000 module.py:758(__getattr__)
[1,0]<stdout>:      255    0.025    0.000    0.025    0.000 {built-in method ones_like}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:      256    0.024    0.000    0.043    0.000 sampler.py:206(__iter__)
[1,0]<stdout>:     3315    0.023    0.000   13.720    0.004 conv.py:410(_conv_forward)
[1,0]<stdout>:    14280    0.021    0.000    0.021    0.000 {built-in method torch._C._get_tracing_state}
[1,0]<stdout>:      255    0.019    0.000    0.019    0.000 {built-in method tensor}
[1,0]<stdout>:     3315    0.016    0.000   13.741    0.004 conv.py:418(forward)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:    91045    0.016    0.000    0.016    0.000 {built-in method builtins.hasattr}
[1,0]<stdout>:    44370    0.014    0.000    0.024    0.000 tensor.py:458(__hash__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:      255    0.014    0.000    0.014    0.000 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_allreduce_async_torch_FloatTensor}
[1,0]<stdout>:     3315    0.014    0.000    0.015    0.000 functional.py:1980(_verify_batch_size)
[1,0]<stdout>:      255    0.014    0.000    0.045    0.000 summary.py:137(scalar)
[1,0]<stdout>:    86603    0.013    0.000    0.013    0.000 {built-in method builtins.isinstance}
[1,0]<stdout>:    75733    0.013    0.000    0.013    0.000 {method 'append' of 'list' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:104(acquire)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        8    0.013    0.002    0.172    0.022 reduction.py:58(dump)
[1,0]<stdout>:     3825    0.012    0.000    1.479    0.000 functional.py:1106(relu)
[1,0]<stdout>:      255    0.012    0.000  530.839    2.082 __init__.py:57(backward)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,0]<stdout>:        1    0.012    0.012    0.012    0.012 {method 'tolist' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     4080    0.012    0.000    0.012    0.000 {method 'size' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     3825    0.011    0.000    1.490    0.000 activation.py:101(forward)
[1,0]<stdout>:      255    0.011    0.000    0.584    0.002 {built-in method apply}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,1]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:    44399    0.010    0.000    0.010    0.000 {built-in method builtins.id}
[1,1]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:    57630    0.009    0.000    0.009    0.000 {method 'values' of 'collections.OrderedDict' objects}
[1,0]<stdout>:      255    0.008    0.000    0.021    0.000 x2num.py:11(check_nan)
[1,0]<stdout>:      257    0.008    0.000    0.016    0.000 std.py:355(format_meter)
[1,0]<stdout>:      765    0.008    0.000    0.477    0.001 functional.py:1655(linear)
[1,1]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:51535/51532    0.007    0.000    0.007    0.000 {built-in method builtins.len}
[1,0]<stdout>:      255    0.007    0.000    0.124    0.000 std.py:1197(update)
[1,0]<stdout>:      255    0.007    0.000   25.076    0.098 optimizer.py:337(step)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,0]<stdout>:      255    0.007    0.000    0.007    0.000 {method 'new' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:     1275    0.007    0.000    0.370    0.000 pooling.py:156(forward)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,0]<stdout>:      255    0.007    0.000   80.528    0.316 vgg.py:42(forward)
[1,0]<stdout>:      255    0.007    0.000  530.845    2.082 tensor.py:155(backward)
[1,0]<stdout>:    29842    0.006    0.000    0.006    0.000 {method 'pop' of 'dict' objects}
[1,0]<stdout>:      255    0.006    0.000    0.006    0.000 {method 'reduce' of 'numpy.ufunc' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:      256    0.006    0.000   16.864    0.066 std.py:1159(__iter__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:108(release)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,0]<stdout>:      515    0.005    0.000    0.026    0.000 queues.py:80(put)
[1,0]<stdout>:     3315    0.005    0.000    0.008    0.000 batchnorm.py:275(_check_input_dim)
[1,0]<stdout>:      255    0.005    0.000    0.005    0.000 {method 'type' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      510    0.005    0.000    8.244    0.016 functional.py:950(dropout)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:    11449    0.004    0.000    0.006    0.000 utils.py:330(<genexpr>)
[1,0]<stdout>:     1275    0.004    0.000    0.358    0.000 functional.py:564(_max_pool2d)
[1,0]<stdout>:     1275    0.004    0.000    0.363    0.000 _jit_internal.py:237(fn)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:      776    0.004    0.000    0.009    0.000 threading.py:341(notify)
[1,0]<stdout>:      256    0.004    0.000    4.522    0.018 dataloader.py:945(_next_data)
[1,0]<stdout>:      255    0.004    0.000   25.080    0.098 lr_scheduler.py:62(wrapper)
[1,1]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:      765    0.004    0.000    0.483    0.001 linear.py:90(forward)
[1,0]<stdout>:     1530    0.004    0.000    0.004    0.000 std.py:233(__call__)
[1,0]<stdout>:     1579    0.004    0.000    0.004    0.000 {method 'format' of 'str' objects}
[1,0]<stdout>:      524    0.004    0.000    0.004    0.000 {method 'release' of '_thread.lock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:      255    0.004    0.000    1.450    0.006 grad_mode.py:12(decorate_context)
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 {built-in method numpy.array}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:     3315    0.003    0.000    0.005    0.000 __init__.py:31(__get__)
[1,0]<stdout>:      255    0.003    0.000    0.029    0.000 __init__.py:25(_make_grads)
[1,0]<stdout>:     4335    0.003    0.000    0.003    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:      255    0.003    0.000    0.024    0.000 writer.py:131(add_summary)
[1,0]<stdout>:      255    0.003    0.000    0.006    0.000 train.py:409(adjust_learning_rate)
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:      255    0.003    0.000    0.081    0.000 functional.py:2158(nll_loss)
[1,0]<stdout>:      255    0.003    0.000    0.029    0.000 x2num.py:18(make_np)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,1]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,0]<stdout>:      255    0.003    0.000    0.027    0.000 mpi_ops.py:105(_allreduce_async)
[1,0]<stdout>:      255    0.003    0.000    0.587    0.002 mpi_ops.py:209(allreduce)
[1,0]<stdout>:      255    0.003    0.000    0.074    0.000 writer.py:401(add_scalar)
[1,0]<stdout>:      255    0.003    0.000    4.445    0.017 queue.py:153(get)
[1,1]<stdout>:        1    0.000    0.000    0.001    0.001 threading.py:979(join)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,0]<stdout>:      263    0.003    0.000    0.055    0.000 dataloader.py:991(_try_put_index)
[1,0]<stdout>:      256    0.003    0.000    0.003    0.000 {built-in method now}
[1,0]<stdout>:      255    0.003    0.000    0.021    0.000 writer.py:115(add_event)
[1,0]<stdout>:      257    0.003    0.000    0.003    0.000 std.py:1445(format_dict)
[1,1]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:      255    0.003    0.000    1.945    0.008 loss.py:946(forward)
[1,0]<stdout>:    10114    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:      255    0.003    0.000    1.300    0.005 optimizer.py:353(zero_grad)
[1,0]<stdout>:      255    0.003    0.000    0.003    0.000 grad_mode.py:65(__enter__)
[1,0]<stdout>:      256    0.003    0.000    0.114    0.000 std.py:1324(refresh)
[1,0]<stdout>:      255    0.002    0.000    0.574    0.002 mpi_ops.py:191(forward)
[1,0]<stdout>:      255    0.002    0.000    4.451    0.017 dataloader.py:912(_get_data)
[1,0]<stdout>:      255    0.002    0.000    1.942    0.008 functional.py:2370(cross_entropy)
[1,1]<stdout>:        1    0.000    0.000   12.201   12.201 dataloader.py:287(__iter__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 utils.py:29(_list_with_default)
[1,0]<stdout>:      257    0.002    0.000    0.108    0.000 std.py:1463(display)
[1,0]<stdout>:      255    0.002    0.000    0.281    0.001 functional.py:909(adaptive_avg_pool2d)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,1]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:    10710    0.002    0.000    0.002    0.000 __init__.py:2277(is_scripting)
[1,0]<stdout>:      257    0.002    0.000    0.084    0.000 std.py:348(print_status)
[1,0]<stdout>:      255    0.002    0.000    0.283    0.001 pooling.py:1110(forward)
[1,0]<stdout>:     3315    0.002    0.000    0.002    0.000 {built-in method torch._C._get_cudnn_enabled}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:      255    0.002    0.000    0.008    0.000 fromnumeric.py:69(_wrapreduction)
[1,0]<stdout>:      255    0.002    0.000    0.036    0.000 mpi_ops.py:152(allreduce_async)
[1,0]<stdout>:     2040    0.002    0.000    0.004    0.000 {built-in method builtins.any}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,1]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:    11192    0.002    0.000    0.002    0.000 {built-in method unicodedata.east_asian_width}
[1,0]<stdout>:        1    0.002    0.002    0.015    0.015 distributed.py:68(__iter__)
[1,0]<stdout>:      255    0.002    0.000    0.010    0.000 fromnumeric.py:2123(sum)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,1]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,0]<stdout>:      257    0.002    0.000    0.021    0.000 std.py:1149(__str__)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 threading.py:1071(is_alive)
[1,0]<stdout>:      510    0.002    0.000    8.246    0.016 dropout.py:57(forward)
[1,0]<stdout>:      783    0.002    0.000    0.003    0.000 threading.py:246(__enter__)
[1,0]<stdout>:      255    0.002    0.000    0.003    0.000 summary.py:28(_clean_tag)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:      260    0.002    0.000    0.002    0.000 std.py:104(acquire)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:      510    0.002    0.000    0.002    0.000 container.py:107(__iter__)
[1,0]<stdout>:      779    0.002    0.000    0.002    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      512    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
[1,0]<stdout>:      255    0.001    0.000    0.018    0.000 event_file_writer.py:132(add_event)
[1,0]<stdout>:      260    0.001    0.000    0.002    0.000 std.py:108(release)
[1,0]<stdout>:      765    0.001    0.000    0.005    0.000 _overrides.py:779(has_torch_function)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 basics.py:365(rocm_built)
[1,0]<stdout>:      257    0.001    0.000    0.072    0.000 std.py:342(fp_write)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
[1,0]<stdout>:      256    0.001    0.000    4.524    0.018 dataloader.py:362(__next__)
[1,0]<stdout>:      255    0.001    0.000    0.002    0.000 grad_mode.py:149(__init__)
[1,0]<stdout>:      255    0.001    0.000    0.013    0.000 <__array_function__ internals>:2(sum)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,0]<stdout>:      255    0.001    0.000    0.003    0.000 grad_mode.py:69(__exit__)
[1,0]<stdout>:      255    0.001    0.000    4.446    0.017 dataloader.py:766(_try_get_data)
[1,0]<stdout>:      881    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:318(_check_caffe2_blob)
[1,0]<stdout>:       20    0.001    0.000    0.003    0.000 synchronize.py:50(__init__)
[1,1]<stdout>:        5    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 numeric.py:1858(isscalar)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:      513    0.001    0.000    0.003    0.000 std.py:288(format_interval)
[1,0]<stdout>:      255    0.001    0.000    0.006    0.000 mpi_ops.py:101(_allreduce_function_factory)
[1,0]<stdout>:      765    0.001    0.000    0.001    0.000 functional.py:1670(<listcomp>)
[1,0]<stdout>:     2295    0.001    0.000    0.002    0.000 _overrides.py:792(<genexpr>)
[1,0]<stdout>:      255    0.001    0.000    0.011    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:      510    0.001    0.000    0.002    0.000 _VF.py:13(__getattr__)
[1,0]<stdout>:      255    0.001    0.000    0.038    0.000 dataloader.py:1010(_process_data)
[1,0]<stdout>:       88    0.001    0.000    0.001    0.000 {built-in method posix.write}
[1,0]<stdout>:        1    0.001    0.001    0.001    0.001 {built-in method randperm}
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:      255    0.001    0.000    0.008    0.000 mpi_ops.py:92(_check_function)
[1,0]<stdout>:      257    0.001    0.000    0.010    0.000 utils.py:333(disp_len)
[1,0]<stdout>:      783    0.001    0.000    0.001    0.000 threading.py:249(__exit__)
[1,0]<stdout>:      255    0.001    0.000    1.859    0.007 functional.py:1567(log_softmax)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,0]<stdout>:      257    0.001    0.000    0.009    0.000 utils.py:329(_text_width)
[1,0]<stdout>:      787    0.001    0.000    0.001    0.000 threading.py:261(_is_owned)
[1,0]<stdout>:      512    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 writer.py:333(_get_file_writer)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,1]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:      603    0.001    0.000    0.045    0.000 {built-in method builtins.next}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,0]<stdout>:      516    0.001    0.000    0.070    0.000 utils.py:143(inner)
[1,0]<stdout>:      255    0.001    0.000    0.001    0.000 util.py:221(impl)
[1,0]<stdout>:      531    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2415(<listcomp>)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,1]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:      255    0.000    0.000    0.001    0.000 queue.py:216(_get)
[1,0]<stdout>:        4    0.000    0.000   12.184    3.046 popen_forkserver.py:41(_launch)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 utils.py:35(<listcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
[1,0]<stdout>:      257    0.000    0.000    0.000    0.000 {built-in method builtins.max}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 queue.py:208(_qsize)
[1,0]<stdout>:      263    0.000    0.000    0.044    0.000 dataloader.py:356(_next_index)
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
[1,0]<stdout>:       36    0.000    0.000    0.000    0.000 util.py:186(__init__)
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {built-in method torch._C.set_grad_enabled}
[1,0]<stdout>:        1    0.000    0.000  756.124  756.124 {built-in method builtins.exec}
[1,0]<stdout>:     1026    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
[1,1]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,1]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:      256    0.000    0.000    0.001    0.000 threading.py:1017(_wait_for_tstate_lock)
[1,0]<stdout>:     1277    0.000    0.000    0.000    0.000 {built-in method time.time}
[1,0]<stdout>:        1    0.000    0.000   12.209   12.209 dataloader.py:690(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 functional.py:2204(<listcomp>)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'is_contiguous' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        6    0.000    0.000    0.009    0.001 queues.py:158(_start_thread)
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 random.py:250(_randbelow_with_getrandbits)
[1,0]<stdout>:      297    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:761(__init__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
[1,0]<stdout>:       14    0.000    0.000    0.028    0.002 connection.py:917(wait)
[1,0]<stdout>:       29    0.000    0.000    0.001    0.000 util.py:205(__call__)
[1,0]<stdout>:      765    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
[1,0]<stdout>:      160    0.000    0.000    0.001    0.000 random.py:285(choice)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:234(<dictcomp>)
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 threading.py:513(is_set)
[1,0]<stdout>:      512    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 optimizer.py:235(<listcomp>)
[1,0]<stdout>:      783    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
[1,0]<stdout>:      510    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 threading.py:222(__init__)
[1,0]<stdout>:        4    0.000    0.000   12.184    3.046 popen_fork.py:15(__init__)
[1,0]<stdout>:       40    0.000    0.000    0.001    0.000 resource_tracker.py:153(_send)
[1,0]<stdout>:        1    0.000    0.000  756.124  756.124 <string>:1(<module>)
[1,0]<stdout>:      261    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        5    0.000    0.000    0.004    0.001 queues.py:36(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:150(get_preparation_data)
[1,0]<stdout>:        4    0.000    0.000   12.185    3.046 process.py:110(start)
[1,0]<stdout>:       44    0.000    0.000    0.000    0.000 synchronize.py:100(__getstate__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method io.open}
[1,0]<stdout>:      275    0.000    0.000    0.000    0.000 {built-in method time.monotonic}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:144(__next__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 forkserver.py:328(read_signed)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
[1,0]<stdout>:       11    0.000    0.000    4.447    0.404 threading.py:270(wait)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1168(named_children)
[1,0]<stdout>:     55/1    0.000    0.000    0.001    0.001 module.py:1253(train)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 fromnumeric.py:2118(_sum_dispatcher)
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
[1,0]<stdout>:        5    0.000    0.000    0.004    0.001 context.py:100(Queue)
[1,0]<stdout>:       48    0.000    0.000    0.001    0.000 resource_tracker.py:70(ensure_running)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
[1,0]<stdout>:      259    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
[1,0]<stdout>:       14    0.000    0.000    0.001    0.000 popen_forkserver.py:61(poll)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:80(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.029    0.015 dataloader.py:1040(_shutdown_workers)
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 forkserver.py:76(connect_to_new_process)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:84(_cleanup)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 tempfile.py:147(<listcomp>)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:35(compress)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 synchronize.py:114(_make_name)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:347(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.027    0.002 selectors.py:402(select)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:967(reduce_connection)
[1,0]<stdout>:       11    0.000    0.000    0.002    0.000 context.py:65(Lock)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:351(register)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:344(__reduce__)
[1,0]<stdout>:       48    0.000    0.000    0.000    0.000 resource_tracker.py:134(_check_alive)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 reduction.py:38(__init__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:234(register)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 {built-in method _multiprocessing.sem_unlink}
[1,0]<stdout>:       13    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
[1,0]<stdout>:        4    0.000    0.000   12.184    3.046 context.py:288(_Popen)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
[1,0]<stdout>:      260    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:67(_after_fork)
[1,0]<stdout>:        7    0.000    0.000    0.008    0.001 threading.py:540(wait)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:219(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'connect' of '_socket.socket' objects}
[1,0]<stdout>:       84    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
[1,0]<stdout>:      255    0.000    0.000    0.000    0.000 compression.py:40(decompress)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:846(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 tempfile.py:133(rng)
[1,0]<stdout>:      271    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
[1,0]<stdout>:        4    0.000    0.000    0.001    0.000 process.py:61(_cleanup)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
[1,0]<stdout>:      109    0.000    0.000    0.000    0.000 module.py:1159(children)
[1,0]<stdout>:       21    0.000    0.000    0.000    0.000 {built-in method posix.close}
[1,0]<stdout>:        4    0.000    0.000    0.027    0.007 popen_fork.py:40(wait)
[1,0]<stdout>:        4    0.000    0.000    0.027    0.007 process.py:142(join)
[1,0]<stdout>:      106    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
[1,1]<stdout>:this epoch's train spend:756.1440608501434s
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:268(close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 reduction.py:191(DupFd)
[1,0]<stdout>:        7    0.000    0.000    0.008    0.001 threading.py:834(start)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:134(close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:338(__init__)
[1,0]<stdout>:       40    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55f83cccc9a0}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 queues.py:57(__getstate__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 forkserver.py:105(ensure_running)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:516(Pipe)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:145(register)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 reduction.py:145(sendfds)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method empty}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'random_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 context.py:85(BoundedSemaphore)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:505(__init__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 weakref.py:103(remove)
[1,0]<stdout>:       80    0.000    0.000    0.000    0.000 context.py:351(get_spawning_popen)
[1,0]<stdout>:       24    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {built-in method posix.read}
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:200(_finalize_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1177(_make_invoke_excepthook)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 util.py:229(cancel)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'sendmsg' of '_socket.socket' objects}
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:209(__init__)
[1,0]<stdout>:        4    0.000    0.000   12.184    3.046 popen_forkserver.py:33(__init__)
[1,0]<stdout>:       53    0.000    0.000    0.000    0.000 util.py:48(debug)
[1,0]<stdout>:      160    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:33(__init__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:37(duplicate_for_child)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
[1,0]<stdout>:       11    0.000    0.000    0.002    0.000 synchronize.py:161(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}
[1,0]<stdout>:       72    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:94(__enter__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:117(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:161(_lazy_init)
[1,0]<stdout>:        7    0.000    0.000    0.000    0.000 threading.py:1110(daemon)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 dataloader.py:1017(_shutdown_worker)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 context.py:354(set_spawning_popen)
[1,0]<stdout>:       56    0.000    0.000    0.000    0.000 context.py:357(assert_spawning)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:334(set)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:21(_fileobj_to_fd)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:583(_decr_instances)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 queues.py:150(cancel_join_thread)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:282(_screen_shape_linux)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 <string>:1(__new__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 folder.py:145(__len__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:433(_flush_std_streams)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 {method 'unpack' of 'Struct' objects}
[1,0]<stdout>:       11    0.000    0.000    0.000    0.000 threading.py:255(_release_save)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 dataloader.py:758(<genexpr>)
[1,0]<stdout>:       12    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1264(close)
[1,0]<stdout>:       11    0.000    0.000    0.000    0.000 threading.py:258(_acquire_restore)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:560(__new__)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:215(_fileobj_lookup)
[1,0]<stdout>:       25    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:270(notify)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 threading.py:1095(daemon)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:234(ident)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {function socket.close at 0x7f9021419c10}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:80(Semaphore)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:296(<listcomp>)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 popen_forkserver.py:20(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.001    0.000 resource_tracker.py:149(unregister)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 spawn.py:132(_check_not_importing_main)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:162(__init__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:168(fileno)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:202(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:944(_stop)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 process.py:94(<genexpr>)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:173(close)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:153(is_alive)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:734(_newname)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:63(__init__)
[1,0]<stdout>:       27    0.000    0.000    0.000    0.000 context.py:187(get_context)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {method 'register' of 'select.poll' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:576(_get_free_pos)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:492(_real_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:309(__len__)
[1,0]<stdout>:       28    0.000    0.000    0.000    0.000 process.py:37(current_process)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 {built-in method select.poll}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:229(__enter__)
[1,0]<stdout>:        5    0.000    0.000    0.001    0.000 synchronize.py:144(__init__)
[1,0]<stdout>:       20    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 process.py:99(_check_closed)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:296(notify_all)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:382(current_device)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:496(close)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:134(_check_closed)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDevice}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:219(__getstate__)
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
[1,0]<stdout>:       29    0.000    0.000    0.000    0.000 util.py:44(sub_debug)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:47(is_available)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 context.py:249(get_start_method)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._remove_worker_pids}
[1,0]<stdout>:       18    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:136(disable_on_exception)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 os.py:748(encode)
[1,0]<stdout>:        1    0.000    0.000   12.209   12.209 dataloader.py:287(__iter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:329(status_printer)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:238(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:75(Condition)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:519(set)
[1,0]<stdout>:       55    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method math.ceil}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:112(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._set_worker_pids}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 __init__.py:128(is_initialized)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1285(fp_write)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:212(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_multiprocessing.SemLock' objects}
[1,1]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stdout>:        8    0.000    0.000    0.000    0.000 selectors.py:275(_key_from_fd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:97(__exit__)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:297(_index_sampler)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1156(__hash__)
[1,0]<stdout>:        5    0.000    0.000    0.000    0.000 connection.py:360(_close)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 context.py:90(Event)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:323(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:205(daemon)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 util.py:461(close_fds)
[1,0]<stdout>:       14    0.000    0.000    0.000    0.000 selectors.py:199(__enter__)
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:158(readable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 sampler.py:216(__len__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_getDeviceCount}
[1,0]<stdout>:       10    0.000    0.000    0.000    0.000 connection.py:130(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:232(__exit__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:979(join)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
[1,0]<stdout>:       16    0.000    0.000    0.000    0.000 connection.py:163(writable)
[1,0]<stdout>:        8    0.000    0.000    0.000    0.000 connection.py:933(<listcomp>)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 {built-in method posix.dup}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 signal_handling.py:47(_set_SIGCHLD_handler)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 dataloader.py:1100(__del__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:189(name)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 synchronize.py:125(__init__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 std.py:115(__exit__)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 resource_tracker.py:66(getfd)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _weakrefset.py:106(remove)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 process.py:213(authkey)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:88(__len__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:171(__eq__)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 container.py:7(__getattr__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:215(_supports_unicode)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 distributed.py:91(set_epoch)
[1,0]<stdout>:        9    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 utils.py:101(wrapper_setattr)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 dataloader.py:293(_auto_collation)
[1,0]<stdout>:        3    0.000    0.000    0.000    0.000 std.py:228(__init__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:201(_is_utf)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:657(get_lock)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 _monitor.py:94(report)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 dataloader.py:248(multiprocessing_context)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 queue.py:205(_init)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 basics.py:223(rank)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 std.py:1152(_comparable)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:74(__eq__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isDriverSufficient}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:579(<setcomp>)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 utils.py:88(__getattr__)
[1,0]<stdout>:        6    0.000    0.000    0.000    0.000 {method 'clear' of 'collections.deque' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:105(__init__)
[1,0]<stdout>:        2    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 utils.py:231(_screen_shape_wrapper)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
[1,0]<stdout>:        4    0.000    0.000    0.000    0.000 socket.py:235(__enter__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 synchronize.py:235(_make_methods)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1146(__del__)
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '_is_mine' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_multiprocessing.SemLock' objects}
[1,0]<stdout>:        1    0.000    0.000    0.000    0.000 std.py:1300(<lambda>)
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:this epoch's train spend:756.1426749229431s
[1,0]<stderr>:
[1,0]<stderr>:test:   0%|          | 0/79 [00:00<?, ?it/s][1,0]<stderr>:test:   1%|▏         | 1/79 [00:39<51:35, 39.69s/it][1,1]<stderr>:test:   1%|▏         | 1/79 [00:39<51:56, 39.96s/it][1,0]<stderr>:test:   3%|▎         | 2/79 [00:40<21:13, 16.54s/it][1,1]<stderr>:test:   3%|▎         | 2/79 [00:40<21:21, 16.65s/it][1,0]<stderr>:test:   4%|▍         | 3/79 [00:40<11:34,  9.14s/it][1,1]<stderr>:test:   4%|▍         | 3/79 [00:40<11:39,  9.20s/it][1,0]<stderr>:test:   5%|▌         | 4/79 [00:40<07:04,  5.66s/it][1,1]<stderr>:test:   5%|▌         | 4/79 [00:40<07:07,  5.70s/it][1,1]<stderr>:test:   6%|▋         | 5/79 [00:43<05:39,  4.59s/it][1,0]<stderr>:test:   6%|▋         | 5/79 [00:43<05:47,  4.69s/it][1,1]<stderr>:test:   8%|▊         | 6/79 [00:43<03:49,  3.14s/it][1,0]<stderr>:test:   8%|▊         | 6/79 [00:43<03:54,  3.21s/it][1,1]<stderr>:test:   9%|▉         | 7/79 [00:44<02:40,  2.22s/it][1,0]<stderr>:test:   9%|▉         | 7/79 [00:44<02:43,  2.27s/it][1,1]<stderr>:test:  10%|█         | 8/79 [00:44<01:55,  1.62s/it][1,0]<stderr>:test:  10%|█         | 8/79 [00:44<01:57,  1.65s/it][1,1]<stderr>:test:  11%|█▏        | 9/79 [00:46<01:56,  1.66s/it][1,0]<stderr>:test:  11%|█▏        | 9/79 [00:46<01:56,  1.67s/it][1,1]<stderr>:test:  13%|█▎        | 10/79 [00:46<01:26,  1.25s/it][1,0]<stderr>:test:  13%|█▎        | 10/79 [00:46<01:26,  1.25s/it][1,1]<stderr>:test:  14%|█▍        | 11/79 [00:46<01:05,  1.03it/s][1,0]<stderr>:test:  14%|█▍        | 11/79 [00:47<01:10,  1.04s/it][1,1]<stderr>:test:  15%|█▌        | 12/79 [00:47<00:51,  1.29it/s][1,0]<stderr>:test:  15%|█▌        | 12/79 [00:47<00:55,  1.21it/s][1,1]<stderr>:test:  16%|█▋        | 13/79 [00:49<01:14,  1.13s/it][1,1]<stderr>:test:  18%|█▊        | 14/79 [00:49<00:57,  1.12it/s][1,0]<stderr>:test:  16%|█▋        | 13/79 [00:49<01:21,  1.23s/it][1,1]<stderr>:test:  19%|█▉        | 15/79 [00:49<00:46,  1.39it/s][1,0]<stderr>:test:  18%|█▊        | 14/79 [00:50<01:02,  1.04it/s][1,1]<stderr>:test:  20%|██        | 16/79 [00:50<00:38,  1.66it/s][1,0]<stderr>:test:  19%|█▉        | 15/79 [00:50<00:49,  1.30it/s][1,0]<stderr>:test:  20%|██        | 16/79 [00:50<00:40,  1.57it/s][1,1]<stderr>:test:  22%|██▏       | 17/79 [00:52<00:59,  1.04it/s][1,1]<stderr>:test:  23%|██▎       | 18/79 [00:52<00:46,  1.30it/s][1,0]<stderr>:test:  22%|██▏       | 17/79 [00:53<01:10,  1.13s/it][1,1]<stderr>:test:  24%|██▍       | 19/79 [00:53<00:46,  1.30it/s][1,0]<stderr>:test:  23%|██▎       | 18/79 [00:53<00:54,  1.12it/s][1,1]<stderr>:test:  25%|██▌       | 20/79 [00:53<00:37,  1.57it/s][1,0]<stderr>:test:  24%|██▍       | 19/79 [00:53<00:43,  1.39it/s][1,0]<stderr>:test:  25%|██▌       | 20/79 [00:53<00:35,  1.66it/s][1,1]<stderr>:test:  27%|██▋       | 21/79 [00:54<00:47,  1.23it/s][1,1]<stderr>:test:  28%|██▊       | 22/79 [00:55<00:38,  1.50it/s][1,1]<stderr>:test:  29%|██▉       | 23/79 [00:55<00:39,  1.42it/s][1,0]<stderr>:test:  27%|██▋       | 21/79 [00:56<00:59,  1.03s/it][1,1]<stderr>:test:  30%|███       | 24/79 [00:56<00:32,  1.68it/s][1,0]<stderr>:test:  28%|██▊       | 22/79 [00:56<00:46,  1.22it/s][1,0]<stderr>:test:  29%|██▉       | 23/79 [00:56<00:37,  1.48it/s][1,0]<stderr>:test:  30%|███       | 24/79 [00:57<00:31,  1.75it/s][1,1]<stderr>:test:  32%|███▏      | 25/79 [00:58<00:55,  1.04s/it][1,1]<stderr>:test:  33%|███▎      | 26/79 [00:58<00:43,  1.21it/s][1,1]<stderr>:test:  34%|███▍      | 27/79 [00:59<00:39,  1.33it/s][1,1]<stderr>:test:  35%|███▌      | 28/79 [00:59<00:31,  1.60it/s][1,0]<stderr>:test:  32%|███▏      | 25/79 [00:59<01:02,  1.16s/it][1,0]<stderr>:test:  33%|███▎      | 26/79 [00:59<00:48,  1.10it/s][1,0]<stderr>:test:  34%|███▍      | 27/79 [01:00<00:38,  1.36it/s][1,0]<stderr>:test:  35%|███▌      | 28/79 [01:00<00:31,  1.63it/s][1,1]<stderr>:test:  37%|███▋      | 29/79 [01:00<00:42,  1.18it/s][1,1]<stderr>:test:  38%|███▊      | 30/79 [01:01<00:33,  1.45it/s][1,1]<stderr>:test:  39%|███▉      | 31/79 [01:02<00:46,  1.04it/s][1,1]<stderr>:test:  41%|████      | 32/79 [01:03<00:36,  1.30it/s][1,0]<stderr>:test:  37%|███▋      | 29/79 [01:03<01:00,  1.20s/it][1,0]<stderr>:test:  38%|███▊      | 30/79 [01:03<00:46,  1.06it/s][1,0]<stderr>:test:  39%|███▉      | 31/79 [01:03<00:36,  1.31it/s][1,0]<stderr>:test:  41%|████      | 32/79 [01:04<00:29,  1.59it/s][1,1]<stderr>:test:  42%|████▏     | 33/79 [01:04<00:41,  1.12it/s][1,1]<stderr>:test:  43%|████▎     | 34/79 [01:04<00:32,  1.38it/s][1,1]<stderr>:test:  44%|████▍     | 35/79 [01:05<00:35,  1.23it/s][1,0]<stderr>:test:  42%|████▏     | 33/79 [01:05<00:43,  1.05it/s][1,1]<stderr>:test:  46%|████▌     | 36/79 [01:05<00:28,  1.50it/s][1,0]<stderr>:test:  43%|████▎     | 34/79 [01:06<00:34,  1.30it/s][1,0]<stderr>:test:  44%|████▍     | 35/79 [01:06<00:27,  1.57it/s][1,1]<stderr>:test:  47%|████▋     | 37/79 [01:06<00:27,  1.55it/s][1,0]<stderr>:test:  46%|████▌     | 36/79 [01:06<00:23,  1.84it/s][1,1]<stderr>:test:  48%|████▊     | 38/79 [01:06<00:22,  1.81it/s][1,1]<stderr>:test:  49%|████▉     | 39/79 [01:09<00:41,  1.05s/it][1,0]<stderr>:test:  47%|████▋     | 37/79 [01:09<00:45,  1.08s/it][1,1]<stderr>:test:  51%|█████     | 40/79 [01:09<00:32,  1.20it/s][1,0]<stderr>:test:  48%|████▊     | 38/79 [01:09<00:35,  1.17it/s][1,1]<stderr>:test:  52%|█████▏    | 41/79 [01:09<00:26,  1.45it/s][1,0]<stderr>:test:  49%|████▉     | 39/79 [01:09<00:27,  1.43it/s][1,1]<stderr>:test:  53%|█████▎    | 42/79 [01:10<00:21,  1.74it/s][1,0]<stderr>:test:  51%|█████     | 40/79 [01:10<00:22,  1.70it/s][1,0]<stderr>:test:  52%|█████▏    | 41/79 [01:12<00:37,  1.01it/s][1,1]<stderr>:test:  54%|█████▍    | 43/79 [01:12<00:39,  1.10s/it][1,0]<stderr>:test:  53%|█████▎    | 42/79 [01:12<00:29,  1.26it/s][1,1]<stderr>:test:  56%|█████▌    | 44/79 [01:12<00:30,  1.15it/s][1,0]<stderr>:test:  54%|█████▍    | 43/79 [01:12<00:24,  1.46it/s][1,1]<stderr>:test:  57%|█████▋    | 45/79 [01:13<00:24,  1.41it/s][1,0]<stderr>:test:  56%|█████▌    | 44/79 [01:13<00:20,  1.73it/s][1,1]<stderr>:test:  58%|█████▊    | 46/79 [01:13<00:21,  1.56it/s][1,0]<stderr>:test:  57%|█████▋    | 45/79 [01:15<00:38,  1.12s/it][1,1]<stderr>:test:  59%|█████▉    | 47/79 [01:15<00:36,  1.15s/it][1,0]<stderr>:test:  58%|█████▊    | 46/79 [01:15<00:29,  1.13it/s][1,1]<stderr>:test:  61%|██████    | 48/79 [01:16<00:28,  1.11it/s][1,0]<stderr>:test:  59%|█████▉    | 47/79 [01:16<00:23,  1.37it/s][1,1]<stderr>:test:  62%|██████▏   | 49/79 [01:16<00:21,  1.37it/s][1,0]<stderr>:test:  61%|██████    | 48/79 [01:16<00:18,  1.64it/s][1,1]<stderr>:test:  63%|██████▎   | 50/79 [01:16<00:17,  1.64it/s][1,0]<stderr>:test:  62%|██████▏   | 49/79 [01:18<00:33,  1.10s/it][1,0]<stderr>:test:  63%|██████▎   | 50/79 [01:19<00:25,  1.15it/s][1,1]<stderr>:test:  65%|██████▍   | 51/79 [01:19<00:32,  1.18s/it][1,1]<stderr>:test:  66%|██████▌   | 52/79 [01:19<00:24,  1.09it/s][1,1]<stderr>:test:  67%|██████▋   | 53/79 [01:19<00:19,  1.34it/s][1,0]<stderr>:test:  65%|██████▍   | 51/79 [01:20<00:26,  1.07it/s][1,1]<stderr>:test:  68%|██████▊   | 54/79 [01:20<00:15,  1.61it/s][1,0]<stderr>:test:  66%|██████▌   | 52/79 [01:20<00:20,  1.33it/s][1,0]<stderr>:test:  67%|██████▋   | 53/79 [01:21<00:23,  1.12it/s][1,0]<stderr>:test:  68%|██████▊   | 54/79 [01:22<00:18,  1.38it/s][1,1]<stderr>:test:  70%|██████▉   | 55/79 [01:22<00:29,  1.23s/it][1,1]<stderr>:test:  71%|███████   | 56/79 [01:23<00:22,  1.04it/s][1,1]<stderr>:test:  72%|███████▏  | 57/79 [01:23<00:16,  1.30it/s][1,1]<stderr>:test:  73%|███████▎  | 58/79 [01:23<00:13,  1.56it/s][1,0]<stderr>:test:  70%|██████▉   | 55/79 [01:24<00:27,  1.13s/it][1,0]<stderr>:test:  71%|███████   | 56/79 [01:24<00:20,  1.12it/s][1,0]<stderr>:test:  72%|███████▏  | 57/79 [01:25<00:17,  1.28it/s][1,0]<stderr>:test:  73%|███████▎  | 58/79 [01:25<00:13,  1.55it/s][1,1]<stderr>:test:  75%|███████▍  | 59/79 [01:26<00:21,  1.09s/it][1,1]<stderr>:test:  76%|███████▌  | 60/79 [01:26<00:16,  1.16it/s][1,1]<stderr>:test:  77%|███████▋  | 61/79 [01:26<00:12,  1.43it/s][1,1]<stderr>:test:  78%|███████▊  | 62/79 [01:27<00:10,  1.70it/s][1,0]<stderr>:test:  75%|███████▍  | 59/79 [01:28<00:30,  1.54s/it][1,0]<stderr>:test:  76%|███████▌  | 60/79 [01:29<00:22,  1.17s/it][1,0]<stderr>:test:  77%|███████▋  | 61/79 [01:29<00:16,  1.09it/s][1,1]<stderr>:test:  80%|███████▉  | 63/79 [01:29<00:20,  1.27s/it][1,0]<stderr>:test:  78%|███████▊  | 62/79 [01:29<00:12,  1.35it/s][1,1]<stderr>:test:  81%|████████  | 64/79 [01:30<00:14,  1.02it/s][1,1]<stderr>:test:  82%|████████▏ | 65/79 [01:30<00:11,  1.27it/s][1,1]<stderr>:test:  84%|████████▎ | 66/79 [01:30<00:08,  1.53it/s][1,0]<stderr>:test:  80%|███████▉  | 63/79 [01:32<00:19,  1.22s/it][1,0]<stderr>:test:  81%|████████  | 64/79 [01:32<00:14,  1.05it/s][1,0]<stderr>:test:  82%|████████▏ | 65/79 [01:32<00:10,  1.31it/s][1,0]<stderr>:test:  84%|████████▎ | 66/79 [01:33<00:08,  1.58it/s][1,1]<stderr>:test:  85%|████████▍ | 67/79 [01:33<00:16,  1.35s/it][1,1]<stderr>:test:  86%|████████▌ | 68/79 [01:34<00:11,  1.04s/it][1,1]<stderr>:test:  87%|████████▋ | 69/79 [01:34<00:08,  1.21it/s][1,1]<stderr>:test:  89%|████████▊ | 70/79 [01:34<00:06,  1.47it/s][1,0]<stderr>:test:  85%|████████▍ | 67/79 [01:34<00:11,  1.05it/s][1,0]<stderr>:test:  86%|████████▌ | 68/79 [01:35<00:08,  1.31it/s][1,0]<stderr>:test:  87%|████████▋ | 69/79 [01:35<00:06,  1.57it/s][1,0]<stderr>:test:  89%|████████▊ | 70/79 [01:35<00:04,  1.84it/s][1,1]<stderr>:test:  90%|████████▉ | 71/79 [01:37<00:10,  1.33s/it][1,1]<stderr>:test:  91%|█████████ | 72/79 [01:38<00:07,  1.03s/it][1,1]<stderr>:test:  92%|█████████▏| 73/79 [01:38<00:04,  1.22it/s][1,1]<stderr>:test:  94%|█████████▎| 74/79 [01:38<00:03,  1.48it/s][1,0]<stderr>:test:  90%|████████▉ | 71/79 [01:38<00:09,  1.23s/it][1,0]<stderr>:test:  91%|█████████ | 72/79 [01:39<00:06,  1.04it/s][1,0]<stderr>:test:  92%|█████████▏| 73/79 [01:39<00:04,  1.30it/s][1,0]<stderr>:test:  94%|█████████▎| 74/79 [01:39<00:03,  1.57it/s][1,1]<stderr>:test:  95%|█████████▍| 75/79 [01:40<00:04,  1.04s/it][1,1]<stderr>:test:  96%|█████████▌| 76/79 [01:40<00:02,  1.21it/s][1,1]<stderr>:test:  97%|█████████▋| 77/79 [01:41<00:01,  1.48it/s][1,1]<stderr>:test:  99%|█████████▊| 78/79 [01:41<00:00,  1.74it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:41<00:00,  2.27it/s][1,1]<stderr>:test: 100%|██████████| 79/79 [01:41<00:00,  1.29s/it][1,0]<stderr>:test:  95%|█████████▍| 75/79 [01:42<00:04,  1.17s/it][1,0]<stderr>:test:  96%|█████████▌| 76/79 [01:42<00:02,  1.09it/s][1,0]<stderr>:test:  97%|█████████▋| 77/79 [01:42<00:01,  1.35it/s][1,0]<stderr>:test:  99%|█████████▊| 78/79 [01:43<00:00,  1.62it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:43<00:00,  2.12it/s][1,0]<stderr>:test: 100%|██████████| 79/79 [01:43<00:00,  1.31s/it][1,0]<stdout>:
[1,0]<stdout>:[acc/test_top1] = 0.000000
[1,0]<stdout>:[acc/test_top5] = 0.370000
[1,0]<stdout>:[acc/test_top1_best] = 0.000000
[1,1]<stdout>:spend all time:756.1440608501434s
[1,0]<stdout>:[save_path] = runs/[imagenet.vgg16_bn+methods.[wm0+fp16+int32]].np2/checkpoints
[1,0]<stdout>:spend all time:756.1426749229431s
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  Environment Summary
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:PyTorch 1.6.0 compiled w/ CUDA 10.1
[1,0]<stdout>:Running with Python 3.8 and CUDA 10.1.105
[1,0]<stdout>:
[1,0]<stdout>:`pip3 list` truncated output:
[1,0]<stdout>:numpy==1.21.2
[1,0]<stdout>:pytorch-lightning==1.5.10
[1,0]<stdout>:torch==1.6.0
[1,0]<stdout>:torchmetrics==0.7.2
[1,0]<stdout>:torchvision==0.7.0
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  cProfile output
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:         870806 function calls (861365 primitive calls) in 897.249 seconds
[1,0]<stdout>:
[1,0]<stdout>:   Ordered by: internal time
[1,0]<stdout>:   List reduced from 2259 to 15 due to restriction <15>
[1,0]<stdout>:
[1,0]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,0]<stdout>:        1  826.575  826.575  826.575  826.575 {method 'enable' of '_lsprof.Profiler' objects}
[1,0]<stdout>:      595   49.497    0.083   49.497    0.083 {method 'acquire' of '_thread.lock' objects}
[1,0]<stdout>:     3377    5.159    0.002    5.159    0.002 {built-in method posix.stat}
[1,0]<stdout>:       97    3.205    0.033    3.205    0.033 {method 'cuda' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:        9    1.991    0.221    1.991    0.221 {method 'write' of '_io.BufferedWriter' objects}
[1,0]<stdout>:      292    1.900    0.007    1.900    0.007 {method 'read' of '_io.BufferedReader' objects}
[1,0]<stdout>:      277    1.875    0.007    1.875    0.007 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,0]<stdout>:      292    1.325    0.005    1.325    0.005 {built-in method io.open_code}
[1,0]<stdout>:       16    1.114    0.070    1.114    0.070 {method 'normal_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       32    0.777    0.024    0.777    0.024 {method 'uniform_' of 'torch._C._TensorBase' objects}
[1,0]<stdout>:       18    0.643    0.036    0.643    0.036 {built-in method tensor}
[1,0]<stdout>:     1027    0.441    0.000    0.441    0.000 {built-in method conv2d}
[1,0]<stdout>:        1    0.392    0.392    0.392    0.392 /gs/home/lwang20/anaconda3/env/lib/python3.8/site-packages/horovod/common/basics.py:48(init)
[1,0]<stdout>:      237    0.330    0.001    0.330    0.001 {built-in method addmm}
[1,0]<stdout>:       24    0.268    0.011    0.303    0.013 {built-in method _imp.create_dynamic}
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  autograd profiler output (CPU mode)
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:        top 15 events sorted by cpu_time_total
[1,0]<stdout>:
[1,0]<stdout>:------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Name                                  Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,0]<stdout>:------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:CudnnConvolutionBackward              6.69%            1.447s           6.69%            1.447s           1.447s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward            6.69%            1.447s           6.69%            1.447s           1.447s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward_input      6.69%            1.447s           6.69%            1.447s           1.447s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:CudnnConvolutionBackward              6.69%            1.447s           6.69%            1.447s           1.447s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward            6.69%            1.447s           6.69%            1.447s           1.447s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward_input      6.69%            1.447s           6.69%            1.447s           1.447s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:CudnnConvolutionBackward              6.67%            1.443s           6.67%            1.443s           1.443s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward            6.67%            1.443s           6.67%            1.443s           1.443s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward_input      6.67%            1.443s           6.67%            1.443s           1.443s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:CudnnConvolutionBackward              6.66%            1.440s           6.66%            1.440s           1.440s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward            6.66%            1.440s           6.66%            1.440s           1.440s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward_input      6.66%            1.440s           6.66%            1.440s           1.440s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:CudnnConvolutionBackward              6.62%            1.433s           6.62%            1.433s           1.433s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_back[1,0]<stdout>:ward            6.62%            1.433s           6.62%            1.433s           1.433s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:cudnn_convolution_backward_input      6.62%            1.432s           6.62%            1.432s           1.432s           NaN              0.000us          0.000us          1                []                                             
[1,0]<stdout>:------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Self CPU time total: 21.627s
[1,0]<stdout>:CUDA time total: 0.000us
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:  autograd profiler output (CUDA mode)
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:        top 15 events sorted by cpu_time_total
[1,0]<stdout>:
[1,0]<stdout>:	Because the autograd profiler uses the CUDA event API,
[1,0]<stdout>:	the CUDA time column reports approximately max(cuda_time, cpu_time).
[1,0]<stdout>:	Please ignore this output if your code does not use CUDA.
[1,0]<stdout>:
[1,0]<stdout>:----------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Name              Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,0]<stdout>:----------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:ViewBackward      6.71%            1.443s           6.71%            1.443s           1.443s           20.00%           32.000us         32.000us         1                []                                             
[1,0]<stdout>:reshape           6.71%            1.443s           6.71%            1.443s           1.443s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:view              6.71%            1.443s           6.71%            1.443s           1.443s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:ViewBackward      6.68%            1.437s           6.68%            1.437s           1.437s           20.00%           32.000us         32.000us         1                []                                             
[1,0]<stdout>:reshape           6.68%            1.437s           6.68%            1.437s           1.437s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:view              6.68%            1.437s           6.68%            1.437s           1.437s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:ViewBackward      6.67%            1.436s           6.67%            1.436s           1.436s           10.00%           16.000us         16.000us         1                []                                             
[1,0]<stdout>:reshape           6.67%            1.436s           6.67%            1.436s           1.436s           10.00%           16.000us         16.000us         1                []                                             
[1,0]<stdout>:view              6.67%            1.436s           6.67%            1.436s           1.436s           10.00%           16.000us         16.000us         1                []                                             
[1,0]<stdout>:ViewBackward      6.67%            1.434s           6.67%            1.434s           1.434s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:reshape           6.67%            1.434s           6.67%            1.434s           1.434s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:view              6.67%            1.434s           6.67%            1.434s           1.434s           0.00%            0.000us          0.000us          1                []                                             
[1,0]<stdout>:ViewBackward      6.60%            1.420s           6.60%            1.420s           1.420s           10.00%           16.000us         16.000us         1                []                                             
[1,0]<stdout>:reshape           6.60%            1.420s           6.60%            1.420s           1.420s           10.00%           16.000us         16.000us         1[1,0]<stdout>:                []                                             
[1,0]<stdout>:view              6.60%            1.420s           6.60%            1.420s           1.420s           10.00%           16.000us         16.000us         1                []                                             
[1,0]<stdout>:----------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,0]<stdout>:Self CPU time total: 21.506s
[1,0]<stdout>:CUDA time total: 160.000us
[1,0]<stdout>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  Environment Summary
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:PyTorch 1.6.0 compiled w/ CUDA 10.1
[1,1]<stdout>:Running with Python 3.8 and CUDA 10.1.105
[1,1]<stdout>:
[1,1]<stdout>:`pip3 list` truncated output:
[1,1]<stdout>:numpy==1.21.2
[1,1]<stdout>:pytorch-lightning==1.5.10
[1,1]<stdout>:torch==1.6.0
[1,1]<stdout>:torchmetrics==0.7.2
[1,1]<stdout>:torchvision==0.7.0
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  cProfile output
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:         856080 function calls (847111 primitive calls) in 897.248 seconds
[1,1]<stdout>:
[1,1]<stdout>:   Ordered by: internal time
[1,1]<stdout>:   List reduced from 2080 to 15 due to restriction <15>
[1,1]<stdout>:
[1,1]<stdout>:   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
[1,1]<stdout>:        1  827.693  827.693  827.693  827.693 {method 'enable' of '_lsprof.Profiler' objects}
[1,1]<stdout>:      595   49.160    0.083   49.160    0.083 {method 'acquire' of '_thread.lock' objects}
[1,1]<stdout>:     3177    4.771    0.002    4.771    0.002 {built-in method posix.stat}
[1,1]<stdout>:       97    3.233    0.033    3.233    0.033 {method 'cuda' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      277    2.295    0.008    2.295    0.008 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_wait_and_clear}
[1,1]<stdout>:        5    2.017    0.403    2.017    0.403 {method 'write' of '_io.BufferedWriter' objects}
[1,1]<stdout>:      245    1.521    0.006    1.521    0.006 {method 'read' of '_io.BufferedReader' objects}
[1,1]<stdout>:       16    1.115    0.070    1.115    0.070 {method 'normal_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:      245    1.071    0.004    1.071    0.004 {built-in method io.open_code}
[1,1]<stdout>:       32    0.778    0.024    0.778    0.024 {method 'uniform_' of 'torch._C._TensorBase' objects}
[1,1]<stdout>:     1027    0.427    0.000    0.427    0.000 {built-in method conv2d}
[1,1]<stdout>:        1    0.391    0.391    0.391    0.391 /gs/home/lwang20/anaconda3/env/lib/python3.8/site-packages/horovod/common/basics.py:48(init)
[1,1]<stdout>:       18    0.349    0.019    0.349    0.019 {built-in method tensor}
[1,1]<stdout>:      237    0.342    0.001    0.342    0.001 {built-in method addmm}
[1,1]<stdout>:      142    0.173    0.001    0.173    0.001 {built-in method horovod.torch.mpi_lib_v2.horovod_torch_broadcast_async_torch_cuda_FloatTensor}
[1,1]<stdout>:
[1,1]<stdout>:
[1,0]<stderr>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  autograd profiler output (CPU mode)
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:        top 15 events sorted by cpu_time_total
[1,1]<stdout>:
[1,1]<stdout>:------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Name                                  Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,1]<stdout>:------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:CudnnConvolutionBackward              6.70%            1.444s           6.70%            1.444s           1.444s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward            6.70%            1.444s           6.70%            1.444s           1.444s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward_input      6.70%            1.444s           6.70%            1.444s           1.444s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:CudnnConvolutionBackward              6.70%            1.444s           6.70%            1.444s           1.444s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward            6.70%            1.444s           6.70%            1.444s           1.444s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward_input      6.70%            1.444s           6.70%            1.444s           1.444s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:CudnnConvolutionBackward              6.67%            1.437s           6.67%            1.437s           1.437s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward            6.67%            1.437s           6.67%            1.437s           1.437s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward_input      6.67%            1.437s           6.67%            1.437s           1.437s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:CudnnConvolutionBackward              6.66%            1.436s           6.66%            1.436s           1.436s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward            6.66%            1.436s           6.66%            1.436s           1.436s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward_input      6.66%            1.435s           6.66%            1.435s           1.435s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:CudnnConvolutionBackward              6.60%            1.421s           6.60%            1.421s           1.421s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_back[1,1]<stdout>:ward            6.60%            1.421s           6.60%            1.421s           1.421s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:cudnn_convolution_backward_input      6.60%            1.421s           6.60%            1.421s           1.421s           NaN              0.000us          0.000us          1                []                                             
[1,1]<stdout>:------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Self CPU time total: 21.547s
[1,1]<stdout>:CUDA time total: 0.000us
[1,1]<stdout>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:  autograd profiler output (CUDA mode)
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:        top 15 events sorted by cpu_time_total
[1,1]<stdout>:
[1,1]<stdout>:	Because the autograd profiler uses the CUDA event API,
[1,1]<stdout>:	the CUDA time column reports approximately max(cuda_time, cpu_time).
[1,1]<stdout>:	Please ignore this output if your code does not use CUDA.
[1,1]<stdout>:
[1,1]<stdout>:--------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Name                  Self CPU total %  Self CPU total   CPU total %      CPU total        CPU time avg     CUDA total %     CUDA total       CUDA time avg    Number of Calls  Input Shapes                                   
[1,1]<stdout>:--------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:HorovodAllreduce      7.33%            1.582s           7.33%            1.582s           1.582s           99.99%           1.582s           1.582s           1                []                                             
[1,1]<stdout>:ViewBackward          6.68%            1.443s           6.68%            1.443s           1.443s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:reshape               6.68%            1.443s           6.68%            1.443s           1.443s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:view                  6.68%            1.443s           6.68%            1.443s           1.443s           0.00%            0.000us          0.000us          1                []                                             
[1,1]<stdout>:ViewBackward          6.66%            1.438s           6.66%            1.438s           1.438s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:reshape               6.66%            1.438s           6.66%            1.438s           1.438s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:view                  6.66%            1.438s           6.66%            1.438s           1.438s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:ViewBackward          6.61%            1.428s           6.61%            1.428s           1.428s           0.00%            24.000us         24.000us         1                []                                             
[1,1]<stdout>:reshape               6.61%            1.428s           6.61%            1.428s           1.428s           0.00%            8.000us          8.000us          1                []                                             
[1,1]<stdout>:view                  6.61%            1.428s           6.61%            1.428s           1.428s           0.00%            8.000us          8.000us          1                []                                             
[1,1]<stdout>:ViewBackward          6.56%            1.416s           6.56%            1.416s           1.416s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:reshape               6.56%            1.416s           6.56%            1.416s           1.416s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:view                  6.56%            1.416s           6.56%            1.416s           1.416s           0.00%            8.000us          8.000us          1                []                                             
[1,1]<stdout>:ViewBackward          6.56%            1.415s           6.56%            1.415s           1[1,1]<stdout>:.415s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:ViewBackward          6.56%            1.415s           6.56%            1.415s           1.415s           0.00%            16.000us         16.000us         1                []                                             
[1,1]<stdout>:--------------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------  ---------------------------------------------  
[1,1]<stdout>:Self CPU time total: 21.588s
[1,1]<stdout>:CUDA time total: 1.582s
[1,1]<stdout>:
[1,1]<stderr>:

real	48m26.714s
user	92m14.088s
sys	48m7.253s
